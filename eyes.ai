%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 24.2.3
%%For: (Neslihan Dogan) ()
%%Title: (eyes.ai)
%%CreationDate: 9/29/2020 4:14 AM
%%Canvassize: 16383
%%BoundingBox: 25 -394 393 -33
%%HiResBoundingBox: 25.3234 -393.3445 392.8948 -33.2606
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 213.5 -213.5 213.5 -213.5
%AI3_TileBox: -84.9999 -633.5901 510.02 208.2699
%AI3_DocumentPreview: None
%AI5_ArtSize: 425.2002 425.2002
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -207 5.60829 2.17 1616 914 18 0 0 46 121 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:-93 -609
%AI7_GridSettings: 16 1 16 1 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 128 8
%%BeginData: 9973 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD70FF7D272727A8FD79FFA827F827F827F8A8FD77FF7D27F82752
%7D272752FD76FF5227F8277DFFFF52F827A8FD74FF5227F827A8FFFFFF7D
%2727FD73FFA82727F827A8FD04FF7DF827A8FD71FFA8F827F852FD06FF7D
%2727FD70FFA852F827F87DFD07FF7DF827A8FD6EFFA851F82727A8FD08FF
%7D2727FD6EFF5227F82727FD0AFF7DF827A8FD6BFFA82727F8277DFD0BFF
%7D27F8FD6AFFA852F827F827A8FD0CFFA8F827A8FD68FF7D27F827267DFD
%0EFFA127F8FD66FFA87DF827F82752FD10FFA8F827A8FD63FFA85227F827
%F852A8FD11FF7D27F8A8FD45FFA8FFA8FD18FFA87D52F827F82727A8FD13
%FFA8F827A8FD43FF7D27272752277D7DA8A8FD0FFFA8A87D52F8272627F8
%52A8FD15FFA82726A8FD41FFA827F827F827F827F827F827F8272752527D
%527D7D7D52524B522727F827F827F82752A8FD17FFA8F827A8FD41FF52F8
%27527D7D7D52512727F827F827F827F827F827F827F827F827F827F85276
%A8FD1AFFA827F8A8FD40FF7DF82752FD05FFA8FFA8A87D7D52522727F827
%F827F8272752527D7DA8FD1DFFA8F8277DFD3FFFA8262727FD0FFFA8FFA8
%FFA8FFA8FD23FFA827F8A8FD3FFF2727F8A8FD39FFA8F8277DFD3EFF5227
%F87DFD3AFFA827F8A8FD3DFF5227F852FD3BFFA8F8277DFD3CFF7D272652
%FD3CFFA82726A8FD3BFF7D27F827A8FD11FFA8FFA8FD29FFF8277DFD3AFF
%7D27F827A8FD0FFFA87D52272751527DA8FD25FFA827F8A8FD39FF5227F8
%27A8FD0DFFA87D2727F827F827F827F82752FD24FFA8F8277DFD38FF5227
%F827A8FD0DFFA8522627F827277D7D7D2727F82727A8FD22FFA827F8FD38
%FF2727F827A8FD0DFFA827F827277DA8FD05FFA852F827F8A8FD21FF7DF8
%27A8FD36FF2727F852A8FD0EFF7DF82752FD0AFF7DF82726FD21FF522727
%FD35FF7DF827F852A8FD0FFFF82752FD0CFF7DF82752FD20FF27F852FD34
%FF7DF827267DFD10FFA82726A8FD0DFF522652FD1FFFA8F8277DFD32FF7D
%27F827F8A8FD11FFA8F82727FD0DFF522727FD1FFF5227F8FD0CFFA8A8A8
%FD23FF7D27F82752FD14FF27F8277DFD0CFF52F852FD1EFFA827F87DFD0B
%FF2727F8277DFD20FFA82727F8277DFD15FF7D27F827A8FD0AFFA8F82752
%FD1EFF27F827A8FD0BFF27F82726277DFD1EFF7DF8272652A8FD17FF7D27
%2652FD09FFA82727F8FD1EFF7DF8277DFD0CFF5227F827F8277DFD1BFF7D
%27F827F87DFD1AFF5227F87DFD07FF7DF827F8A8FD1DFF7DF82727FD0DFF
%A8F8275252F8277DFD19FF5227F82752A8FD1CFF2727F852A8FFFFFF7D52
%F827F8A8FD1DFF7DF82727FD0EFFA827F852A827F827A8FD15FFA876F827
%F8277DFD1FFF2727F82727522727F82727A8FD1CFFA852F827F8A8FD0FFF
%5227F8FFA827F827A8FD13FF7D27F827267DA8FD21FF5227F8272627F827
%7DFD1DFF7D27262727FD11FFA8F82752FFA127F827A8FD10FFA82727F827
%27A8FD24FFA87D525252A8A8FD1BFFA87D2727F82752FD13FF52F827FFFF
%A827F827A8FD0DFFA87DF827F8277DFD37FFA8FFA8FD0BFFA8A85227F827
%F8277DFD14FF7D27F8A8FFFF7D27F82752FD0BFF7D27F827F87DA8FD36FF
%A8F827F8272752527D527D527D52522727F827F827277DA8FD16FF27274B
%FFFFFFA827262727A8FD06FFA87D2727F82752FD39FFA8272627F8272627
%F8272627F8272627F827277D7DFD19FF7DF827A1FFFFFFA852F827F82752
%7D527D2727F827F852A8FD3BFF7D27F8275252FD072752527DA8FD1CFFA8
%27F852FD05FF7D2727F827F827F827F82752A8FD3EFF5227F8A8FD04FFA8
%FD24FF5227F8A8FD06FF7D52FD0427527DA8FD41FFF827F8A8FD29FF2627
%52FD50FFA8262727FD29FF7DF8277DFD50FF7DF82727FD28FFA827F852FD
%51FF7DF82727FD28FF5227F87DFD51FF52F82727FD28FF272727FD52FF52
%F82727FD27FF7DF82752FD52FF52F82726A8FD16FF52A8FD0EFF52F827A8
%FD52FF52F827F87DFD13FF7DF82727FD0EFFA827F827A8FD2BFFA8FFA8A8
%7DA8A8FD20FF7DF827F852A8FD0FFF7D27F827F852FD0FFF7D27F852FD26
%FFA8A87D7D52522727F827262752FD20FFA82727F8277DFD0CFFA8522726
%27F827A8FD10FF5227F87DFD20FFA87D52522727F827F827F827F827F827
%F827F87DFD20FF5227F827277DA8FD06FFA87D52F827F827F8277DFD12FF
%2727F87DFD1AFFA8A87D522727F827F827F827F82727767DA87DA87D52F8
%27F852A8FD1FFF7D27F827F827277D7D7D5252F827F8272627F8277DFD14
%FFF827F852A8FD15FF7D7D2727F827F827F827F827527D7DA8A8FD08FFA8
%2727F827A8FD1FFFA87D2727F827F827F827F82727522727F82752FD16FF
%272726277DFD0FFFA8A87D5227272627F827275252A8A8FD11FF52272627
%A8FD21FFA87D52522752527DA8A8522726277DFD18FF2727F827277DA8FD
%07FFA8A87D7D2727F827F827F827277D7DFD17FF5227F8277DFD28FFA827
%27F8277DFD1AFF7D27F827F82727FD05522727F827F827F827F8527DA8A8
%FD1BFF5227F8277DFD25FFA852F827F852A8FD1CFFA87D2727F827F827F8
%27F827F827F827277D7DA8FD20FF7D27F82752FD22FFA82727F82727A8FD
%21FFA8A87DFD06527D7DA8A8FD25FFA827F82752FD1FFFA87DF82726277D
%FD56FFA827F82727A8FD1BFFA85227F827F87DA8FD59FF52F827F87DFD18
%FFA87D2627F82752A8FD5CFF7DF827F8277DFD13FFA8A85227F827F8527D
%FD5FFFA82727F82752A8FD0FFFA87D522627F82752A8FD4DFFA8A8A8FD13
%FF7D27F827F82752A8A8FD05FFA8FFA87D5227F827F827F852A8FD15FFA8
%5252FD33FFA852522727F82727527DA8FD10FFA87D2727F827F827275252
%52FD0427F827F827F8527DFD18FF7DF8277DFD30FF7D27F827F827F827F8
%27F827F8527DFD11FF7D52F827F827F827F827F827F82727527DA8FD19FF
%A8F827F852FD2EFFA8272726272652527D7D7D5227F8272627277DFD12FF
%A8A87676527D527D7DA8A8FD1DFF52272627F8FFA85276A8FD27FFA852F8
%27F8277DFD07FFA8A85227F827F8277DFD37FF7D27F827F827A8F827F852
%FD26FFA827F827277DFD0DFFA82727F82727A8FD34FFA827F8525227F87D
%27F827F8A8FD24FF7D27F82752FD11FF7D27F827F8277DFD31FFA827F827
%A87DF827FFFD0527FD23FF522726277DFD14FFA82727F82752A8FD2EFFA8
%27F8277DFF522727FFA8F827F82752FD20FFA8F827F852A8FD17FF7D27F8
%27F852A8FD2BFF7D27F82752FFFF27F87DFFFF52F827F82752FD1DFFA852
%F827F87DFD1AFFA87DF827F82752A8FD28FF7D27F8277DFFFFA8F8277DFF
%FF7D27F827F82752FD1BFF7D27F827F8A8FD1DFFA85227F827F8527DFD24
%FFA82727F8277DFFFFFF5227F8A8FFFFFFFD0427F8274BFD18FFA8272726
%2752FD21FFA87DF8272627277DA8FD20FF7DF8272627A8FD04FF522652FD
%04FFA8F8275252F827F87DA8FD13FF7D27F827F8277DFD24FFA85227F827
%F82752A8A8FD1BFF7D27F827F852A8FD04FFA8F8277CFD05FF52F827A87D
%F827F82752A8FD0EFF7D7D2727F827277DFD14FFA87D52527DFD0FFFA87D
%2727F827F82752A8A8FD15FFA87D2727F82727A8FD06FF7D27F8A8FD05FF
%A827F852FFA82727F827F827527D7DFD05A87D7D5252F827F827F8277DFD
%14FFA82727F827F827F87DFD10FFA852F827F827F82727527DA8A8FD0BFF
%A8A87D522727F827F8277DFD08FF52F827A8FD06FF7D27267DFFFFA852F8
%272627F827262727272627F8272627F82752A8FD16FF2727F8272727F827
%2652FD12FFA87D27272627F8272627275252FD057D527D5227F8272627F8
%2752A8FD0AFF272752FD08FF2727F8A8FFFFFFA87D522727F827F827F827
%F827F85252A8A8FD18FF7DF82727FFA87DF827F827A8FD13FFA87D5227F8
%27F827F827F827F827F827F827F827F827527DA8FD0BFF7D27F8A8FD09FF
%F82727FD07FFA8A8FD057DA8A8FD1DFF7D27F8A8FD04FF2727F852A8FD16
%FFA87D7D5252FD0527522752527D7DA8A8FD0EFF52F852FD0AFFA8F82727
%FD2CFF52F852FD06FF2727F852FD1CFFA8FFA8FFA8FD14FFA8F82752FD0B
%FF7D262727FD2BFF522752FD07FF5227F87DFD34FF7627F8FD0DFF7DF827
%27FD2AFF52F852FD08FF2727F8A8FD32FFA827F852FD0EFF7DF82727FD29
%FF762727FD08FFA8F82752FD32FFA8F827A1FD0FFF52F827F8A8FD27FFA8
%F82752FD08FF52F827A8FD31FF272727FD11FF7DF827267DFD27FF52F827
%7DFD07FFA827F8A8FD30FFA827F87DFD12FFA8F827F8277DFD25FFA827F8
%2752A8A8FD04FFA8F8277DFD30FF52F827A8FD14FF5227F82727A7A8FD23
%FFA827F827F827527D5252F827F8A8FD2FFFA8F82752FD16FF7D27F827F8
%27527D7DFFA8FFA8FFFFFFA8FFFD04A87D7D7DA87DA8A8FD0DFFA852F827
%F827F827F827F87DFD30FF5227F8A8FD18FF7D27272627F8FD0427525252
%2752272726272627F8272627F8527DFD0FFF7D7D2752275252A8FD30FFA8
%27F852FD1BFF7D7D2727F827F827F827F827F827F827F827F827F827F827
%F827F8A8FD45FF7DF8277DFD1EFFA87D527DFD07527D7DA87DA8A8A87DA8
%7D52F827F8A8FD44FF272727FD35FF7DF82727FD43FF7C27F8A8FD36FFA8
%26277DFD42FF27F852FD38FF51F852FD41FF7DF8277DFD38FF7D2726FD14
%FFA852A8FD2AFF272727FD39FFA8F8277DFD13FF2727F8277CA8FD26FF7D
%27F8A8FD39FFA827267DFD13FF7DF8272627F8527DFD24FF27F852FD3BFF
%272727FD14FF52F827F827F827F8527DA8FD1FFF7DF8277DFD3BFF7DF827
%A8FD14FF27F8272752F827F827F85252A8A8FD1AFFA8F82752FD3CFFA827
%F87DFD14FFA827F8277DA85227F827F827F82727527DA8A8FD14FF7DF827
%F8FD3EFF272727FD15FFA8272627A8FFFFA87D522727F8272627F8272752
%7DA8A8FFA8FD0BFFA8522627F8A8FD3EFFA8F8277DFD15FF7D27F827A8FD
%05FFA87D5227F827F827F827F827F827275227FD07522727F82727A8FD40
%FF52F827A8FD15FF7D27F852FD08FFA8FF7D7D52522727F827F827F827F8
%27F827F827F827F82752FD42FF7D27F852FD16FF5227F852A8FD0BFFA8FF
%A8A87D7D52522752FD05275252A8A8FD44FF522726A8FD16FF5227F852FD
%63FFF827F8A8FD16FF5227F852FD62FFA8F827F8A8FD16FF5227F852FD62
%FF7DF827F8A8FD16FF2727F852A8FD61FFA72627F8A8FD16FF52272652A8
%FD61FFA8F827F852A8FD15FF5227F8277DFD61FFA82727F8277DFD15FF52
%27F8277DFD62FF5227F82727A8FD14FF7D27F82727FD62FF7D522627F852
%7DFD13FFA827F827277DFD61FFA87D2727F82726527DFD12FF7DF827F827
%7DFD62FF7D52F827F827F85252A8A8FD0EFFA82727F82727A8FD62FFA852
%52F827F827F827F8272752527D7DA87DFD04A8FFFFA85227F827F82752A8
%A8FD61FFA87D7D2727F8272627F8272627F8272627F8FD0727F8272627F8
%27527D7DA8A8FD60FFA8A87D7D525227272627F827F827F827F827F827F8
%27F827F827F827F827F827F852FD67FFFD06A87DA87D7D7DA87D7D767D52
%522727F827F82752FD7AFFA8A87DA87DFD16FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Nachgezeichnetes Bild) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe H\374llen-Zusatzmodul) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe-Zusatzmodul Interaktiv malen) (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Kalligrafiepinsel-Zusatzmodul) (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Zusammengesetzte Form) (PathfinderS.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Angleichungen-Zusatzmodul) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Fade to Black)
(Fade to Black) 0 2 Bd
[
0
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 1 1 25 0 %_BS
%_0 0 0 1 1 25 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green, Yellow, Orange)
(Green, Yellow, Orange) 0 7 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9
>
<
BFBEBEBDBCBBBBBAB9B8B8B7B6B5B5B4B3B2B2B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A1
A1A09F9E9E9D9C9B9B9A999898979695949493929191908F8E8E8D8C8B8B8A898887878685848483
828181807F7E7E7D7C7B7B7A797877777675747473727171706F6E6E6D6C6B6A6A69686767666564
6463626161605F5E5D5D5C5B5A5A595857575655545453525150504F4E4D4D4C4B4A4A4948474746
45444443424140403F3E3D3D3C3B3A3A393837373635343333323130302F2E2D2D2C2B2A2A292827
262625242323222120201F1E1D1D1C1B1A1A
>
1
0
1 %_Br
0
<
191B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041
42434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566676869
6A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9
BABBBCBDBEBF
>
<
F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5
F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8
F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFB
FCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFF
FFFFFFFFFFFF
>
0
1 %_Br
<
D9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2
B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A6968676665646362
61605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A
393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A1918171615141312
11100F0E0D0C0B0A09080706050403020100
>
0.1
<
FFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFA
FAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8
F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6
F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3
F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9
>
<
BFBEBEBDBCBBBBBAB9B8B8B7B6B5B5B4B3B2B2B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A1
A1A09F9E9E9D9C9B9B9A999898979695949493929191908F8E8E8D8C8B8B8A898887878685848483
828181807F7E7E7D7C7B7B7A797877777675747473727171706F6E6E6D6C6B6A6A69686767666564
6463626161605F5E5D5D5C5B5A5A595857575655545453525150504F4E4D4D4C4B4A4A4948474746
45444443424140403F3E3D3D3C3B3A3A393837373635343333323130302F2E2D2D2C2B2A2A292827
262625242323222120201F1E1D1D1C1B1A1A
>
1
0
1 %_Br
0
<
191B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041
42434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566676869
6A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9
BABBBCBDBEBF
>
<
F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5
F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8
F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFB
FCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFF
FFFFFFFFFFFF
>
0
1 %_Br
<
D9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B5B4B3
B3B2B1B0AFAEADACABABAAA9A8A7A6A5A4A4A3A2A1A09F9E9E9D9C9B9A9998989796959494939291
908F8F8E8D8C8B8B8A898888878685848483828181807F7E7E7D7C7B7B7A79787877767575747373
727170706F6E6E6D6C6B6B6A6969686767666565646363626161605F5F5E5D5D5C5B5B5A5A595858
575656555554535352525150504F4F4E4D4D4C4C4B4B4A4949484847474646454444434342424141
40403F3F3E3D3D3C3C3B3B3A3A3939383837373636363535343433333232313130302F2F2F2E2E2D
2D2C2C2B2B2B2A2A29292928282727262626252524242423232322222121212020201F1F1E1E1E1D
1D1D1C1C1C1B1B1B1A1A1A1919191818181717171716161615151514141414131313121212121111
1111101010100F0F0F0F0E0E0E0E0D0D0D0D0D0C0C0C0C0B0B0B0B0B0A0A0A0A0A09090909090808
08080808070707070707060606060606060505050505050504040404040404040303030303030303
03020202020202020202020202010101010101010101010101010101010101000000000000000000
00000000000000000000000000000000FF
>
0.1
<
FFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
FBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6
F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5
F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3
F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3
F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2FF
>
0
1 %_Br
[
0.85 0.1 1 0 1 50 100 %_BS
%_0.85 0.1 1 0 1 50 100 Bs
0 0.75 1 0 1 50 80.117 %_BS
%_0 0.75 1 0 1 50 80.117 Bs
0 0.1 0.95 0 1 50 64 %_BS
%_0 0.1 0.95 0 1 50 64 Bs
0.85 0.1 1 0 1 50 47 %_BS
%_0.85 0.1 1 0 1 50 47 Bs
0 0.75 1 0 1 50 30 %_BS
%_0 0.75 1 0 1 50 30 Bs
0 0.1 0.95 0 1 50 15 %_BS
%_0 0.1 0.95 0 1 50 15 Bs
0.85 0.1 1 0 1 28 0 %_BS
%_0.85 0.1 1 0 1 28 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple Radial)
(Purple Radial) 1 2 Bd
[
<
0001010203030405050607070809090A0B0B0C0C0D0E0E0F10101112121313141515161717181819
1A1A1B1B1C1D1D1E1E1F20202121222323242425262627272828292A2A2B2B2C2C2D2E2E2F2F3030
313132333334343535363637373839393A3A3B3B3C3C3D3D3E3E3F3F404041414242434344444545
46464747484849494A4A4B4B4C4C4D4D4E4E4F4F5050515151525253535454555556565657575858
59595A5A5A5B5B5C5C5D5D5D5E5E5F5F5F6060616162626263636464646565666666676767686869
69696A6A6B6B6B6C6C6C6D6D6D6E6E6F6F6F70707071717172727273737374747475757576767677
77777878787979797A7A7A7B7B7B7B7C7C7C7D7D7D7E7E7E7E7F7F7F7F8080808181818182828282
83838384848484858585858686868687878787878888888889898989898A8A8A8A8B8B8B8B8B8C8C
8C8C8C8D8D8D8D8D8E8E8E8E8E8F8F8F8F8F8F909090909090919191919191929292929292929393
93939393939494949494949494959595959595959595969696969696969696969797979797979797
97979797989898989898989898989898989898989898999999999999999999999999999999999999
9999999999FF
>
<
000102030405060708090A0B0C0D0E0F10111213141516161718191A1B1C1D1E1F20212223242525
262728292A2B2C2D2E2F2F30313233343536373738393A3B3C3D3E3E3F4041424343444546474849
494A4B4C4D4D4E4F5051525253545556565758595A5A5B5C5D5D5E5F606161626364646566676768
696A6A6B6C6D6D6E6F7070717272737475757677777879797A7B7C7C7D7E7E7F8080818282838484
858686878888898A8A8B8B8C8D8D8E8F8F90909192929394949595969797989899999A9B9B9C9C9D
9E9E9F9FA0A0A1A1A2A3A3A4A4A5A5A6A6A7A7A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2
B3B3B4B4B5B5B5B6B6B7B7B8B8B9B9BABABABBBBBCBCBDBDBEBEBEBFBFC0C0C0C1C1C2C2C3C3C3C4
C4C5C5C5C6C6C6C7C7C8C8C8C9C9C9CACACACBCBCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2
D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D9D9D9D9DADADADADBDBDBDBDBDCDCDC
DCDDDDDDDDDDDEDEDEDEDEDEDFDFDFDFDFE0E0E0E0E0E0E1E1E1E1E1E1E1E2E2E2E2E2E2E2E2E3E3
E3E3E3E3E3E3E3E4E4E4E4E4E4E4E4E4E4E4E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5
E5E5E5E5E5FF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000FF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000FF
>
1 %_Br
[
0 0 0 0 1 30 63.1579 %_BS
%_0 0 0 0 1 30 63.1579 Bs
0.6 0.9 0.000031 0.000031 1 50 100 %_BS
%_0.6 0.9 0.000031 0.000031 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Super Soft Black Vignette)
(Super Soft Black Vignette) 1 3 Bd
[
0.2
0.2
0.2
1
1 %_Br
0.2
0.2
0.2
1
1 %_Br
[
0.2 0.2 0.2 1 1 56.0729 57.4443 %_BS
%_0.2 0.2 0.2 1 1 56.0729 57.4443 Bs
0.2 0.2 0.2 1 1 31.8603 79.7713 %_BS
%_0.2 0.2 0.2 1 1 31.8603 79.7713 Bs
0.2 0.2 0.2 1 1 50 100 %_BS
%_0.2 0.2 0.2 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Laguna)
(Laguna) 0 3.1914 84.1563 84.791 [
%AI3_Tile
(0 O 0 R 0 1 1 0 k
 0 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
42.0781 30.3906 m
12.2227 12.8779 9.0488 12.4082 V
7.2871 14.1709 0 30.3906 Y
13.1641 20.5186 29.1484 23.3389 42.0781 30.3906 C
f
42.0781 57.5908 m
12.2227 40.0781 9.0488 39.6094 V
7.2871 41.3711 0 57.5908 Y
13.1641 47.7178 29.1484 50.5391 42.0781 57.5908 C
f
42.0781 84.791 m
12.2227 67.2773 9.0488 66.8096 V
7.2871 68.5703 0 84.791 Y
13.1641 74.918 29.1484 77.7402 42.0781 84.791 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6 0.9 0.000031 0.000031 k
 0.6 0.9 0.000031 0.000031 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
84.1563 30.3906 m
54.3008 12.8779 51.127 12.4082 V
49.3652 14.1709 42.0781 30.3906 Y
55.2422 20.5186 71.2266 23.3389 84.1563 30.3906 C
f
84.1563 57.5908 m
54.3008 40.0781 51.127 39.6094 V
49.3652 41.3711 42.0781 57.5908 Y
55.2422 47.7178 71.2266 50.5391 84.1563 57.5908 C
f
84.1563 84.791 m
54.3008 67.2773 51.127 66.8096 V
49.3652 68.5703 42.0781 84.791 Y
55.2422 74.918 71.2266 77.7402 84.1563 84.791 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.85 0.1 1 0 k
 0.85 0.1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
21.0391 33.582 m
19.2773 33.582 17.8477 32.1523 17.8477 30.3906 c
17.8477 28.6289 19.2773 27.2002 21.0391 27.2002 c
22.8008 27.2002 24.2285 28.6289 24.2285 30.3906 c
24.2285 32.1523 22.8008 33.582 21.0391 33.582 c
f
21.0391 6.3818 m
19.2773 6.3818 17.8477 4.9531 17.8477 3.1914 c
17.8477 1.4287 19.2773 0 21.0391 0 c
22.8008 0 24.2285 1.4287 24.2285 3.1914 c
24.2285 4.9531 22.8008 6.3818 21.0391 6.3818 c
f
21.0391 60.7822 m
19.2773 60.7822 17.8477 59.3525 17.8477 57.5908 c
17.8477 55.8291 19.2773 54.3994 21.0391 54.3994 c
22.8008 54.3994 24.2285 55.8291 24.2285 57.5908 c
24.2285 59.3525 22.8008 60.7822 21.0391 60.7822 c
f
21.0391 87.9824 m
19.2773 87.9824 17.8477 86.5547 17.8477 84.791 c
17.8477 83.0283 19.2773 81.5996 21.0391 81.5996 c
22.8008 81.5996 24.2285 83.0283 24.2285 84.791 c
24.2285 86.5547 22.8008 87.9824 21.0391 87.9824 c
f
63.1172 33.582 m
61.3555 33.582 59.9258 32.1523 59.9258 30.3906 c
59.9258 28.6289 61.3555 27.2002 63.1172 27.2002 c
64.8789 27.2002 66.3066 28.6289 66.3066 30.3906 c
66.3066 32.1523 64.8789 33.582 63.1172 33.582 c
f
63.1172 6.3818 m
61.3555 6.3818 59.9258 4.9531 59.9258 3.1914 c
59.9258 1.4287 61.3555 0 63.1172 0 c
64.8789 0 66.3066 1.4287 66.3066 3.1914 c
66.3066 4.9531 64.8789 6.3818 63.1172 6.3818 c
f
63.1172 60.7822 m
61.3555 60.7822 59.9258 59.3525 59.9258 57.5908 c
59.9258 55.8291 61.3555 54.3994 63.1172 54.3994 c
64.8789 54.3994 66.3066 55.8291 66.3066 57.5908 c
66.3066 59.3525 64.8789 60.7822 63.1172 60.7822 c
f
63.1172 87.9824 m
61.3555 87.9824 59.9258 86.5547 59.9258 84.791 c
59.9258 83.0283 61.3555 81.5996 63.1172 81.5996 c
64.8789 81.5996 66.3066 83.0283 66.3066 84.791 c
66.3066 86.5547 64.8789 87.9824 63.1172 87.9824 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6 0.9 0.000031 0.000031 k
 0.6 0.9 0.000031 0.000031 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
0 3.1914 m
29.8535 20.7041 33.0273 21.1738 V
34.79 19.4111 42.0781 3.1914 Y
28.9141 13.0645 12.9277 10.2422 0 3.1914 C
f
0 30.3906 m
29.8535 47.9033 33.0273 48.374 V
34.79 46.6104 42.0781 30.3906 Y
28.9141 40.2646 12.9277 37.4434 0 30.3906 C
f
0 57.5908 m
29.8535 75.1035 33.0273 75.5752 V
34.79 73.8105 42.0781 57.5908 Y
28.9141 67.4648 12.9277 64.6436 0 57.5908 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 1 1 0 k
 0 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
42.0781 3.1914 m
71.9316 20.7041 75.1055 21.1738 V
76.8691 19.4111 84.1563 3.1914 Y
70.9922 13.0645 55.0059 10.2422 42.0781 3.1914 C
f
42.0781 30.3906 m
71.9316 47.9033 75.1055 48.374 V
76.8691 46.6104 84.1563 30.3906 Y
70.9922 40.2646 55.0059 37.4434 42.0781 30.3906 C
f
42.0781 57.5908 m
71.9316 75.1035 75.1055 75.5752 V
76.8691 73.8105 84.1563 57.5908 Y
70.9922 67.4648 55.0059 64.6436 42.0781 57.5908 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(New Pattern 1)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7978 7978 m
-7978 7919.0254 L
-7962.4902 7919.0254 L
-7962.4902 7978 L
-7978 7978 L
n
0 O
0 0 0 1 k
10 M-7978 7929.0586 m
-7978 7928.5742 L
-7962.4878 7928.5742 L
-7962.4878 7929.0586 L
-7978 7929.0586 L
f
-7978 7946.3838 m
-7978 7945.8965 L
-7962.4878 7945.8965 L
-7962.4878 7946.3838 L
-7978 7946.3838 L
f
-7977.9995 7931.3682 m
-7977.9995 7930.6494 L
-7962.4878 7930.6494 L
-7962.4878 7931.3682 L
-7977.9995 7931.3682 L
f
-7977.9995 7941.6328 m
-7977.9995 7940.9121 L
-7962.4878 7940.9121 L
-7962.4878 7941.6328 L
-7977.9995 7941.6328 L
f
-7977.9995 7939.4951 m
-7977.9995 7938.4141 L
-7962.4878 7938.4141 L
-7962.4878 7939.4951 L
-7977.9995 7939.4951 L
f
-7977.9995 7933.9395 m
-7977.9995 7932.8594 L
-7962.4878 7932.8594 L
-7962.4878 7933.9395 L
-7977.9995 7933.9395 L
f
-7977.9995 7936.9854 m
-7977.9995 7935.334 L
-7962.4878 7935.334 L
-7962.4878 7936.9854 L
-7977.9995 7936.9854 L
f
*u
1 D
-7962.4888 7945.1455 m
-7977.9995 7945.1455 L
-7977.9995 7944.6816 L
-7977.6514 7944.6816 L
-7977.6514 7943.4844 L
-7977.9995 7943.4844 L
-7977.9995 7943.0215 L
-7962.4888 7943.0215 L
-7962.4888 7943.4844 L
-7962.8408 7943.4844 L
-7962.8408 7944.6846 L
-7962.4888 7944.6846 L
-7962.4888 7945.1455 L
f
0 D
-7974.1255 7944.6846 m
-7973.4199 7944.6846 L
-7973.4199 7943.4844 L
-7974.1255 7943.4844 L
-7974.1255 7944.6846 L
f
-7974.8306 7943.4844 m
-7975.5361 7943.4844 L
-7975.5361 7944.6846 L
-7974.8306 7944.6846 L
-7974.8306 7943.4844 L
f
-7972.7144 7944.6846 m
-7972.0098 7944.6846 L
-7972.0098 7943.4844 L
-7972.7144 7943.4844 L
-7972.7144 7944.6846 L
f
-7971.3042 7944.6846 m
-7970.5986 7944.6846 L
-7970.5986 7943.4844 L
-7971.3042 7943.4844 L
-7971.3042 7944.6846 L
f
-7969.8936 7944.6846 m
-7969.1885 7944.6846 L
-7969.1885 7943.4844 L
-7969.8936 7943.4844 L
-7969.8936 7944.6846 L
f
-7968.4834 7944.6846 m
-7967.7778 7944.6846 L
-7967.7778 7943.4844 L
-7968.4834 7943.4844 L
-7968.4834 7944.6846 L
f
-7967.0718 7944.6846 m
-7966.3672 7944.6846 L
-7966.3672 7943.4844 L
-7967.0718 7943.4844 L
-7967.0718 7944.6846 L
f
-7965.6616 7944.6846 m
-7964.9575 7944.6846 L
-7964.9575 7943.4844 L
-7965.6616 7943.4844 L
-7965.6616 7944.6846 L
f
-7964.2515 7944.6846 m
-7963.5454 7944.6846 L
-7963.5454 7943.4844 L
-7964.2515 7943.4844 L
-7964.2515 7944.6846 L
f
-7976.9463 7944.6846 m
-7976.2407 7944.6846 L
-7976.2407 7943.4844 L
-7976.9463 7943.4844 L
-7976.9463 7944.6846 L
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 2)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7978 7977.998 m
-7978 7919.0225 L
-7919.0254 7919.0225 L
-7919.0254 7977.998 L
-7978 7977.998 L
n
*u
1 D
0 O
0 0 0 1 k
10 M-7951.4902 7937.4453 m
-7949.9678 7938.9678 -7950.5166 7941.9834 -7952.7153 7944.1836 c
-7954.9146 7946.3809 -7957.9302 7946.9297 -7959.4526 7945.4082 c
-7960.9751 7943.8857 -7960.4263 7940.8682 -7958.2271 7938.6709 c
-7956.0288 7936.4717 -7953.0127 7935.9238 -7951.4902 7937.4453 c
f
0 D
-7952.1519 7938.0781 m
-7953.5728 7936.6582 -7956.2241 7937.0059 -7958.0728 7938.8545 c
-7959.9214 7940.7031 -7960.2695 7943.3545 -7958.8486 7944.7754 c
-7957.4282 7946.1953 -7954.7769 7945.8486 -7952.9282 7944 c
-7951.0786 7942.1504 -7950.7314 7939.5 -7952.1519 7938.0781 c
f
*U
-7969.5327 7928.2607 m
-7968.7969 7928.1309 l
-7968.71 7927.4385 l
-7963.9458 7932.9814 l
-7969.5327 7928.2607 l
f
-7958.9409 7925.3145 m
-7959.1235 7923.7266 L
-7958.7002 7923.4512 -7958.3184 7923.1309 -7957.9346 7922.8145 C
-7957.6841 7925.9189 L
-7957.3535 7925.9453 L
-7957.4678 7922.4395 L
-7957.0503 7922.1162 -7956.6089 7921.8213 -7956.0913 7921.6152 C
-7956.1235 7926.7266 L
-7955.9063 7926.7734 L
-7955.5938 7921.4521 L
-7955.2007 7921.3516 -7954.7632 7921.3008 -7954.2642 7921.3213 C
-7955.0376 7930.4463 L
-7953.7666 7921.3594 L
-7953.3359 7921.4063 -7952.96 7921.4746 -7952.6289 7921.5625 C
-7953.4551 7928.334 L
-7953.2998 7928.2109 L
-7952.1465 7921.7148 L
-7951.7471 7921.8633 -7951.4238 7922.0449 -7951.1528 7922.25 C
-7951.7334 7927.0762 L
-7951.4688 7926.9414 L
-7950.7114 7922.6426 L
-7950.2256 7923.1494 -7949.9194 7923.7344 -7949.5127 7924.2822 C
-7950.0713 7926.3496 L
-7949.6001 7926.1709 L
-7949.1338 7924.7383 L
-7948.8096 7925.082 -7948.4063 7925.3945 -7947.8394 7925.6406 c
-7947.8506 7925.6357 -7946.7393 7925.6826 -7946.7466 7925.6533 c
-7946.7959 7925.4375 -7947.6655 7925.2998 -7947.6455 7925.3105 c
-7950.2974 7923.8965 -7949.3232 7921.3301 -7953.8735 7920.873 c
-7957.4072 7920.5176 -7958.2515 7923.75 -7961.0962 7924.0615 c
-7961.1152 7924.0625 -7961.7632 7924.3174 -7961.8442 7924.4502 C
-7961.8486 7924.625 -7961.4595 7924.5186 -7961.2417 7924.4766 c
-7960.6001 7924.3477 -7960.0498 7924.2402 -7959.5728 7923.9912 C
-7959.4023 7925.1914 L
-7958.9409 7925.3145 L
f
-7971.6626 7937.9463 m
-7973.2495 7937.7637 L
-7973.5254 7938.1865 -7973.8462 7938.5693 -7974.1626 7938.9521 C
-7971.0576 7939.2031 L
-7971.0322 7939.5352 L
-7974.5376 7939.4189 L
-7974.8608 7939.8369 -7975.1558 7940.2783 -7975.3618 7940.7959 C
-7970.2505 7940.7637 L
-7970.2031 7940.9814 L
-7975.5249 7941.293 L
-7975.6265 7941.6865 -7975.6758 7942.125 -7975.6558 7942.623 C
-7966.5298 7941.8496 L
-7975.6177 7943.1201 L
-7975.5713 7943.5498 -7975.5024 7943.9277 -7975.4146 7944.2578 C
-7968.6426 7943.4316 L
-7968.7656 7943.5869 L
-7975.2622 7944.7402 L
-7975.1138 7945.1406 -7974.9312 7945.4629 -7974.7271 7945.7344 C
-7969.9014 7945.1533 L
-7970.0352 7945.418 L
-7974.3335 7946.1768 L
-7973.8271 7946.6621 -7973.2417 7946.9688 -7972.6943 7947.375 C
-7970.6274 7946.8145 L
-7970.8066 7947.2871 L
-7972.2383 7947.752 L
-7971.8945 7948.0762 -7971.5825 7948.4814 -7971.3359 7949.0479 c
-7971.3408 7949.0361 -7971.2935 7950.1484 -7971.3242 7950.1416 c
-7971.54 7950.0908 -7971.6768 7949.2227 -7971.6675 7949.2412 c
-7973.0806 7946.5898 -7975.6475 7947.5645 -7976.1045 7943.0127 c
-7976.4595 7939.4805 -7973.2271 7938.6367 -7972.9165 7935.791 c
-7972.9136 7935.7725 -7972.6602 7935.125 -7972.5273 7935.043 C
-7972.3535 7935.0381 -7972.4575 7935.4277 -7972.5015 7935.6455 c
-7972.6294 7936.2871 -7972.7368 7936.8369 -7972.9858 7937.3145 C
-7971.7842 7937.4854 L
-7971.6626 7937.9463 L
f
-7942.0127 7936.2285 m
-7937.2495 7937.6348 -7935.9502 7939.9209 -7935.9746 7941.5654 C
-7935.5366 7938.459 -7933.6558 7940.8652 -7933.1313 7942.0029 C
-7934.0498 7938.416 -7931.4463 7941.5439 -7931.2715 7941.8496 C
-7932.2593 7938.4063 -7939.3955 7935.9404 -7942.0127 7936.2285 C
f
-7947.9775 7935.2197 m
-7951.3242 7929.1738 -7948.4233 7927.5703 -7947.7354 7927.377 c
-7947.9233 7927.4287 -7948.3135 7928.2949 -7948.2026 7928.6367 C
-7947.9482 7928.0928 -7947.4111 7927.8193 -7946.8994 7927.6094 C
-7948.1626 7928.6094 -7948.6943 7931.4111 -7947.9082 7934.9512 c
-7947.9775 7935.2197 l
f
-7950.2222 7935.5254 m
-7952.6035 7933.1016 -7954.0474 7932.2773 -7952.1035 7929.668 c
-7952.2202 7929.8262 -7952.3838 7930.7168 -7952.1758 7931.0117 C
-7952.0942 7930.418 -7951.6626 7929.998 -7951.2358 7929.6455 C
-7952.9395 7933.0732 -7950.2222 7935.5254 y
f
-7942.6577 7934.4199 m
-7942.9897 7932.5615 -7941.4922 7931.4688 -7939.8662 7930.8496 C
-7940.4194 7930.8662 -7941.0176 7930.9307 -7941.4482 7931.3496 C
-7941.4302 7930.9893 -7940.7598 7930.3184 -7940.5654 7930.3359 c
-7941.2778 7930.2744 -7943.4951 7929.8447 -7942.8408 7934.6191 c
-7942.6577 7934.4199 l
f
-7939.5576 7935.1133 m
-7939.1538 7933.7266 -7936.9502 7933.459 V
-7937.5342 7933.2871 -7938.2314 7933.3662 -7938.6626 7933.7852 C
-7938.6455 7933.4258 -7937.8408 7932.7178 -7937.6479 7932.7568 c
-7939.3921 7932.4141 -7939.6782 7934.9072 y
-7939.5576 7935.1133 l
f
-7936.1152 7936.3213 m
-7935.8408 7935.627 -7935.0942 7935.1201 -7934.2646 7935 C
-7934.6475 7934.8975 -7935.0854 7934.9873 -7935.4297 7935.3242 C
-7935.4175 7935.0352 -7934.7744 7934.4863 -7934.6182 7934.502 c
-7936.2729 7934.3496 -7936.1152 7936.3213 Y
f
-7945.5562 7934.4629 m
-7945.6504 7931.1309 -7944.4175 7929.4541 -7942.9761 7928.6514 C
-7943.5264 7928.7148 -7944.1162 7928.8271 -7944.5103 7929.2793 C
-7944.5249 7928.9189 -7943.9087 7928.1953 -7943.7134 7928.1973 c
-7944.4287 7928.1943 -7947.0034 7928.0898 -7945.7866 7934.7109 c
-7945.5562 7934.4629 l
f
-7960.7944 7955.0137 m
-7959.3882 7959.7754 -7957.1006 7961.0762 -7955.4575 7961.0518 C
-7958.5635 7961.4893 -7956.1567 7963.3701 -7955.0195 7963.8945 C
-7958.6074 7962.9766 -7955.4795 7965.5791 -7955.1729 7965.7549 C
-7958.6162 7964.7676 -7961.0825 7957.6309 -7960.7944 7955.0137 C
f
-7961.8022 7949.0488 m
-7967.8481 7945.7002 -7969.4521 7948.6025 -7969.6465 7949.291 c
-7969.5938 7949.1025 -7968.7295 7948.7119 -7968.3857 7948.8242 C
-7968.9297 7949.0781 -7969.2017 7949.6152 -7969.4126 7950.127 C
-7968.4126 7948.8633 -7965.6113 7948.334 -7962.0703 7949.1182 c
-7961.8022 7949.0488 l
f
-7961.4966 7946.8037 m
-7963.9214 7944.4229 -7964.7446 7942.9805 -7967.3535 7944.9229 c
-7967.1968 7944.8066 -7966.3057 7944.6426 -7966.0112 7944.8496 C
-7966.6064 7944.9307 -7967.0239 7945.3633 -7967.3774 7945.79 C
-7963.9487 7944.0879 -7961.4966 7946.8037 y
f
-7962.6025 7954.3682 m
-7964.4614 7954.0361 -7965.5537 7955.5342 -7966.1729 7957.1602 C
-7966.1558 7956.6074 -7966.0918 7956.0098 -7965.6719 7955.5791 C
-7966.0327 7955.5957 -7966.7041 7956.2656 -7966.6865 7956.4609 c
-7966.7485 7955.75 -7967.1777 7953.5313 -7962.4038 7954.1846 c
-7962.6025 7954.3682 l
f
-7961.9087 7957.4688 m
-7963.2959 7957.873 -7963.5649 7960.0762 V
-7963.7354 7959.4922 -7963.6558 7958.7949 -7963.2368 7958.3633 C
-7963.5967 7958.3809 -7964.3042 7959.1865 -7964.2666 7959.3789 c
-7964.6079 7957.6348 -7962.1152 7957.3477 y
-7961.9087 7957.4688 l
f
-7960.7007 7960.9111 m
-7961.3955 7961.1846 -7961.9009 7961.9307 -7962.0234 7962.7617 C
-7962.1265 7962.3789 -7962.0337 7961.9404 -7961.6982 7961.5967 C
-7961.9873 7961.6104 -7962.5361 7962.252 -7962.5215 7962.4082 c
-7962.6729 7960.7529 -7960.7007 7960.9111 Y
f
-7962.5591 7951.4697 m
-7965.8921 7951.377 -7967.5679 7952.6094 -7968.3696 7954.0508 C
-7968.3081 7953.502 -7968.1953 7952.9102 -7967.7422 7952.5146 C
-7968.1035 7952.5029 -7968.8262 7953.1162 -7968.8257 7953.3135 c
-7968.8286 7952.5967 -7968.9321 7950.0234 -7962.3115 7951.2402 c
-7962.5591 7951.4697 l
f
u
u
-7972.0234 7927.709 m
-7972.2856 7927.1953 -7972.0479 7926.6689 -7970.2905 7926.6504 C
-7971.0322 7925.9082 L
-7972.9927 7925.9941 -7973.3423 7927.1777 -7973.1665 7927.7578 c
-7972.9736 7928.3906 -7972.5488 7928.9023 -7972.2085 7929.25 C
-7973.2031 7929.6113 -7973.2505 7930.3916 -7973.0479 7930.79 c
-7972.7729 7931.334 -7972.2998 7931.752 -7971.9487 7932.0176 C
-7972.9448 7932.377 -7972.8623 7933.1133 -7972.6074 7933.457 c
-7972.2856 7933.8906 -7971.8174 7934.2031 -7971.4751 7934.4023 C
-7972.4585 7934.8301 -7972.3022 7935.5234 -7972.0239 7935.8154 c
-7971.6929 7936.166 -7971.2466 7936.3916 -7970.9199 7936.5322 C
-7971.7695 7937.0225 -7971.5537 7937.6318 -7971.2715 7937.8633 c
-7970.9458 7938.1318 -7970.5342 7938.2842 -7970.23 7938.377 C
-7970.9395 7938.9082 -7970.6802 7939.4297 -7970.4014 7939.6074 c
-7970.0698 7939.8174 -7969.6714 7939.9082 -7969.3857 7939.9541 C
-7969.9673 7940.5098 -7969.6768 7940.9482 -7969.4097 7941.0762 c
-7968.9326 7941.3037 -7968.3511 7941.2764 -7968.1768 7941.2813 c
-7967.6343 7941.2959 -7966.8838 7941.125 -7966.4272 7941.0703 c
-7965.3442 7940.9434 -7961.5718 7940.2754 -7959.9023 7940.4385 C
-7960.1704 7940.2285 -7960.1714 7940.2285 v
-7962.1304 7940.041 -7965.0479 7940.4678 -7966.1294 7940.5957 c
-7966.9839 7940.6953 -7968.1182 7940.9951 -7968.9951 7940.7295 c
-7969.2593 7940.6494 -7969.3696 7940.4453 -7968.8906 7940.0215 C
-7968.3135 7940.0732 -7967.5737 7940.002 -7967.1118 7940.0039 c
-7965.9009 7940.0098 -7961.6504 7939.7832 -7959.8311 7940.1895 C
-7960.0986 7939.9209 -7960.0986 7939.9199 v
-7962.2344 7939.4492 -7965.5098 7939.5254 -7966.7202 7939.5186 c
-7967.6758 7939.5137 -7968.9673 7939.6914 -7969.8984 7939.2783 c
-7970.1777 7939.1563 -7970.2729 7938.918 -7969.6953 7938.5166 C
-7969.0615 7938.6602 -7968.2153 7938.6816 -7967.6968 7938.7471 c
-7966.3623 7938.918 -7961.6431 7939.2441 -7959.6929 7939.9375 C
-7959.9502 7939.6064 -7959.9512 7939.6064 v
-7962.2422 7938.7969 -7965.8647 7938.4375 -7967.1992 7938.2656 c
-7968.2529 7938.1309 -7969.7007 7938.1504 -7970.6719 7937.5703 c
-7970.9624 7937.3975 -7971.0352 7937.123 -7970.3481 7936.7578 C
-7969.6704 7936.998 -7968.7578 7937.1328 -7968.2026 7937.2754 c
-7966.7534 7937.6445 -7961.5938 7938.6426 -7959.5361 7939.6689 C
-7959.7754 7939.2695 -7959.7759 7939.2695 v
-7962.1934 7938.0664 -7966.1392 7937.1797 -7967.5879 7936.8105 c
-7968.7314 7936.5186 -7970.3311 7936.3457 -7971.3242 7935.5723 c
-7971.6182 7935.3457 -7971.6626 7935.0352 -7970.8745 7934.7305 C
-7970.1606 7935.082 -7969.1802 7935.3535 -7968.5889 7935.584 c
-7967.0415 7936.1865 -7961.4863 7937.9863 -7959.3564 7939.3984 C
-7959.5654 7938.9258 -7959.5674 7938.9248 v
-7962.0698 7937.2695 -7966.3018 7935.7578 -7967.8486 7935.1543 c
-7969.0703 7934.6777 -7970.8115 7934.2695 -7971.8018 7933.2842 c
-7972.0786 7933.0098 -7972.1006 7932.6846 -7971.3384 7932.4551 C
-7970.5942 7932.9404 -7969.5234 7933.3584 -7968.8926 7933.6895 c
-7967.2446 7934.5518 -7961.2441 7937.2246 -7959.1055 7939.0957 C
-7959.2407 7938.5186 -7959.2417 7938.5186 v
-7961.7559 7936.3281 -7966.2954 7934.127 -7967.9438 7933.2617 c
-7969.2456 7932.5801 -7971.1602 7931.9248 -7972.0815 7930.6709 c
-7972.3135 7930.3555 -7972.2974 7930.0127 -7971.6118 7929.8105 C
-7970.8594 7930.4668 -7969.6641 7931.0762 -7968.9888 7931.5322 c
-7967.27 7932.6953 -7960.9126 7936.377 -7958.8442 7938.7637 C
-7959.1377 7937.9902 -7959.1382 7937.9893 v
-7961.5718 7935.1934 -7966.0825 7932.2842 -7967.8018 7931.1221 c
-7969.1582 7930.2031 -7971.2295 7929.2607 -7972.0234 7927.709 c
f
U
u
-7969.2329 7924.918 m
-7969.7446 7924.6543 -7970.2715 7924.8926 -7970.2905 7926.6504 C
-7971.0313 7925.9082 L
-7970.9473 7923.9473 -7969.7622 7923.5977 -7969.1826 7923.7754 c
-7968.5503 7923.9658 -7968.0386 7924.3916 -7967.6919 7924.7324 C
-7967.3306 7923.7373 -7966.5498 7923.6904 -7966.1504 7923.8906 c
-7965.6064 7924.168 -7965.1895 7924.6406 -7964.9224 7924.9922 C
-7964.5649 7923.9951 -7963.8281 7924.0781 -7963.4834 7924.334 c
-7963.0498 7924.6543 -7962.7368 7925.123 -7962.5376 7925.4648 C
-7962.1113 7924.4824 -7961.4175 7924.6387 -7961.1255 7924.918 c
-7960.7759 7925.248 -7960.5488 7925.6943 -7960.4082 7926.0215 C
-7959.9185 7925.1719 -7959.3086 7925.3877 -7959.0767 7925.6689 c
-7958.8086 7925.9951 -7958.6553 7926.4053 -7958.5649 7926.7109 C
-7958.0327 7926.002 -7957.5103 7926.2607 -7957.3345 7926.5391 c
-7957.1235 7926.8701 -7957.0322 7927.2695 -7956.9858 7927.5537 C
-7956.4312 7926.9727 -7955.9912 7927.2637 -7955.8638 7927.5313 c
-7955.6367 7928.0078 -7955.6655 7928.5898 -7955.6592 7928.7637 c
-7955.6431 7929.3066 -7955.8159 7930.0566 -7955.8696 7930.5137 c
-7955.9966 7931.5957 -7956.6655 7935.3682 -7956.5034 7937.0381 C
-7956.7129 7936.7695 l
-7956.8999 7934.8105 -7956.4727 7931.8926 -7956.3457 7930.8105 c
-7956.2446 7929.957 -7955.9458 7928.8223 -7956.2114 7927.9453 c
-7956.2915 7927.6816 -7956.4946 7927.5703 -7956.9199 7928.0508 C
-7956.8682 7928.6279 -7956.9395 7929.3662 -7956.9375 7929.8281 c
-7956.9302 7931.04 -7957.1567 7935.29 -7956.7524 7937.1094 C
-7957.0195 7936.8428 -7957.0195 7936.8418 v
-7957.4922 7934.7061 -7957.4155 7931.4316 -7957.4214 7930.2207 c
-7957.4272 7929.2646 -7957.25 7927.9736 -7957.6616 7927.043 c
-7957.7847 7926.7637 -7958.0234 7926.668 -7958.4238 7927.2461 C
-7958.2798 7927.8789 -7958.2593 7928.7246 -7958.1929 7929.2441 c
-7958.0225 7930.5781 -7957.6958 7935.2959 -7957.0034 7937.248 C
-7957.3345 7936.9902 -7957.3354 7936.9893 v
-7958.1455 7934.6982 -7958.5039 7931.0762 -7958.6753 7929.7402 c
-7958.8096 7928.6885 -7958.79 7927.2402 -7959.3706 7926.2695 c
-7959.5435 7925.9785 -7959.8174 7925.9053 -7960.1816 7926.5938 C
-7959.9434 7927.2695 -7959.8081 7928.1836 -7959.6665 7928.7383 c
-7959.2969 7930.1865 -7958.2993 7935.3477 -7957.27 7937.4053 C
-7957.6704 7937.166 -7957.6714 7937.166 v
-7958.8745 7934.7471 -7959.7607 7930.8008 -7960.1294 7929.3535 c
-7960.4214 7928.209 -7960.5962 7926.6094 -7961.3662 7925.6172 c
-7961.5962 7925.3232 -7961.9058 7925.2783 -7962.2114 7926.0664 C
-7961.8594 7926.7793 -7961.5874 7927.7617 -7961.3574 7928.3516 c
-7960.7534 7929.8984 -7958.9546 7935.4541 -7957.5415 7937.585 C
-7958.0161 7937.375 l
-7959.6704 7934.8711 -7961.1826 7930.6387 -7961.7866 7929.0918 c
-7962.2622 7927.8701 -7962.6714 7926.1289 -7963.6558 7925.1387 c
-7963.9312 7924.8623 -7964.2559 7924.8398 -7964.4858 7925.6016 C
-7964.0015 7926.3457 -7963.5825 7927.418 -7963.2529 7928.0469 c
-7962.3887 7929.6953 -7959.7158 7935.6973 -7957.8447 7937.8359 C
-7958.4209 7937.6992 -7958.4214 7937.6992 v
-7960.6128 7935.1846 -7962.8145 7930.6455 -7963.6782 7928.9961 c
-7964.3599 7927.6943 -7965.0161 7925.7793 -7966.2695 7924.8594 c
-7966.5854 7924.627 -7966.9272 7924.6426 -7967.1313 7925.3281 C
-7966.4736 7926.082 -7965.8638 7927.2764 -7965.4072 7927.9512 c
-7964.2441 7929.6709 -7960.5635 7936.0273 -7958.1768 7938.0967 C
-7958.9502 7937.8037 -7958.9512 7937.8018 v
-7961.7471 7935.3682 -7964.6558 7930.8584 -7965.8184 7929.1387 c
-7966.7368 7927.7822 -7967.6802 7925.7119 -7969.2329 7924.918 c
f
U
U
*u
1 D
-7919.0264 7929.0566 m
-7925.5264 7929.0566 L
-7925.1826 7929.4189 -7924.7622 7929.7578 -7924.1777 7930.0332 c
-7924.1978 7930.0234 -7923.3994 7930.1563 -7923.2622 7930.332 c
-7923.0967 7930.541 -7924.7886 7930.582 -7925.6929 7929.5342 C
-7926.3486 7932.709 L
-7926.8135 7933.0273 L
-7926.0918 7929.0977 L
-7926.5249 7928.5703 -7926.8594 7928.002 -7927.3687 7927.5186 C
-7928.0337 7933.6289 L
-7928.29 7933.7754 L
-7927.8286 7927.1475 L
-7928.1104 7926.957 -7928.4424 7926.791 -7928.8486 7926.6621 C
-7929.7119 7934.0225 L
-7929.9482 7934.0078 L
-7929.3369 7926.5322 L
-7929.6729 7926.4609 -7930.0518 7926.4111 -7930.4834 7926.3857 C
-7931.0303 7933.9541 L
-7931.1992 7933.9521 L
-7930.9814 7926.3711 L
-7931.4814 7926.377 -7931.9175 7926.4473 -7932.3042 7926.5674 C
-7932.4155 7933.7061 L
-7932.6338 7933.6689 L
-7932.7935 7926.7549 L
-7933.2998 7926.9863 -7933.7266 7927.3018 -7934.1279 7927.6455 C
-7934.0454 7933.2412 L
-7934.3774 7933.0273 L
-7934.5752 7928.043 L
-7934.9434 7928.377 -7935.3096 7928.7168 -7935.7178 7929.0127 C
-7935.7217 7932.3389 L
-7936.1455 7932.0645 L
-7936.1553 7929.2988 L
-7936.6191 7929.5693 -7937.5854 7930.0098 -7938.4014 7929.8672 C
-7937.1714 7929.543 -7936.7925 7929.3301 -7936.5034 7929.0566 C
-7939.7295 7929.0566 L
-7935.8955 7933.4512 -7929.3394 7937.6865 -7924.3018 7931.0225 C
-7924.1807 7930.8838 -7923.8174 7930.5625 -7923.1255 7930.6475 C
-7919.0264 7930.6475 L
-7919.0264 7931.3672 L
-7922.4834 7931.3672 L
-7922.1318 7931.6777 -7921.8223 7932.4863 -7922.0386 7932.8574 C
-7919.0264 7932.8574 L
-7919.0264 7933.9385 L
-7922.1689 7933.9385 L
-7922.2935 7934.4492 -7922.5439 7934.8857 -7922.8218 7935.3311 C
-7919.0264 7935.3311 L
-7919.0264 7936.9873 L
-7923.7354 7936.9873 L
-7923.9424 7937.4453 -7924.1016 7937.9082 -7924.1768 7938.4121 C
-7919.0264 7938.4121 L
-7919.0264 7939.4922 L
-7924.1714 7939.4922 L
-7924.1074 7939.9834 -7923.9614 7940.4668 -7923.7378 7940.9111 C
-7919.0264 7940.9111 L
-7919.0264 7941.6309 L
-7923.2744 7941.6309 L
-7922.9375 7942.0039 -7921.8535 7942.5938 -7921.9375 7943.0225 C
-7919.0239 7943.0225 L
-7919.0239 7943.4824 L
-7919.3721 7943.4824 L
-7919.3721 7944.6826 L
-7919.0239 7944.6826 L
-7919.0239 7945.1426 L
-7926.9736 7945.1426 L
-7927.4082 7945.4375 -7928.2192 7945.4521 -7928.9897 7945.1426 C
-7932.8564 7945.1426 L
-7933.1162 7945.4609 -7934.1807 7945.5693 -7934.6846 7945.1426 C
-7935.8232 7945.1426 L
-7936.0439 7945.3994 -7936.3174 7945.6387 -7936.6782 7945.8975 C
-7919.0264 7945.8975 L
-7919.0264 7946.3809 L
-7937.8394 7946.3809 L
-7938.1982 7946.5615 -7939.2417 7946.8389 -7940.3774 7946.3809 C
-7950.6406 7946.3809 L
-7950.6406 7956.6494 L
-7950.1826 7957.7861 -7950.4614 7958.8281 -7950.6455 7959.1895 C
-7950.6455 7978 L
-7951.1279 7978 L
-7951.1279 7960.3477 L
-7951.3838 7960.709 -7951.6235 7960.9824 -7951.8794 7961.2031 C
-7951.8794 7962.3418 L
-7951.4536 7962.8457 -7951.5615 7963.9082 -7951.8794 7964.1689 C
-7951.8794 7968.0361 L
-7951.5698 7968.8076 -7951.5854 7969.6182 -7951.8833 7970.0518 C
-7951.8833 7977.998 L
-7952.3394 7977.998 L
-7952.3394 7977.6543 L
-7953.5435 7977.6543 L
-7953.5435 7977.998 L
-7954.0039 7977.998 L
-7954.0039 7975.0879 L
-7954.4287 7975.1738 -7955.0186 7974.0898 -7955.3955 7973.752 C
-7955.3955 7977.9951 L
-7956.1113 7977.9951 L
-7956.1113 7973.2891 L
-7956.5552 7973.0654 -7957.0376 7972.9189 -7957.5298 7972.8555 C
-7957.5298 7977.9951 L
-7958.6138 7977.9951 L
-7958.6138 7972.8496 L
-7959.1143 7972.9248 -7959.5767 7973.085 -7960.0391 7973.29 C
-7960.0391 7977.9951 L
-7961.6958 7977.9951 L
-7961.6958 7974.2041 L
-7962.1362 7974.4824 -7962.5728 7974.7324 -7963.0854 7974.8555 C
-7963.0854 7977.9951 L
-7964.1689 7977.9951 L
-7964.1689 7974.9893 L
-7964.5552 7975.1289 -7965.3486 7974.8945 -7965.6543 7974.543 C
-7965.6543 7977.9951 L
-7966.3794 7977.9951 L
-7966.3794 7973.9014 L
-7966.4634 7973.209 -7966.1382 7972.8457 -7966.0015 7972.7227 C
-7959.3359 7967.6885 -7963.5713 7961.1309 -7967.9658 7957.2959 C
-7967.9658 7960.5244 L
-7967.6919 7960.2344 -7967.48 7959.8555 -7967.1558 7958.625 C
-7967.0127 7959.4414 -7967.4526 7960.4082 -7967.7246 7960.8711 C
-7964.9575 7960.8828 L
-7964.6831 7961.3047 L
-7968.0103 7961.3066 L
-7968.3066 7961.7168 -7968.6455 7962.084 -7968.98 7962.4512 C
-7963.9951 7962.6475 L
-7963.7817 7962.9814 L
-7969.3774 7962.8984 L
-7969.7202 7963.2998 -7970.0361 7963.7266 -7970.2681 7964.2314 C
-7963.3535 7964.3926 L
-7963.3169 7964.6113 L
-7970.4546 7964.7227 L
-7970.5742 7965.1094 -7970.6465 7965.5439 -7970.6514 7966.0449 C
-7963.0688 7965.8262 L
-7963.0688 7965.9951 L
-7970.6362 7966.543 L
-7970.6113 7966.9746 -7970.5615 7967.3545 -7970.4888 7967.6895 C
-7963.0142 7967.0781 L
-7962.9995 7967.3145 L
-7970.3599 7968.1777 L
-7970.2314 7968.585 -7970.0654 7968.916 -7969.8755 7969.1973 C
-7963.2485 7968.7354 L
-7963.3945 7968.9932 L
-7969.5034 7969.6572 L
-7969.0215 7970.168 -7968.4521 7970.502 -7967.9238 7970.9336 C
-7963.9946 7970.2139 L
-7964.3135 7970.6768 L
-7967.4878 7971.334 L
-7966.4409 7972.2373 -7966.4814 7973.9297 -7966.6914 7973.7637 c
-7966.8657 7973.627 -7966.9985 7972.8281 -7966.9897 7972.8486 c
-7967.2656 7972.2637 -7967.6035 7971.8438 -7967.9697 7971.502 C
-7967.9697 7978 L
-7968.4536 7978 L
-7968.4536 7971.085 L
-7969.6582 7970.1377 -7970.9551 7969.5674 -7971.1167 7966.4111 c
-7971.25 7963.8311 -7969.5562 7962.7656 -7968.4497 7961.2871 C
-7968.4497 7956.7441 L
-7969.5767 7955.418 -7970.5225 7953.9912 -7970.9614 7952.1455 C
-7971.8809 7947.3662 -7968.7568 7941.8545 -7963.7959 7941.4863 C
-7963.7183 7941.6133 L
-7968.1494 7942.5352 -7970.8442 7947.6641 -7969.9814 7952.1455 C
-7969.0635 7956.0029 -7965.9395 7958.0234 -7963.5503 7961.1475 C
-7961.8975 7963.5361 -7961.3457 7966.1094 -7962.0806 7968.8652 c
-7962.8545 7971.6133 -7965.25 7972.5977 -7965.5649 7973.5303 c
-7965.8506 7974.375 -7964.6689 7974.7002 -7963.6968 7974.6348 C
-7961.5454 7974.4395 -7960.1602 7971.4922 -7956.3184 7972.7559 c
-7955.2222 7973.1162 -7954.5913 7973.9375 -7954.3042 7974.5469 c
-7954.1104 7974.957 -7952.7241 7974.4395 -7953.9165 7972.2207 C
-7956.8774 7972.0879 -7956.4521 7970.0645 -7956.2026 7970.2109 c
-7954.5015 7971.209 -7953.1826 7969.3047 -7954.1055 7968.2959 c
-7956.2129 7965.9902 -7957.8481 7966.2861 -7959.9248 7962.3174 c
-7962.2095 7957.9521 -7963.2695 7952.0723 -7960.7959 7947.9082 C
-7960.7954 7947.1387 L
-7961.0479 7946.5439 -7961.0249 7946.085 -7961.2134 7945.168 c
-7961.3818 7944.3535 -7961.6689 7944.085 -7961.9575 7943.9121 C
-7962.1304 7943.7969 -7962.5015 7943.9053 -7962.5054 7944.1445 c
-7962.52 7944.7461 -7961.7842 7944.5225 -7961.8271 7944.584 c
-7962.1895 7945.0869 -7962.7329 7944.7295 -7962.8345 7944.377 c
-7962.9648 7943.9287 -7962.6606 7943.5762 -7962.3145 7943.4902 C
-7961.6655 7943.3594 -7961.1968 7943.9277 -7960.9575 7944.457 c
-7960.4365 7945.6074 -7960.4746 7947.252 -7959.2607 7947.8574 c
-7958.4385 7948.2471 -7957.5537 7947.9277 -7956.7271 7947.6328 c
-7953.8296 7946.6016 -7950.3096 7943.082 -7949.2783 7940.1836 c
-7948.9834 7939.3574 -7948.6641 7938.4727 -7949.0537 7937.6494 c
-7949.6606 7936.4375 -7951.3042 7936.4746 -7952.4546 7935.9541 c
-7952.9834 7935.7148 -7953.5513 7935.2461 -7953.4214 7934.5967 C
-7953.3345 7934.25 -7952.9824 7933.9473 -7952.5327 7934.0762 c
-7952.1826 7934.1797 -7951.8242 7934.7227 -7952.3281 7935.084 c
-7952.3882 7935.127 -7952.1655 7934.3906 -7952.7681 7934.4053 c
-7953.0054 7934.4111 -7953.1143 7934.7813 -7952.9995 7934.9541 C
-7952.8257 7935.2422 -7952.5591 7935.5293 -7951.7422 7935.6973 c
-7950.7085 7935.9102 -7950.2578 7935.8535 -7949.5386 7936.2266 C
-7949.1167 7936.2266 L
-7944.9546 7933.7529 -7939.0674 7934.8008 -7934.7095 7937.0977 c
-7934.0527 7937.4551 -7933.4834 7937.8008 -7932.9126 7938.1475 c
-7931.5488 7938.9766 -7929.5542 7941.8857 Y
-7929.1782 7942.332 -7928.9521 7942.7979 -7928.5225 7943.0625 c
-7927.3569 7943.7783 -7925.8184 7942.5215 -7926.8154 7940.8193 c
-7926.9614 7940.5703 -7924.9385 7940.1455 -7924.8057 7943.1064 C
-7922.5874 7944.2988 -7922.0698 7942.9121 -7922.4795 7942.7178 c
-7923.0889 7942.4316 -7923.9087 7941.7998 -7924.2705 7940.7041 c
-7925.5342 7936.8623 -7922.3599 7935.0234 -7922.4463 7933.3262 C
-7922.3008 7932.5322 -7922.6514 7931.1719 -7923.4961 7931.459 c
-7924.4282 7931.7725 -7925.4126 7934.168 -7928.1606 7934.9414 c
-7930.9175 7935.6768 -7933.4897 7935.125 -7935.8774 7933.4717 C
-7939.0034 7931.084 -7941.0234 7927.959 -7944.8818 7927.041 C
-7949.3623 7926.1777 -7954.4902 7928.873 -7955.4126 7933.3037 C
-7955.5391 7933.2266 L
-7955.1729 7928.2656 -7949.6592 7925.1426 -7944.8818 7926.0615 C
-7943.0361 7926.502 -7941.6104 7927.4453 -7940.2822 7928.5723 C
-7935.7393 7928.5723 L
-7934.2607 7927.4668 -7933.1943 7925.7725 -7930.6143 7925.9053 c
-7927.4585 7926.0664 -7926.8882 7927.3633 -7925.9409 7928.5723 C
-7919.0264 7928.5723 L
-7919.0264 7929.0566 L
f
0 D
-7948.1362 7938.4121 m
-7940.5166 7938.4121 L
-7941.5635 7937.8301 -7942.5435 7937.3184 -7943.8057 7936.9873 C
-7948.6079 7936.9873 L
-7948.2998 7937.3809 -7948.1055 7937.8701 -7948.1362 7938.4121 C
f
-7949.0591 7940.9111 m
-7937.5254 7940.9111 L
-7937.6338 7940.6201 -7938.0063 7939.9404 -7938.8042 7939.4922 C
-7948.4321 7939.4922 L
-7948.6118 7939.9727 -7948.8232 7940.4463 -7949.0591 7940.9111 C
f
-7937.8096 7943.0225 m
-7937.3174 7942.4395 -7937.2568 7942.2207 -7937.3857 7941.6309 C
-7949.4521 7941.6309 L
-7949.7295 7942.1074 -7950.0322 7942.5723 -7950.3599 7943.0225 C
-7942.2568 7943.0225 L
-7941.9111 7942.2041 -7941.1665 7942.3711 -7940.8218 7943.0225 C
-7937.8096 7943.0225 L
f
-7939.1201 7943.4824 m
-7939.1201 7943.8242 L
-7938.5664 7943.7861 -7938.4995 7943.752 -7938.1982 7943.4824 C
-7939.1201 7943.4824 L
f
-7940.4863 7943.4824 m
-7940.3311 7943.6719 -7940.0264 7943.8154 -7939.8257 7943.8457 C
-7939.8257 7943.4824 L
-7940.4863 7943.4824 L
f
-7943.3535 7943.4824 m
-7943.3535 7944.6826 L
-7942.6465 7944.6826 L
-7942.6465 7943.4824 L
-7943.3535 7943.4824 L
f
-7944.7622 7943.4824 m
-7944.7622 7944.6826 L
-7944.0576 7944.6826 L
-7944.0576 7943.4824 L
-7944.7622 7943.4824 L
f
-7946.1729 7943.4824 m
-7946.1729 7944.6826 L
-7945.4678 7944.6826 L
-7945.4678 7943.4824 L
-7946.1729 7943.4824 L
f
-7947.5835 7943.4824 m
-7947.5835 7944.6826 L
-7946.8774 7944.6826 L
-7946.8774 7943.4824 L
-7947.5835 7943.4824 L
f
-7948.9946 7943.4824 m
-7948.9946 7944.6826 L
-7948.2886 7944.6826 L
-7948.2886 7943.4824 L
-7948.9946 7943.4824 L
f
-7954 7954.7695 m
-7954 7946.6504 L
-7954.4497 7946.9756 -7954.9146 7947.2754 -7955.3911 7947.5449 C
-7955.3911 7959.6406 L
-7954.8018 7959.7695 -7954.5825 7959.709 -7954 7959.2158 C
-7954 7956.2041 L
-7954.6514 7955.8613 -7954.8169 7955.1152 -7954 7954.7695 C
f
-7953.5391 7954.3799 m
-7952.3394 7954.3799 L
-7952.3394 7953.6748 L
-7953.5391 7953.6748 L
-7953.5391 7954.3799 L
f
-7952.3394 7952.9688 m
-7952.3394 7952.2637 L
-7953.5391 7952.2637 L
-7953.5391 7952.9688 L
-7952.3394 7952.9688 L
f
-7952.3394 7951.5586 m
-7952.3394 7950.8535 L
-7953.5391 7950.8535 L
-7953.5391 7951.5586 L
-7952.3394 7951.5586 L
f
-7952.3394 7950.1484 m
-7952.3394 7949.4434 L
-7953.5391 7949.4434 L
-7953.5391 7950.1484 L
-7952.3394 7950.1484 L
f
-7952.3394 7948.7373 m
-7952.3394 7948.0313 L
-7953.5391 7948.0313 L
-7953.5391 7948.7373 L
-7952.3394 7948.7373 L
f
-7952.3394 7947.3262 m
-7952.3394 7946.6201 L
-7953.5391 7946.6201 L
-7953.5391 7947.3262 L
-7952.3394 7947.3262 L
f
-7952.3394 7945.918 m
-7952.3394 7945.2725 L
-7952.5728 7945.4941 -7952.8135 7945.709 -7953.0591 7945.918 C
-7952.3394 7945.918 L
f
-7950.4058 7944.6826 m
-7949.6992 7944.6826 L
-7949.6992 7943.4824 L
-7950.4058 7943.4824 L
-7950.4058 7944.6826 L
f
-7951.7495 7944.6826 m
-7951.1094 7944.6826 L
-7951.1094 7943.9746 L
-7951.3159 7944.2158 -7951.5288 7944.4521 -7951.7495 7944.6826 C
f
-7957.5298 7948.5273 m
-7957.5298 7958.2227 L
-7957.0815 7959.0186 -7956.4014 7959.3926 -7956.1113 7959.502 C
-7956.1113 7947.9258 L
-7956.5762 7948.1563 -7957.0488 7948.3564 -7957.5298 7948.5273 C
f
-7960.0352 7948.209 m
-7960.0352 7953.2207 L
-7959.7041 7954.4844 -7959.1929 7955.4629 -7958.6094 7956.5098 C
-7958.6094 7948.7725 L
-7959.1606 7948.7705 -7959.6494 7948.5439 -7960.0352 7948.209 C
f
-7952.3394 7976.2441 m
-7953.5391 7976.2441 L
-7953.5391 7976.9482 L
-7952.3394 7976.9482 L
-7952.3394 7976.2441 L
f
-7952.3394 7974.834 m
-7953.3896 7974.834 L
-7953.4375 7974.8838 -7953.4878 7974.9297 -7953.5391 7974.9678 C
-7953.5391 7975.5381 L
-7952.3394 7975.5381 L
-7952.3394 7974.834 L
f
-7952.3394 7973.4209 m
-7953.0039 7973.4209 L
-7952.9702 7973.6475 -7952.9595 7973.9121 -7953.0137 7974.1279 C
-7952.3394 7974.1279 L
-7952.3394 7973.4209 L
f
-7952.3394 7972.0117 m
-7953.5015 7972.0117 L
-7953.3872 7972.2461 -7953.2798 7972.4814 -7953.1919 7972.7168 C
-7952.3394 7972.7168 L
-7952.3394 7972.0117 L
f
-7952.3394 7970.9033 m
-7952.4614 7971.0625 -7952.5938 7971.2197 -7952.6753 7971.3066 C
-7952.3394 7971.3066 L
-7952.3394 7970.9033 L
f
-7952.4399 7955.4395 m
-7952.6968 7955.2891 -7954.0845 7954.8135 -7954.0737 7955.5381 c
-7954.0674 7955.9502 -7953.4512 7956.2412 -7953.2495 7956.4473 c
-7952.6338 7957.0703 -7952.1885 7958.5254 -7953.2974 7959.4238 c
-7955.6328 7961.3145 -7957.1865 7959.5879 Y
-7961.1118 7955.7324 -7961.1104 7950.1113 Y
-7962.2295 7954.334 -7960.9663 7959.3936 -7959.4048 7962.1426 c
-7956.8818 7966.584 -7955.9575 7965.0566 -7953.6113 7967.9482 c
-7952.8047 7968.9434 -7953.1294 7971.3818 -7955.9546 7970.75 c
-7956.2026 7970.6934 -7955.7759 7971.2949 -7955.2681 7971.5498 c
-7953.1104 7972.6406 -7951.8618 7970.1631 -7952.1338 7968.8594 c
-7952.4761 7967.2109 -7953.0986 7966.3662 -7955.1616 7965.2246 C
-7954.8311 7965.2373 -7953.2134 7965.541 -7952.2295 7964.0088 c
-7952.0195 7963.6826 -7951.8745 7962.7578 -7952.3042 7962.877 c
-7952.3906 7962.9023 -7952.6416 7963.1973 -7952.9414 7963.3613 c
-7954.9321 7964.3945 -7955.7075 7962.0137 Y
-7953.4165 7961.8418 -7952.7515 7961.7637 -7951.2559 7959.7637 c
-7951.0542 7959.4941 -7950.1162 7956.8047 -7952.4399 7955.4395 c
f
-7953.5391 7962.1367 m
-7953.5391 7963.0225 L
-7953.2993 7962.998 -7952.9302 7962.957 -7952.3394 7962.4033 C
-7952.3394 7962.1367 L
-7953.5391 7962.1367 L
f
-7954.9946 7962.2305 m
-7954.8042 7962.7031 -7954.4185 7962.9473 -7954 7963.0127 C
-7954 7962.1709 L
-7954.3857 7962.2354 -7954.9946 7962.2305 Y
f
-7952.3394 7965.666 m
-7952.3394 7964.959 L
-7952.6382 7964.959 L
-7952.9136 7965.1475 -7953.2246 7965.293 -7953.5391 7965.3818 C
-7953.5391 7965.666 L
-7952.3394 7965.666 L
f
-7952.9897 7966.3682 m
-7952.7935 7966.5342 -7952.5576 7966.7813 -7952.3394 7967.1084 C
-7952.3394 7966.3682 L
-7952.9897 7966.3682 L
f
-7954.2495 7965.4746 m
-7954.1914 7965.5273 -7954.1025 7965.5967 -7954 7965.6719 C
-7954 7965.4668 L
-7954.0835 7965.4746 -7954.1675 7965.4785 -7954.2495 7965.4746 C
f
-7953.5391 7957.9063 m
-7953.5391 7958.8262 L
-7953.2715 7958.5273 -7953.2358 7958.46 -7953.1982 7957.9063 C
-7953.5391 7957.9063 L
f
-7953.1758 7957.2012 m
-7953.2065 7957.002 -7953.3506 7956.6943 -7953.5391 7956.54 C
-7953.5391 7957.2012 L
-7953.1758 7957.2012 L
f
-7941.1865 7945.8975 m
-7941.4233 7945.6943 -7941.6401 7945.4463 -7941.8271 7945.1426 C
-7951.8794 7945.1426 L
-7951.8794 7955.1992 L
-7951.5762 7955.3857 -7951.3271 7955.6025 -7951.1255 7955.8408 C
-7951.1265 7945.8975 L
-7941.1865 7945.8975 L
f
-7934.6226 7944.6826 m
-7934.0698 7944.0928 -7934.0298 7943.7227 -7934.0034 7943.4824 C
-7934.8887 7943.4824 L
-7934.8887 7944.6826 L
-7934.6226 7944.6826 L
f
-7934.8564 7943.0225 m
-7934.0127 7943.0225 L
-7934.0791 7942.6045 -7934.3232 7942.2188 -7934.7959 7942.0273 C
-7934.7915 7942.6367 -7934.8564 7943.0225 V
f
-7931.3623 7943.4824 m
-7931.6455 7943.4824 L
-7931.7334 7943.7979 -7931.8799 7944.1084 -7932.0674 7944.3838 C
-7932.0674 7944.6826 L
-7931.3623 7944.6826 L
-7931.3623 7943.4824 L
f
-7931.3545 7943.0225 m
-7931.4302 7942.9199 -7931.4995 7942.8311 -7931.5518 7942.7734 C
-7931.5479 7942.8555 -7931.5518 7942.9395 -7931.5601 7943.0225 C
-7931.3545 7943.0225 L
f
-7929.9185 7944.6826 m
-7930.2446 7944.4648 -7930.4912 7944.2305 -7930.6577 7944.0332 C
-7930.6577 7944.6826 L
-7929.9185 7944.6826 L
f
-7925.7202 7944.3477 m
-7925.8066 7944.4287 -7925.9639 7944.5615 -7926.1226 7944.6826 C
-7925.7202 7944.6826 L
-7925.7202 7944.3477 L
f
-7925.4751 7941.7549 m
-7925.7329 7941.2461 -7926.0913 7940.8945 -7926.2778 7941.0684 c
-7926.4248 7941.2041 -7925.4424 7942.9434 -7926.9009 7943.7725 c
-7927.7158 7944.2354 -7928.8721 7943.873 -7929.2842 7943.3066 c
-7931.5615 7940.1836 -7931.4746 7939.5586 -7934.8848 7937.6172 c
-7937.6318 7936.0537 -7942.6943 7934.793 -7946.9155 7935.9121 C
-7941.2935 7935.9102 -7937.4385 7939.8359 V
-7935.7119 7941.3906 -7937.6025 7943.7246 v
-7938.5015 7944.834 -7939.9551 7944.3887 -7940.5791 7943.7734 c
-7940.7842 7943.5703 -7941.0752 7942.9551 -7941.4873 7942.9482 c
-7942.2134 7942.9385 -7941.7378 7944.3242 -7941.5874 7944.582 c
-7940.2217 7946.9063 -7937.5322 7945.9678 -7937.2622 7945.7656 c
-7935.2622 7944.2705 -7935.1846 7943.6064 -7935.0127 7941.3145 C
-7932.6328 7942.0898 -7933.6655 7944.0801 v
-7933.8286 7944.3809 -7934.1245 7944.6318 -7934.1489 7944.7178 c
-7934.2695 7945.1475 -7933.3423 7945.0029 -7933.0176 7944.7949 c
-7931.4858 7943.8086 -7931.7881 7942.1914 -7931.8018 7941.8613 C
-7930.6602 7943.9248 -7929.8154 7944.5469 -7928.1675 7944.8887 c
-7926.8633 7945.1602 -7924.3857 7943.9121 -7925.4751 7941.7549 c
f
-7924.3096 7943.8301 m
-7924.5454 7943.7422 -7924.7817 7943.6357 -7925.0142 7943.5215 C
-7925.0142 7944.6826 L
-7924.3096 7944.6826 L
-7924.3096 7943.8301 L
f
-7922.8994 7944.0088 m
-7923.1143 7944.0625 -7923.3794 7944.0518 -7923.6055 7944.0186 C
-7923.6055 7944.6826 L
-7922.8994 7944.6826 L
-7922.8994 7944.0088 L
f
-7920.7822 7944.6826 m
-7920.0767 7944.6826 L
-7920.0767 7943.4824 L
-7920.7822 7943.4824 L
-7920.7822 7944.6826 L
f
-7922.1934 7944.6826 m
-7921.4878 7944.6826 L
-7921.4878 7943.4824 L
-7922.0586 7943.4824 L
-7922.0967 7943.5342 -7922.1426 7943.585 -7922.1934 7943.6328 C
-7922.1934 7944.6826 L
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 3)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-4105.5 4105.291 m
-4006.5696 4105.291 L
-4006.5696 4088.9272 L
-4105.5 4088.9272 L
-4105.5 4105.291 L
n
u
u
0 O
0 0 0 1 k
-4009.0071 4094.6094 m
-4008.7832 4094.5537 -4008.5879 4094.8643 -4008.6721 4095.0039 C
-4008.2161 4094.6274 -4008.2063 4095.0557 -4008.1472 4094.3262 C
-4007.8545 4093.9683 -4007.5422 4094.4639 -4007.8752 4094.7598 C
-4007.0313 4094.3135 L
-4007.5359 4094.1997 L
-4007.3984 4093.5933 -4006.7295 4094.3809 -4006.5696 4093.6743 C
-4007.4832 4093.7334 L
-4007.4375 4093.5313 L
-4007.6455 4093.749 -4008.0496 4093.6582 -4008.1904 4093.5732 C
-4008.1682 4093.4736 -4008.1824 4093.3115 -4008.0212 4093.2935 C
-4009.1243 4093.2471 -4008.3184 4094.3545 -4009.2336 4094.5557 C
-4009.1763 4094.541 -4009.1052 4094.5493 -4009.0071 4094.6094 C
f
-4009.9441 4093.125 m
-4010.3289 4093.8853 L
-4010.9744 4093.6895 L
-4010.9817 4093.9517 -4011.4519 4094.1641 -4011.1335 4094.3955 C
-4011.0713 4094.3545 -4010.9482 4094.2759 -4010.8489 4094.2998 C
-4010.9209 4094.8672 -4011.7073 4094.583 -4011.5176 4095.1572 C
-4011.0071 4095.0068 -4010.9287 4095.1318 -4010.6145 4094.6709 C
-4010.1465 4094.7236 -4009.8057 4094.8545 -4009.5872 4095.0615 C
-4009.4482 4094.9751 -4009.4287 4094.6274 -4009.2522 4094.5576 C
-4009.2913 4094.5664 -4009.3271 4094.5752 -4009.3721 4094.5796 C
-4009.3911 4093.7261 L
-4009.5383 4093.9063 -4009.6775 4093.8213 -4009.8408 4093.8389 C
-4009.0852 4092.8423 L
-4009.3289 4092.0435 -4010.0713 4092.5127 -4010.3679 4092.1807 C
-4010 4092.8984 -4010.6609 4092.5376 -4009.9441 4093.125 C
f
-4009.2522 4094.5576 m
-4009.2473 4094.5576 -4009.2393 4094.5566 -4009.2336 4094.5557 C
-4009.2393 4094.5566 -4009.2473 4094.5566 -4009.2522 4094.5576 C
f
-4065.7073 4099.5225 m
-4065.8679 4099.5376 -4065.9153 4099.7393 -4065.9385 4099.8408 C
-4064.1296 4099.8247 L
-4064.1863 4099.6006 -4064.7073 4099.3232 -4064.3591 4099.1895 C
-4064.5144 4098.9414 -4064.9873 4099.1533 -4065.0559 4099.4561 C
-4064.9248 4099.1143 L
-4065.3416 4099.5518 -4065.6262 4098.6919 -4065.3545 4098.4336 C
-4065.3896 4098.4385 L
-4066.5439 4100.123 L
-4066.1201 4100.2212 -4066.2175 4099.5435 -4065.7073 4099.5225 C
f
-4102.8564 4098.665 m
-4102.6221 4098.5869 -4102.5938 4098.5059 -4102.6201 4098.4229 C
-4102.7041 4098.4854 -4102.7842 4098.5576 -4102.8564 4098.665 C
f
-4066.8137 4100.5181 m
-4067.1753 4101.0454 L
-4067.0305 4100.9033 -4066.9033 4100.7139 -4066.8137 4100.5181 C
f
-4064.3088 4092.499 m
-4064.3081 4092.4712 -4064.3042 4092.4463 -4064.3137 4092.4087 C
-4064.4761 4092.6782 L
-4064.4736 4092.6782 -4064.4729 4092.6782 -4064.4719 4092.6782 C
-4064.4121 4092.6187 -4064.3584 4092.5591 -4064.3088 4092.499 C
f
-4075.0212 4102.499 m
-4075.0601 4102.5127 -4075.0935 4102.5181 -4075.1399 4102.5356 C
-4075.0967 4102.5313 -4075.0576 4102.5176 -4075.0212 4102.499 C
f
-4059.4087 4089.4854 m
-4060.2129 4089.9927 L
-4060.1057 4089.7524 -4060.4937 4089.8247 -4060.3242 4089.5449 C
-4060.3855 4089.583 -4060.6729 4089.6782 -4060.5945 4089.8013 C
-4060.4304 4089.7856 L
-4060.8545 4090.4854 -4060.5977 4090.7544 -4061.3008 4091.2871 C
-4060.8643 4091.7017 -4060.6729 4091.3223 -4060.4417 4091.0039 C
-4060.3633 4090.9551 -4060.2976 4090.9336 -4060.2312 4090.9072 C
-4059.5625 4089.9292 L
-4059.4087 4089.4854 L
f
-4091.6504 4094.6934 m
-4091.6416 4094.6392 L
-4091.6497 4094.6582 -4091.6511 4094.6763 -4091.6504 4094.6934 C
f
-4091.6064 4094.415 m
-4091.6416 4094.6392 L
-4091.5984 4094.5269 -4091.4329 4094.4199 -4091.6064 4094.415 C
f
-4066.6809 4100.0654 m
-4066.6919 4100.1953 -4066.7383 4100.3545 -4066.8137 4100.5181 C
-4066.5439 4100.123 L
-4066.5823 4100.1152 -4066.6328 4100.0879 -4066.6809 4100.0654 C
f
-4066.0671 4098.5376 m
-4065.3896 4098.4385 L
-4065.1399 4098.0752 L
-4065.3992 4098.2124 -4065.7024 4098.3062 -4066.0671 4098.5376 C
f
-4073.9512 4102.9102 m
-4075.3545 4103.0176 -4073.6064 4102.0869 -4074.2512 4101.8887 C
-4074.6409 4101.9854 -4074.7783 4102.3765 -4075.0212 4102.499 C
-4073.9082 4102.165 -4075.1721 4103.7856 -4074.0496 4103.5791 C
-4074.2092 4104.2856 -4074.8591 4104.3496 -4075.24 4104.1582 C
-4075.6711 4103.4771 -4074.8633 4103.6592 -4074.7656 4102.9912 C
-4075.2161 4103.1021 -4075.1367 4103.2261 -4075.3279 4103.6064 C
-4076.0352 4103.4478 -4076.7913 4104.4429 -4077.2136 4103.499 C
-4077.7256 4103.6494 -4077.6919 4103.9751 -4077.9863 4104.334 C
-4078.0449 4105.063 -4077.2249 4104.7168 -4077.0352 4105.291 C
-4077.0745 4105.2295 -4077.1511 4105.1064 -4077.1289 4105.0039 C
-4076.6863 4105.1572 L
-4077.1064 4104.9033 -4076.6279 4104.4287 -4076.4033 4104.3716 C
-4076.24 4104.3564 -4075.9153 4104.3232 -4075.96 4104.5254 C
-4076.2073 4104.6816 L
-4075.8889 4104.9126 -4075.5049 4104.1504 -4075.1687 4104.5454 C
-4075.1511 4104.709 -4075.2783 4104.7856 -4075.2976 4104.8877 C
-4074.9209 4104.3896 -4074.5576 4104.4185 -4074 4104.0664 C
-4074.3232 4104.7896 L
-4073.8772 4103.9893 -4072.8672 4104.2168 -4072.1672 4104.6392 C
-4072.2449 4104.5166 -4072.3848 4104.4307 -4072.3008 4104.291 C
-4071.8896 4104.1182 -4071.5791 4104.6143 -4071.7695 4104.9951 C
-4071.3679 4104.3955 -4070.2393 4105.5 -4069.6919 4104.7207 C
-4067.1753 4101.0454 L
-4067.2695 4101.1377 -4067.3704 4101.2124 -4067.4744 4101.2437 C
-4067.7031 4100.6094 -4067.8264 4100.6865 -4067.4255 4100.0879 C
-4067.8191 4100.4238 -4067.6687 4100.9336 -4068.26 4100.96 C
-4068.0281 4100.6406 -4067.9695 4099.9121 -4068.5359 4099.8369 C
-4069.9519 4100.4712 -4070.8904 4102.2759 -4072.2129 4103.1982 C
-4072.2617 4102.709 -4073.3 4102.8462 -4073.8047 4102.7314 C
-4073.6121 4102.2061 -4073.2375 4102.0566 -4072.8489 4101.9502 C
-4073.0928 4101.917 -4073.5127 4101.9033 -4073.8242 4101.8799 C
-4073.9512 4102.9102 L
f
-4070.6631 4101.2661 m
-4070.6985 4101.2227 -4070.7351 4101.1982 -4070.7727 4101.1753 C
-4070.7527 4101.2158 -4070.72 4101.2471 -4070.6631 4101.2661 C
f
-4072.7305 4101.9648 m
-4072.7256 4101.9473 -4072.7273 4101.9326 -4072.7256 4101.9126 C
-4072.7664 4101.9238 -4072.8071 4101.9385 -4072.8489 4101.9502 C
-4072.8071 4101.9541 -4072.76 4101.96 -4072.7305 4101.9648 C
f
-4067.0127 4098.9604 m
-4066.9287 4098.8213 -4066.8665 4098.7822 -4066.7825 4098.6416 C
-4066.8342 4098.6895 -4066.8992 4098.7271 -4066.9617 4098.7695 C
-4067.0212 4098.8354 -4067.0496 4098.9014 -4067.0127 4098.9604 C
f
-4066.7295 4099.8213 m
-4066.7744 4100.0225 L
-4066.7383 4100.0449 -4066.7129 4100.0493 -4066.6809 4100.0654 C
-4066.6711 4099.957 -4066.6816 4099.8662 -4066.7295 4099.8213 C
f
-4079.3137 4098.4873 m
-4079.4482 4098.5933 L
-4079.3672 4098.5854 -4079.3323 4098.542 -4079.3137 4098.4873 C
f
-4075.5144 4102.0796 m
-4075.0264 4102.0313 -4075.4561 4101.3496 -4074.7656 4101.3462 C
-4074.9683 4101.3013 L
-4074.4729 4100.9893 -4073.6023 4101.1328 -4073.0137 4101.1064 C
-4073.0801 4101.3984 -4072.6567 4101.4604 -4072.7256 4101.9126 C
-4072.3232 4101.8062 -4071.9248 4101.7061 -4071.7175 4101.2393 C
-4071.4683 4101.3926 -4071.0896 4100.9824 -4070.7727 4101.1753 C
-4070.9065 4100.9019 -4070.3215 4100.2515 -4071.0928 4100.5854 C
-4071.0305 4100.5479 -4071.0696 4100.4854 -4071.0081 4100.4473 C
-4071.5049 4100.0664 -4071.7041 4100.7124 -4072.1321 4100.7212 C
-4072.3879 4100.4517 -4071.7136 4100.2856 -4071.9551 4100.1782 C
-4072.4895 4100.4292 -4073.6321 4099.8535 -4073.5967 4100.8677 C
-4073.9856 4100.9395 -4074.0393 4100.7158 -4074.1553 4100.5303 C
-4074.7705 4101.6108 -4076.4385 4100.0664 -4076.4329 4101.4478 C
-4076.2083 4101.3936 -4075.8423 4101.4229 -4075.5127 4101.1274 C
-4075.5144 4102.0796 L
f
-4067.8323 4099.0313 m
-4067.8623 4099.0254 -4067.9023 4099.0303 -4067.9272 4099.0181 C
-4067.8992 4099.0254 -4067.8643 4099.0303 -4067.8323 4099.0313 C
f
*u
1 D
-4061.6736 4103.0356 m
-4061.8777 4103.9395 L
-4063.0398 4104.1553 -4063.46 4103.9014 -4064.4761 4103.9375 C
-4064.5537 4103.8135 -4064.4304 4103.7349 -4064.3679 4103.6953 C
-4065.0823 4103.7998 -4066.1511 4103.6104 -4066.6711 4104.0254 C
-4066.8984 4104.0181 -4067.4951 4103.7314 -4067.2693 4103.4648 C
-4067.3799 4103.5454 -4067.5063 4103.623 -4067.6335 4103.5942 C
-4067.6672 4103.2695 -4067.3489 4103.5015 -4067.3416 4103.2349 C
-4067.4424 4103.2134 -4067.4817 4103.1504 -4067.5049 4103.2524 C
-4067.3352 4102.9736 -4067.6809 4102.1509 -4066.8896 4102.1719 C
-4066.5833 4102.9307 -4067.4385 4102.2598 -4067.2576 4103.0967 C
-4066.9951 4103.1021 -4067.0256 4102.7783 -4067.0032 4102.6763 C
-4066.6687 4102.6953 -4066.6775 4102.9053 -4066.6953 4103.0967 C
-4066.5671 4102.8369 -4066.1465 4103.1982 -4065.9695 4102.8037 C
-4065.3191 4102.7393 -4066.0049 4103.4326 -4065.5801 4103.4229 C
-4065.3352 4102.5752 L
-4064.6289 4102.7349 L
-4063.6064 4102.4375 -4064.7751 4101.2705 -4063.6064 4100.791 C
-4063.76 4101.2334 -4063.2913 4101.9766 -4062.7473 4102.1533 C
-4063.0728 4102.1846 -4063.6743 4102.7373 -4064.0945 4102.4854 C
-4063.5022 4103.1494 -4064.9097 4102.5654 -4064.6023 4103.3252 C
-4064.3096 4102.9648 -4063.8215 4102.917 -4063.4409 4103.1108 C
-4063.5657 4103.1895 L
-4063.1609 4103.2793 -4062.8545 4102.3926 -4062.2959 4102.7314 C
-4062.0183 4102.7041 -4062.0703 4102.9429 -4062.1191 4103.1416 C
-4061.8843 4103.0142 -4061.6743 4102.8486 -4061.6736 4103.0356 C
f
0 D
-4062.2783 4103.2134 m
-4062.6497 4103.1294 L
-4062.5615 4103.2695 -4062.4231 4103.2646 -4062.2783 4103.2134 C
f
*U
-4015.1377 4093.2349 m
-4015.1008 4093.2573 -4015.0583 4093.2803 -4015.0249 4093.3037 C
-4015.0496 4093.2646 -4015.0923 4093.2471 -4015.1377 4093.2349 C
f
-4048.0967 4092.9102 m
-4047.8816 4092.9385 L
-4047.9656 4092.9092 -4048.0344 4092.9053 -4048.0967 4092.9102 C
f
-4043.2693 4090.1104 m
-4042.9551 4089.9126 L
-4043.0791 4089.9253 -4043.1763 4090.0039 -4043.2693 4090.1104 C
f
-4017.7024 4093.1768 m
-4017.7129 4093.1709 L
-4017.7305 4093.1846 -4017.7439 4093.2041 -4017.7625 4093.2158 C
-4017.7024 4093.1768 L
f
-4033.5872 4092.0933 m
-4033.5393 4092.165 -4033.4856 4092.23 -4033.4121 4092.2803 C
-4033.4209 4092.1963 -4033.4863 4092.1353 -4033.5872 4092.0933 C
f
-4043.3271 4090.1475 m
-4043.3191 4090.1553 -4043.3145 4090.1572 -4043.3081 4090.1631 C
-4043.2959 4090.1455 -4043.2825 4090.1265 -4043.2693 4090.1104 C
-4043.3271 4090.1475 L
f
-4050.2231 4090.4385 m
-4050.2693 4090.4648 -4050.3113 4090.4854 -4050.3608 4090.5225 C
-4050.2959 4090.5059 -4050.2561 4090.4741 -4050.2231 4090.4385 C
f
-4049.9199 4092.8408 m
-4049.9695 4092.8623 -4050.0168 4092.8887 -4050.0537 4092.9253 C
-4049.9199 4092.8408 L
f
-4057.3577 4091.1934 m
-4057.6472 4091.3145 L
-4057.5049 4091.3013 -4057.4199 4091.2544 -4057.3577 4091.1934 C
f
-4050.6863 4092.2856 m
-4050.7031 4092.3252 -4050.72 4092.3633 -4050.7312 4092.4014 C
-4050.6912 4092.375 -4050.6721 4092.3252 -4050.6863 4092.2856 C
f
-4013.2976 4095.7617 m
-4013.3042 4095.7617 -4013.3113 4095.7646 -4013.3152 4095.7646 C
-4013.3225 4095.8633 L
-4013.2976 4095.7617 L
f
-4012.5935 4094.5269 m
-4012.5105 4094.5015 -4012.4241 4094.479 -4012.3391 4094.457 C
-4012.4336 4094.4517 -4012.5256 4094.4785 -4012.5935 4094.5269 C
f
-4029.3809 4093.457 m
-4029.3042 4093.5796 -4029.1243 4093.7261 -4029.2083 4093.8662 C
-4029.0615 4093.6895 -4029.0713 4093.2603 -4029.3809 4093.457 C
f
-4014.7092 4101.0664 m
-4014.6631 4100.9517 -4014.6057 4100.8643 -4014.5481 4100.7783 C
-4014.6553 4100.9019 -4014.7493 4101.0039 -4014.7092 4101.0664 C
f
-4014.5481 4100.7783 m
-4014.4951 4100.7173 -4014.4385 4100.6533 -4014.3911 4100.5869 C
-4014.4463 4100.6416 -4014.4993 4100.7061 -4014.5481 4100.7783 C
f
-4031.3313 4100.4912 m
-4031.3503 4100.4336 -4031.3799 4100.3853 -4031.4199 4100.3701 C
-4031.4082 4100.4854 -4031.3762 4100.5103 -4031.3313 4100.4912 C
f
-4012.1335 4094.5928 m
-4012.0879 4094.3911 -4010.9817 4093.9517 -4011.9121 4093.8486 C
-4011.8762 4093.2192 -4011.3152 4093.5576 -4011.0671 4093.4019 C
-4011.2473 4093.2544 -4010.9775 4092.998 -4011.0322 4092.7734 C
-4011.1553 4092.8496 -4011.3015 4093.0303 -4011.5049 4092.9854 C
-4011.5984 4092.6982 -4011.2898 4092.5024 -4011.0488 4092.6104 C
-4011.3457 4092.2783 -4010.6721 4092.1118 -4011.0923 4091.8574 C
-4011.9905 4092.0791 -4012.6252 4092.3076 -4013.2568 4093.2261 C
-4012.7449 4093.0752 -4012.1721 4092.8877 -4011.7522 4093.1406 C
-4011.9287 4093.6846 L
-4012.4033 4093.2061 -4012.6963 4093.563 -4013.1631 4093.5127 C
-4012.1145 4093.8013 L
-4011.6233 4094.2544 -4011.9519 4094.3584 -4012.3391 4094.457 C
-4012.2439 4094.4639 -4012.1577 4094.4966 -4012.1335 4094.5928 C
f
-4012.8401 4099.3662 m
-4012.8225 4099.3809 L
-4012.8071 4099.3623 -4012.7881 4099.3496 -4012.7783 4099.3267 C
-4012.8401 4099.3662 L
f
-4057.3042 4102.2017 m
-4057.3943 4102.4077 L
-4057.3191 4102.3145 -4057.2959 4102.2515 -4057.3042 4102.2017 C
f
-4013.4656 4096.7314 m
-4013.4648 4096.7314 L
-4013.4719 4096.7373 -4013.4736 4096.7373 -4013.4656 4096.7314 C
f
-4055.0632 4102.2437 m
-4055.0664 4102.2583 -4055.0696 4102.2744 -4055.0752 4102.291 C
-4055.0671 4102.2744 -4055.0671 4102.2583 -4055.0632 4102.2437 C
f
-4054.4641 4090.5142 m
-4054.4683 4090.4893 -4054.4695 4090.4648 -4054.4792 4090.4404 C
-4054.5271 4090.4712 -4054.5039 4090.4966 -4054.4641 4090.5142 C
f
-4055.0615 4102.1934 m
-4055.0615 4102.21 -4055.0601 4102.2261 -4055.0632 4102.2437 C
-4055.0615 4102.2261 -4055.0576 4102.209 -4055.0615 4102.1934 C
f
-4044.1641 4100.1963 m
-4044.1985 4100.1021 -4044.2527 4100.0127 V
-4044.2737 4100.063 -4044.2527 4100.1221 -4044.1641 4100.1963 C
f
-4046.3152 4099.3911 m
-4046.3152 4099.3911 L
-4046.3289 4099.3711 -4046.3369 4099.3535 -4046.3545 4099.3311 C
-4046.3152 4099.3911 L
f
-4029.8896 4091.0068 m
-4029.9961 4090.999 -4030.0759 4091.0127 -4030.1433 4091.0356 C
-4030.0657 4091.0493 -4029.9817 4091.0479 -4029.8896 4091.0068 C
f
-4055.0752 4102.291 m
-4055.0977 4102.3486 -4055.1296 4102.4077 -4055.1824 4102.4814 c
-4055.1243 4102.4033 -4055.0935 4102.3433 -4055.0752 4102.291 C
f
-4040.8843 4097.4478 m
-4040.9072 4097.4692 -4040.9287 4097.4893 -4040.9504 4097.5078 C
-4040.9373 4097.5181 -4040.9241 4097.5225 -4040.9111 4097.5352 C
-4040.8843 4097.4478 L
f
-4039.7617 4097.8486 m
-4039.8 4097.9102 -4039.8176 4097.9741 -4039.8391 4098.0303 C
-4039.4385 4097.8037 -4038.7024 4098.0493 -4038.6152 4097.4712 C
-4038.7512 4097.4854 -4039.4561 4097.1455 -4039.3359 4096.8062 C
-4039.6152 4096.9512 -4040.0281 4096.5454 -4040.1785 4096.6406 C
-4039.72 4096.957 -4040.1289 4097.1289 -4040.4385 4097.3232 C
-4040.72 4097.1553 -4040.3855 4096.8584 -4040.6279 4096.7515 C
-4041.2793 4096.8145 L
-4040.7119 4096.8916 L
-4040.8843 4097.4478 L
-4040.8633 4097.4292 -4040.8489 4097.417 -4040.8264 4097.3955 C
-4039.8665 4097.1353 -4040.7449 4098.21 -4039.7617 4097.8486 C
f
-4039.8391 4098.0303 m
-4039.8992 4098.0654 -4039.9519 4098.1079 -4039.9929 4098.167 C
-4039.9023 4098.1582 -4039.8672 4098.1016 -4039.8391 4098.0303 C
f
-4035.9172 4098.9478 m
-4035.8679 4098.9292 -4035.8145 4098.9033 -4035.7473 4098.8599 c
-4035.7793 4098.8809 -4035.8535 4098.9077 -4035.9172 4098.9478 C
f
-4064.6584 4098.167 m
-4064.6416 4098.3311 -4064.0823 4098.6685 -4064.0923 4098.2407 C
-4064.0923 4098.2407 L
-4064.2583 4098.1982 -4064.4255 4098.1533 -4064.5935 4098.1064 C
-4064.6584 4098.167 L
f
-4025.2336 4096.4604 m
-4025.2959 4096.4478 -4025.3584 4096.4429 -4025.4209 4096.4502 C
-4025.4343 4096.4712 -4025.4473 4096.4951 -4025.4573 4096.5166 C
-4025.4192 4096.5796 -4025.2959 4096.5015 -4025.2336 4096.4604 C
f
-4039.1631 4096.605 m
-4039.2656 4096.6709 -4039.3113 4096.7383 -4039.3359 4096.8062 C
-4039.2695 4096.7725 -4039.2083 4096.7173 -4039.1631 4096.605 C
f
-4025.1985 4097.4785 m
-4025.1191 4097.6006 -4025.0022 4097.7871 -4024.9856 4097.9502 C
-4024.8232 4097.9541 -4024.7092 4097.7295 -4024.5439 4097.6494 C
-4024.7305 4097.7119 -4024.9463 4097.6685 -4025.1985 4097.4785 C
f
-4024.5305 4097.6416 m
-4024.5352 4097.6455 -4024.5398 4097.6475 -4024.5439 4097.6494 C
-4024.5393 4097.6494 -4024.5352 4097.644 -4024.5305 4097.6416 C
f
*u
1 D
-4064.9912 4097.9854 m
-4065.0393 4098.0181 -4065.0889 4098.0479 -4065.1399 4098.0752 C
-4065.0625 4097.9604 L
-4065.1912 4097.9185 -4065.3191 4097.8774 -4065.4473 4097.8311 C
-4065.4937 4097.8584 -4065.5439 4097.8843 -4065.6057 4097.8984 C
-4065.5808 4097.8843 -4065.5615 4097.8389 -4065.5496 4097.792 C
-4065.5913 4097.7764 -4065.6321 4097.7593 -4065.6729 4097.7422 C
-4065.9792 4098.1851 -4066.7417 4098.5088 -4066.9617 4098.7695 C
-4067.2527 4098.959 -4067.6089 4099.0664 -4067.8323 4099.0313 C
-4067.6252 4099.041 -4067.3503 4098.9517 -4067.4329 4098.707 C
-4067.8533 4098.4517 -4068.0576 4097.7173 -4068.7832 4098.3486 C
-4068.3577 4098.3389 L
-4069.3145 4099.2896 L
-4069.6497 4098.8955 -4068.8369 4098.8145 -4068.7041 4098.4727 C
-4069.4482 4098.9414 -4070.0671 4097.6895 -4070.4121 4098.5127 C
-4070.4607 4098.0244 -4070.5422 4097.21 -4071.0305 4097.2583 C
-4070.6785 4097.8145 -4071.3232 4097.6157 -4071.0344 4098.2119 C
-4071.2031 4098.4912 -4071.5791 4098.0356 -4071.6072 4098.4014 C
-4071.5615 4098.1992 L
-4072.3953 4097.4263 -4072.6682 4098.6377 -4073.0249 4099.0356 C
-4074.0232 4099.2349 -4074.4817 4098.9185 -4075.2959 4099.0015 C
-4075.3279 4098.6743 -4075.5496 4097.7744 -4075.8762 4097.8086 C
-4076.0281 4098.2515 -4076.7649 4098.4561 -4076.8401 4099.0225 C
-4076.2561 4099.2598 -4076.3623 4098.5479 -4076.0127 4098.415 C
-4075.7217 4099.0093 -4075.9863 4099.0024 -4075.5889 4099.3584 C
-4075.9097 4099.1274 -4077.0383 4099.6685 -4077.3896 4099.1104 C
-4077.2656 4099.0313 L
-4077.8264 4098.6934 -4077.9336 4097.291 -4078.8679 4098.1396 C
-4079.3137 4098.4873 L
-4079.2922 4098.4307 -4079.2898 4098.3643 -4079.2783 4098.3135 C
-4080.0081 4098.2544 -4079.8088 4097.6094 -4080.6145 4098.1182 c
-4080.5522 4098.0791 -4080.5913 4098.0166 -4080.5281 4097.9785 C
-4080.9873 4097.6597 -4081.4504 4098.2998 -4081.7976 4098.4336 C
-4082.0095 4097.9604 -4081.7473 4097.9683 -4081.6162 4097.6265 C
-4082.4241 4097.4429 -4083.2959 4098.2544 -4083.7976 4098.8311 C
-4084.3184 4098.5537 L
-4084.0095 4098.3584 -4083.6321 4097.8599 -4083.7263 4097.5742 C
-4084.0127 4097.6685 -4083.9573 4097.8926 -4084.3623 4097.8013 C
-4084.2932 4097.499 -4084.1233 4097.2173 -4083.9329 4096.8369 C
-4084.7705 4096.3311 -4084.1201 4097.9092 -4084.7063 4096.9814 C
-4084.9695 4096.9751 -4085.1223 4097.417 -4085.1511 4097.7822 C
-4085.6279 4097.3037 L
-4085.6809 4097.7695 -4086.2695 4097.7959 -4086.6553 4097.8662 C
-4086.7024 4098.0664 -4086.3447 4098.3623 -4086.1985 4098.1816 C
-4086.2273 4098.5479 -4086.6377 4098.7192 -4086.9016 4098.7124 C
-4086.9983 4097.7373 -4088.6296 4098.8535 -4088.3176 4097.7041 C
-4089.5032 4098.021 -4091.1687 4098.1201 -4091.9512 4098.5269 C
-4092.2092 4098.2573 -4092.7351 4098.2437 -4092.4199 4097.7856 C
-4093.3743 4097.7822 -4093.8665 4098.7832 -4094.8137 4098.5166 C
-4094.8921 4098.394 -4094.3855 4098.5078 -4094.4192 4098.1816 C
-4095.0383 4098.5732 -4095.5457 4097.7695 -4096.5063 4098.0303 C
-4096.3447 4098.0127 -4096.2979 4097.8115 -4096.2754 4097.71 C
-4096.2583 4097.8716 -4096.6689 4098.0454 -4096.917 4098.2017 C
-4097.0566 4098.1182 -4096.7314 4098.0854 -4096.8096 4097.9604 C
-4098.665 4097.4873 -4100.0791 4098.8135 -4101.9248 4098.7695 c
-4101.3975 4098.7822 -4101.1982 4098.1353 -4101.1929 4097.8716 C
-4101.709 4097.8599 L
-4101.9082 4098.1816 -4102.2959 4098.1816 -4102.6201 4098.4229 C
-4102.6602 4098.3013 -4102.8174 4098.1709 -4102.6567 4098.0181 C
-4103.6768 4097.3643 -4104.25 4099.1982 -4105.5 4098.8623 C
-4103.9863 4097.5591 L
-4104.3608 4097.105 L
-4103.6953 4096.5127 L
-4104.0928 4096.1553 -4104.4385 4096.9814 -4104.4863 4096.4912 C
-4104.4023 4096.3535 -4104.2002 4096.3975 -4104.1934 4096.1328 C
-4104.5752 4095.9414 -4104.6055 4096.3062 -4104.8921 4096.4014 C
-4104.1362 4095.4053 -4102.6543 4095.4209 -4101.8564 4095.1768 C
-4101.7314 4095.0977 -4101.9639 4095.417 -4101.9863 4095.5181 C
-4101.6611 4095.4854 -4101.4658 4095.7959 -4101.0557 4095.623 C
-4100.8018 4095.2017 -4101.25 4095.3135 -4101.4521 4095.2695 C
-4101.4238 4094.9033 -4101.3223 4094.9253 -4101.0977 4094.8701 C
-4101.0488 4095.3584 -4099.8633 4095.0435 -4099.5732 4095.6392 C
-4098.3721 4095.4854 -4099.7656 4094.375 -4098.5928 4094.5869 C
-4098.2422 4095.1455 L
-4097.5615 4094.7139 -4096.6807 4094.3311 -4095.9104 4094.4502 C
-4096.0728 4094.4683 L
-4096.1807 4094.707 -4096.002 4094.8545 -4095.9231 4094.9766 C
-4095.3408 4095.2158 -4094.8176 4094.5376 -4094.4648 4095.0967 C
-4093.8008 4094.5024 -4092.6936 4094.063 -4091.9343 4093.7568 C
-4091.7295 4094.4932 -4092.9248 4094.3809 -4093.2407 4094.8413 C
-4092.5496 4094.8389 L
-4092.9768 4094.8486 -4093.1455 4095.1289 -4093.4016 4095.5479 C
-4092.7959 4095.6846 -4092.5967 4095.04 -4092.0225 4094.8535 C
-4092.0671 4095.0537 -4091.9905 4095.1768 -4091.7256 4095.1816 C
-4091.6504 4094.6934 L
-4091.6455 4094.7334 -4091.6162 4094.7705 -4091.5344 4094.8013 C
-4090.5127 4094.5024 L
-4090.7295 4094.2935 -4090.74 4093.8677 -4091.0039 4093.8623 C
-4090.9097 4094.1475 -4091.1335 4094.2041 -4091.3977 4094.1963 C
-4091.1663 4093.8774 -4091.6553 4093.9272 -4091.6497 4093.6631 C
-4091.1201 4093.6763 -4090.4695 4093.6104 -4090.1223 4093.4766 C
-4090.0095 4093.9272 L
-4089.5049 4094.041 -4088.9719 4093.7896 -4088.6296 4093.9209 C
-4088.7375 4094.1597 L
-4088.1321 4094.2979 -4087.5359 4094.0078 -4086.9983 4094.4473 C
-4086.4583 4093.9326 -4085.7783 4093.5039 -4085.3369 4092.9648 C
-4085.1008 4092.3843 -4083.7522 4093.6953 -4083.1433 4092.8774 C
-4083.1023 4092.9395 -4083.5615 4093.3145 -4083.7693 4093.5342 C
-4083.3643 4093.624 -4083.0422 4092.9014 -4082.9153 4093.5132 C
-4083.8242 4093.3076 -4082.8665 4094.0015 -4083.2759 4094.1753 C
-4082.8503 4094.1641 -4082.4016 4094.0537 -4082.1929 4093.8354 C
-4082.8816 4093.8398 -4081.9482 4092.9893 -4082.6455 4093.2559 C
-4082.1052 4092.7412 -4081.3679 4092.5356 -4080.7241 4092.7349 C
-4080.7305 4092.999 -4080.6511 4093.1221 -4080.4111 4093.2314 C
-4080.2175 4092.8486 L
-4079.9163 4092.9185 -4080.8 4093.3013 -4080.1936 4093.4385 C
-4079.5696 4092.7832 -4078.3145 4093.8096 -4078.0413 4092.5977 C
-4077.5657 4093.0767 -4078.9463 4093.083 -4078.2295 4093.6685 C
-4078.6465 4094.1064 -4079.2217 4093.605 -4079.3591 4094.21 C
-4078.9504 4094.0376 -4079.21 4094.7212 -4078.9463 4094.7271 C
-4078.4905 4094.3545 L
-4078.5913 4094.3311 L
-4077.8264 4093.7603 -4076.6145 4094.0342 -4075.6377 4093.9375 C
-4074.8103 4093.3281 -4074.2407 4092.4478 -4073.2483 4092.5142 C
-4073.5413 4092.8716 -4072.4241 4092.8584 -4073.0488 4093.5132 C
-4072.5896 4093.8286 -4072.1362 4093.4551 -4072.1272 4093.1909 C
-4072.5313 4093.1006 -4072.2693 4093.1064 -4072.6096 4092.9766 C
-4072.3799 4092.6563 -4071.8503 4092.6709 -4071.6328 4092.8799 C
-4071.7336 4092.8564 -4071.6953 4092.9185 -4071.7175 4093.0181 C
-4071.2351 4093.2334 -4071.4863 4092.6997 -4071.1377 4092.5664 C
-4071.0271 4093.0142 -4070.3679 4092.6865 -4070.0496 4092.9185 C
-4069.5879 4092.2793 L
-4069.8416 4092.6992 -4069.1455 4092.4326 -4069.0728 4092.8188 C
-4068.7417 4092.5225 -4068.4641 4092.0024 -4067.96 4092.1157 C
-4068.1682 4092.3354 -4067.5 4092.4326 -4067.4912 4092.8584 C
-4066.6279 4093.2661 -4066.0615 4091.6963 -4065.2439 4092.3062 C
-4065.2693 4092.4063 -4065.4343 4092.6865 -4065.1953 4092.7935 C
-4065.0071 4092.6743 -4064.6775 4092.7246 -4064.4761 4092.6782 C
-4064.4824 4092.6904 L
-4064.4785 4092.6865 -4064.4761 4092.6816 -4064.4719 4092.6782 C
-4064.3733 4092.6553 -4064.3113 4092.6021 -4064.3088 4092.499 C
-4063.9641 4092.082 -4063.7864 4091.6553 -4063.1079 4091.3013 C
-4063.1577 4090.8135 -4063.7305 4091.0024 -4063.9785 4091.1597 C
-4064.1929 4091.6416 L
-4064.3977 4090.9053 -4064.8047 4091.7695 -4064.9607 4091.521 C
-4064.5537 4090.6582 -4063.3816 4090.8701 -4062.6785 4090.3398 C
-4063.1072 4089.6597 -4064.0398 4089.5537 -4064.8535 4089.6353 C
-4064.4951 4089.9287 L
-4064.9209 4089.9385 L
-4064.5088 4090.457 L
-4064.9121 4090.3662 -4065.2607 4090.499 -4065.6252 4090.4692 C
-4065.1985 4090.46 -4065.0322 4091.1328 -4065.2737 4091.0264 C
-4065.7493 4090.5479 -4065.7693 4091.3389 -4066.1328 4091.3096 C
-4065.9304 4091.3545 -4065.6672 4091.3623 -4065.8369 4091.6416 C
-4066.5537 4091.0557 -4066.7473 4091.4375 -4067.3992 4090.8115 C
-4067.3184 4091.625 -4068.2136 4090.8926 -4068.3113 4091.5591 C
-4068.0088 4091.6274 L
-4068.6504 4092.1187 L
-4069.2424 4091.4561 -4068.1262 4091.4429 -4069.0271 4090.9741 C
-4069.8584 4090.8926 -4069.8369 4091.7471 -4070.4905 4091.8101 C
-4070.2751 4091.3286 -4069.7568 4090.915 -4069.2295 4090.9287 C
-4069.5488 4090.6963 L
-4069.3799 4090.417 -4068.6504 4090.4756 -4068.2864 4090.5044 C
-4068.8879 4091.0576 -4068.0049 4090.6743 -4067.7312 4091.1064 C
-4067.6809 4090.6406 -4068.0671 4090.7139 -4067.6111 4090.3398 C
-4068.0383 4090.3486 -4068.1008 4090.3877 -4068.6443 4090.2119 C
-4067.4695 4090.4238 -4067.5879 4088.5933 -4066.5625 4088.9854 C
-4067.0352 4089.1963 -4066.3977 4089.6582 -4066.3408 4089.8843 C
-4066.1184 4089.8281 -4065.6672 4089.7173 -4065.4817 4089.6006 C
-4065.6497 4088.9272 L
-4065.0522 4088.6353 -4064.8447 4090.0625 -4064.1553 4089.3677 C
-4064.0657 4088.9648 -4064.7617 4089.2314 -4064.6377 4089.1533 C
-4063.6943 4088.73 -4063.3545 4089.8145 -4062.5168 4090.3223 C
-4062.4695 4090.1201 -4062.4792 4089.6934 -4062.1863 4089.3369 C
-4062.2783 4089.7412 -4062.0615 4089.9478 -4062.3911 4090.2437 C
-4062.1111 4090.415 -4061.7793 4090.1182 -4061.5322 4089.9604 C
-4062.1152 4089.7236 -4061.2937 4089.3799 -4061.1863 4089.1377 C
-4060.8843 4089.2061 -4061.2783 4089.541 -4061.4641 4089.6582 C
-4061.2217 4089.7661 -4060.9336 4090.3623 -4060.7959 4089.7568 C
-4060.7864 4090.1816 -4061.4736 4090.8774 -4061.9231 4090.9873 C
-4061.6201 4091.0557 L
-4061.8289 4091.2734 -4061.8679 4091.2119 -4062.1687 4091.1455 C
-4061.8743 4091.4756 -4061.9033 4091.8398 -4061.9719 4092.1431 C
-4062.0105 4092.0811 -4061.9504 4092.042 -4061.9873 4091.9814 C
-4062.2295 4091.873 -4062.4153 4091.9893 -4062.3591 4092.2158 C
-4062.5769 4092.7876 -4062.0232 4092.5732 -4061.8591 4092.8584 C
-4061.7351 4092.8213 -4061.6111 4092.7822 -4061.4895 4092.7437 C
-4060.2312 4090.9072 L
-4059.6936 4090.6934 -4059.4519 4091.1328 -4059.0481 4091.4102 C
-4058.9373 4090.9185 L
-4058.4695 4090.9692 -4058.0281 4091.125 -4058.3279 4091.7471 C
-4058.3447 4091.583 -4058.4065 4091.6221 -4058.5081 4091.5977 C
-4058.5215 4091.665 -4058.5449 4091.7124 -4058.5745 4091.7515 C
-4058.5842 4091.7803 -4058.5896 4091.8086 -4058.5977 4091.8369 C
-4058.0967 4091.6782 -4057.7839 4091.5752 -4057.7551 4091.5566 C
-4058.6057 4092.2695 -4057.7976 4092.4478 -4057.9399 4093.3188 C
-4057.0808 4093.0352 L
-4057.6016 4092.7593 -4057.0903 4092.6094 -4056.9055 4092.4912 C
-4056.8545 4092.9814 -4056.2136 4092.4873 -4055.9121 4092.5557 C
-4055.9343 4092.6563 L
-4055.6553 4092.8262 -4055.1663 4092.7783 -4054.8184 4092.6455 C
-4054.8342 4092.4814 -4054.3879 4091.6807 -4054.1736 4091.1982 C
-4054.7705 4091.0142 -4054.4163 4090.8184 -4054.4641 4090.5142 C
-4054.4023 4090.542 -4054.2913 4090.5479 -4054.2783 4090.4854 C
-4054.1929 4090.3462 -4054.3943 4090.2998 -4054.4111 4090.1377 C
-4055.0457 4090.3662 -4055.6985 4090.4307 -4055.9573 4091.1143 C
-4055.7625 4091.4238 -4055.6252 4090.8184 -4055.4072 4091.0254 C
-4055.7217 4091.4854 -4056.1272 4091.394 -4056.6543 4091.3809 C
-4056.8271 4090.9712 L
-4057.3577 4091.1934 L
-4057.1362 4090.9766 -4057.2695 4090.5479 -4056.7129 4090.4648 C
-4056.7839 4090.0791 -4057.2649 4090.5537 -4057.6057 4090.4238 C
-4057.78 4090.9683 L
-4057.7129 4090.665 -4058.4424 4090.6064 -4057.9241 4090.1924 C
-4057.0808 4089.7471 L
-4057.3152 4089.375 L
-4056.6023 4089.2705 L
-4056.7705 4089.5518 L
-4055.6252 4089.1753 -4056.4329 4090.6353 -4055.28 4089.9927 C
-4054.9192 4089.333 -4054.5313 4089.2622 -4053.8247 4089.4229 C
-4054.3359 4089.5703 -4053.8772 4089.8877 -4054.0696 4090.2695 C
-4053.5481 4090.5449 -4053.3721 4090.0015 -4053.1016 4089.7437 C
-4052.9688 4090.0923 -4052.8743 4090.3774 -4053.3401 4090.3262 C
-4053.3984 4091.0557 -4052.7273 4090.1997 -4052.6848 4090.9512 C
-4051.1416 4090.9287 -4051.4482 4088.5254 -4049.6443 4089.4639 C
-4049.7119 4089.7661 L
-4048.5664 4089.3896 -4047.9055 4089.7515 -4046.8447 4089.5127 C
-4046.0095 4090.2832 L
-4046.1963 4090.4014 -4046.6985 4090.9771 -4046.4641 4091.3486 C
-4046.8704 4090.5688 -4047.3015 4090.8413 -4047.7393 4090.4238 C
-4047.7839 4090.6265 -4047.6057 4090.7725 -4047.5281 4090.8975 C
-4047.7922 4090.8896 -4047.9248 4090.541 -4048.2737 4090.6763 C
-4048.2568 4090.8369 -4047.8762 4091.0303 -4048.1631 4091.125 C
-4048.6377 4090.6455 L
-4049.2727 4090.874 -4048.9504 4091.7935 -4049.6963 4091.5732 C
-4049.5576 4091.1455 -4049.2744 4090.5264 -4048.9856 4090.4238 C
-4049.3264 4090.3311 -4048.5313 4090.165 -4048.8423 4089.9092 C
-4049.3333 4090.5435 -4049.5703 4090.041 -4050.2231 4090.4385 C
-4050.1465 4090.3496 -4050.1262 4090.2256 -4049.9656 4090.1865 C
-4050.9128 4089.9185 L
-4050.6785 4090.2896 -4051.6953 4090.3262 -4051.6072 4090.8774 C
-4050.5977 4091.105 -4050.8943 4090.7725 -4049.7439 4091.0854 C
-4050.0696 4091.21 -4050.4895 4091.7705 -4050.6863 4092.2856 C
-4050.6963 4092.2646 -4050.7129 4092.2471 -4050.7483 4092.2373 C
-4050.9241 4092.7822 -4050.7449 4092.9287 -4050.7483 4093.8809 C
-4050.2231 4093.2041 -4049.8721 4093.7617 -4049.2527 4093.3716 C
-4049.1362 4092.8496 -4049.6121 4092.7061 -4049.9199 4092.8408 C
-4049.3743 4092.4951 L
-4049.4817 4092.7349 L
-4048.0967 4092.9102 L
-4048.3591 4092.9385 -4048.4482 4093.2407 -4048.5852 4093.4688 C
-4048.4065 4093.4893 -4048.2295 4093.6274 -4048.0413 4093.7783 C
-4048.0808 4093.2803 -4048.0559 4092.9287 -4047.8816 4092.9385 C
-4046.9905 4093.0566 -4046.4951 4093.5039 -4046.1663 4094.0728 C
-4046.1321 4094.0615 -4046.0935 4094.0493 -4046.0625 4094.0376 C
-4046.2119 4093.5269 -4045.4297 4093.1201 -4045.1536 4092.5977 C
-4045.1672 4093.1265 -4044.6943 4092.915 -4044.4375 4093.1846 C
-4044.3008 4092.5791 -4044.4832 4091.7432 -4044.7959 4091.248 C
-4045.3984 4091.8013 -4045.1335 4091.8062 -4045.4182 4092.5923 C
-4046.3848 4093.1157 L
-4046.1687 4092.6328 L
-4046.6511 4092.4199 -4047.1145 4093.0576 -4047.0791 4092.4292 C
-4046.8242 4092.0103 -4046.4033 4092.2646 -4046.1504 4091.8438 C
-4046.4695 4091.6143 L
-4045.9065 4090.9966 -4046.1809 4092.209 -4045.4993 4091.7783 C
-4045.75 4091.2437 -4045.4375 4091.7393 -4045.1455 4091.3809 C
-4045.3799 4091.0093 -4046.3457 4091.5342 -4046.1409 4090.6265 C
-4045.7864 4090.2295 -4044.9482 4091.6904 -4044.4792 4090.7876 C
-4044.5022 4090.8896 L
-4043.8103 4091.0078 -4043.5671 4090.4893 -4043.3081 4090.1631 C
-4043.0137 4090.457 -4042.6072 4090.0435 -4042.2881 4090.0103 C
-4042.2959 4090.2744 L
-4041.8457 4090.1641 L
-4042.0601 4090.6455 -4042.3733 4090.1509 -4042.76 4090.2212 C
-4042.7119 4090.7119 L
-4043.1577 4090.1294 -4043.4551 4091.0142 -4043.8008 4091.4375 C
-4043.2976 4091.0127 -4042.3799 4091.5576 -4042.2617 4090.5977 C
-4041.9504 4091.0942 L
-4041.8015 4090.915 L
-4041.5696 4091.2871 -4041.8064 4091.8701 -4042.2561 4091.9814 C
-4042.3342 4091.8574 -4042.3733 4091.7959 -4042.3496 4091.6934 C
-4042.5583 4091.9126 -4042.75 4092.2935 -4043.2551 4092.1807 C
-4042.9856 4091.9209 L
-4043.6145 4091.8853 -4044.1863 4092.0752 -4044.4016 4092.5576 C
-4043.4937 4092.7622 -4042.6008 4092.8057 -4041.7483 4092.7832 C
-4041.4968 4091.6743 -4041.1985 4091.0518 -4041.0703 4090.021 C
-4040.4983 4089.8311 -4039.7217 4089.6895 -4039.2249 4090.0664 C
-4039.2705 4090.2695 L
-4039.0281 4090.375 -4038.8047 4090.3188 -4038.6184 4090.2017 C
-4038.3623 4090.4727 -4038.7937 4090.7471 -4038.6152 4090.8936 C
-4037.7959 4090.5479 L
-4037.8464 4091.0142 -4038.5359 4091.0166 -4038.8633 4091.0493 C
-4038.8015 4091.0103 -4038.6768 4090.9326 -4038.7168 4090.8701 C
-4039.0977 4090.6782 -4039.8071 4091.4727 -4039.9736 4090.7979 C
-4040.1592 4090.915 -4039.5967 4090.2998 -4040.2249 4090.2646 C
-4040.6455 4090.0103 -4040.7825 4090.6157 -4040.8264 4090.8184 C
-4040.8333 4091.083 -4040.1663 4091.1807 -4040.3977 4091.499 C
-4040.0703 4091.4648 -4039.9399 4091.125 -4039.5212 4091.3799 C
-4039.8457 4091.4121 -4040.2864 4091.9478 -4040.4592 4091.5376 C
-4041.1008 4092.0303 -4041.0088 4093.2705 -4040.7063 4093.3389 C
-4040.7783 4092.9502 -4039.5359 4092.8599 -4040.3772 4092.3535 C
-4039.9993 4091.8535 -4039.3088 4091.8496 -4038.8145 4091.5376 C
-4038.8369 4091.6377 L
-4038.2231 4091.5127 L
-4038.3096 4091.6509 -4038.4951 4091.7695 -4038.5012 4092.0313 C
-4037.6511 4091.3232 L
-4038.1296 4091.7998 -4037.3545 4091.6543 -4037.1367 4091.8643 C
-4037.0457 4091.46 -4036.7136 4091.1641 -4037.0322 4090.9326 C
-4037.3904 4090.6392 -4037.2407 4091.1509 -4037.5664 4091.1816 C
-4037.1052 4090.5449 L
-4037.0657 4090.6064 L
-4036.7881 4090.0854 L
-4036.1599 4090.1221 -4037.0625 4091.2979 -4036.2576 4090.7876 C
-4036.3623 4090.0767 L
-4035.4304 4090.1816 -4034.2336 4090.9814 -4033.5752 4090.6533 C
-4033.7568 4091.0576 -4033.8369 4091.708 -4033.5872 4092.0933 C
-4033.8711 4091.9712 -4034.4417 4091.9966 -4034.8489 4092.063 C
-4034.9272 4091.9385 -4034.3401 4091.2227 -4033.8977 4091.3765 C
-4034.1121 4090.2119 -4035.0105 4092.0791 -4035.0625 4090.8984 C
-4036.1897 4090.4873 -4035.9033 4092.0356 -4036.8601 4091.3433 C
-4036.8733 4091.8701 -4037.1321 4091.6006 -4037.1824 4092.0654 C
-4036.8992 4092.9253 -4035.9033 4092.0356 -4035.2825 4092.3369 C
-4035.3433 4092.375 -4035.4656 4092.4541 -4035.4895 4092.5537 C
-4035.0457 4092.708 -4034.8623 4092.5908 -4034.5522 4092.3955 C
-4034.5913 4092.333 L
-4034.0496 4091.8184 -4034.2561 4092.7261 -4033.9373 4092.958 C
-4033.8137 4092.8799 -4033.3704 4093.0313 -4033.4417 4092.6455 C
-4032.8643 4093.1465 L
-4032.8921 4092.5576 L
-4032.5664 4092.5225 -4032.4951 4092.9121 -4032.2 4092.5537 C
-4032.1863 4092.0269 L
-4032.9951 4091.8438 L
-4032.5852 4091.6719 -4032.8809 4091.3398 -4032.4304 4091.2295 C
-4032.9336 4091.8057 -4032.0745 4091.5215 -4032.0249 4092.0103 C
-4031.6936 4091.7139 L
-4031.7783 4091.8545 L
-4031.5183 4092.125 -4031.4688 4091.6582 -4031.1653 4091.7271 C
-4031.5232 4091.4336 -4031.7576 4091.063 -4032.2136 4091.4375 C
-4031.8816 4091.1416 -4031.2231 4090.8135 -4031.0615 4090.7959 C
-4030.7129 4090.5752 -4030.4695 4090.9766 -4030.1433 4091.0356 C
-4030.7693 4091.2471 -4029.9241 4092.6328 -4031.1785 4092.2544 C
-4031.1553 4092.1533 -4031.0537 4092.1763 -4031.0144 4092.2383 C
-4031.1816 4091.5654 -4031.7664 4092.2803 -4032.0383 4092.5376 C
-4031.9683 4092.9253 -4032.2527 4093.021 -4031.7705 4093.2349 C
-4031.9287 4092.9873 -4031.3643 4092.3716 -4030.9055 4092.6895 C
-4030.9863 4093.5181 L
-4030.3184 4093.6157 L
-4030.3809 4093.6553 L
-4030.1296 4094.1895 -4029.6682 4093.5518 -4029.2083 4093.8662 C
-4028.8762 4093.5703 -4027.6023 4093.8057 -4028.1504 4092.9385 C
-4027.7375 4093.457 -4027.3752 4092.7959 -4026.9248 4092.6846 C
-4027.4863 4092.3462 L
-4026.8225 4091.7524 -4027.0137 4092.1353 -4026.4824 4091.1924 C
-4026.4287 4091.4185 -4026.3103 4091.605 -4026.4182 4091.8438 C
-4025.5264 4091.8877 -4024.2527 4092.1221 -4023.7295 4091.4429 C
-4023.1008 4091.479 -4023.0022 4092.4561 -4022.1201 4092.0728 C
-4021.9343 4091.9561 -4022.2649 4091.2979 -4021.6809 4091.5356 C
-4021.6416 4091.5977 -4022.2432 4092.1504 -4021.5928 4092.0854 C
-4021.1296 4091.4473 -4020.5049 4092.4375 -4019.9023 4091.8843 C
-4019.5842 4092.1143 -4019.0322 4092.0269 -4019.1472 4092.5313 C
-4019.6511 4092.417 -4020.3643 4092.5225 -4020.4729 4092.7646 C
-4020.4033 4092.46 -4020.8313 4092.4692 -4020.46 4092.2349 C
-4021.2217 4091.8535 -4020.9543 4092.5479 -4021.6377 4092.2871 C
-4021.6848 4092.4893 -4021.2864 4092.8457 -4021.1399 4092.665 C
-4021.1367 4093.3545 -4022.4873 4092.998 -4021.8799 4093.8247 C
-4021.1497 4093.8843 -4020.9329 4092.4473 -4020.3 4093.1729 C
-4020.5537 4093.5923 -4020.9504 4093.2373 -4021.2727 4093.9604 C
-4020.7527 4094.2383 L
-4020.3752 4093.7393 L
-4020.3977 4093.8413 L
-4019.4792 4094.4727 -4019.5481 4093.1318 -4018.7263 4092.7856 C
-4019.2024 4092.3076 -4018.6162 4091.5908 -4018.9744 4091.2979 C
-4018.4248 4091.21 -4018.0212 4091.3013 -4018.0176 4091.9912 C
-4019.0457 4092.5537 -4018.0759 4092.7207 -4019.0264 4093.4077 C
-4018.8704 4093.6553 -4019.2527 4094.417 -4018.6863 4094.4932 C
-4018.0481 4094.0015 -4018.8772 4093.9185 -4018.2407 4093.6909 C
-4018.2031 4093.7524 -4018.1641 4093.8145 -4018.1863 4093.916 C
-4017.8936 4093.5576 -4017.8447 4094.0454 -4017.4905 4093.6494 C
-4017.5745 4093.7876 L
-4017.1377 4094.2061 -4017.0967 4093.3135 -4016.7207 4093.7695 C
-4016.8711 4093.2573 -4016.4683 4093.3496 -4016.2351 4093.0303 C
-4016.6162 4092.8369 -4016.8225 4092.1021 -4017.5745 4092.1431 C
-4017.6653 4092.5479 -4017.6104 4092.7725 -4017.9192 4092.9683 C
-4017.4304 4092.9185 L
-4017.5359 4092.9854 -4017.6162 4093.0894 -4017.7129 4093.1709 C
-4018.1824 4092.9604 L
-4017.5872 4092.6719 -4017.8601 4092.2393 -4017.6072 4091.8184 C
-4017.0625 4091.9951 -4017.1577 4091.707 -4016.8152 4091.8389 C
-4016.8496 4092.4326 -4015.7649 4092.8535 -4015.1377 4093.2349 C
-4015.2351 4093.2119 -4015.3608 4093.2271 -4015.4287 4093.2119 C
-4015.8843 4093.5869 -4015.1152 4093.707 -4015.0984 4093.8701 C
-4014.7664 4093.5732 L
-4014.8289 4093.6143 -4014.9153 4093.7524 -4014.7737 4093.8369 C
-4014.3242 4093.7261 -4014.3503 4093.1377 -4013.9016 4093.0264 C
-4013.8679 4093.3535 -4014.2473 4093.8496 -4013.9683 4094.021 C
-4013.8721 4094.3062 -4013.5657 4095.0654 -4012.9695 4094.7764 C
-4012.9272 4094.6509 -4012.7727 4094.5811 -4012.5935 4094.5269 C
-4012.6184 4094.5449 -4012.6497 4094.5576 -4012.6609 4094.5811 C
-4012.2649 4094.9375 L
-4012.6023 4095.4951 -4012.9473 4094.6743 -4013.2864 4095.2344 C
-4013.3152 4095.7646 L
-4013.5791 4095.7661 -4013.9375 4095.9956 -4014.1023 4096.2705 C
-4013.7 4096.3604 -4013.6152 4096.2212 -4013.1653 4096.1108 C
-4013.1023 4096.4463 -4013.4192 4096.6953 -4013.4648 4096.7314 C
-4013.3977 4096.4292 L
-4013.9343 4095.9902 -4014.2 4096.9375 -4014.8679 4096.8389 C
-4014.9688 4096.8174 -4014.9072 4096.7783 -4014.8848 4096.6772 C
-4015.4255 4097.1909 -4015.9561 4096.4873 -4016.4817 4097.165 C
-4016.3103 4096.8853 L
-4016.6682 4097.1108 -4017.3679 4097.6328 -4018.0671 4098.1377 C
-4018.0728 4098.3438 L
-4017.9951 4098.4683 -4018.2576 4098.4604 -4018.3984 4098.3774 C
-4018.3977 4098.374 L
-4018.7483 4098.6265 -4019.0852 4098.8584 -4019.3608 4099.0313 C
-4019.2727 4099.1592 -4019.1599 4099.2661 -4019.0305 4099.2959 C
-4018.9209 4099.0537 -4018.2783 4099.2524 -4018.3665 4098.7017 C
-4018.0696 4099.0342 -4017.5913 4098.5576 -4017.3733 4098.7661 C
-4017.7705 4098.4126 -4017.0967 4098.2471 -4017.0271 4097.9429 C
-4016.8936 4098.291 -4016.4385 4097.917 -4016.4905 4098.3843 C
-4016.4121 4098.5059 -4016.6855 4098.0742 -4016.8545 4098.3545 C
-4017.2705 4098.7896 -4016.0928 4098.7373 -4016.6111 4099.1509 C
-4015.9519 4098.8232 -4015.0833 4098.9648 -4014.4033 4098.5352 C
-4014.7839 4098.3438 L
-4014.4817 4098.4126 -4013.7664 4098.3086 -4013.7129 4098.5342 C
-4013.9375 4098.5889 -4014.2 4098.583 -4014.4873 4098.6768 C
-4014.5012 4099.2041 -4013.7969 4098.6729 -4013.7649 4098.999 C
-4012.9304 4098.1265 L
-4013.2959 4098.0967 L
-4013.0657 4097.7764 -4012.3015 4098.1631 -4011.7351 4098.2373 C
-4012.0601 4098.959 -4012.5896 4098.2559 -4013.1855 4098.5454 C
-4013.6184 4098.8188 -4012.9182 4099.2422 -4013.3279 4099.415 C
-4013.2217 4099.583 -4012.9543 4099.563 -4012.8225 4099.3809 C
-4012.6609 4099.5127 L
-4013.0264 4100.1685 -4013.8457 4100.0225 -4014.3911 4100.5869 C
-4014.3433 4100.5166 -4014.3015 4100.4424 -4014.2864 4100.3662 C
-4014.7063 4100.1118 -4015.1328 4100.1221 -4015.5422 4100.2959 C
-4015.3257 4100.5024 -4015.24 4100.3623 -4015.1162 4100.2856 C
-4015.1008 4100.4478 -4015.4873 4100.5181 -4015.6335 4100.6982 C
-4015.2527 4100.8896 -4015.5625 4101.0854 -4015.3215 4101.1934 C
-4015.5696 4101.3496 -4015.7705 4101.3037 -4016.0728 4101.2349 C
-4016.2295 4100.9873 -4015.9431 4100.8936 -4015.9751 4100.5688 C
-4016.2864 4100.7646 -4016.4287 4099.9873 -4016.8843 4100.3623 C
-4016.2783 4100.499 -4017.0439 4101.0688 -4017.2527 4101.2876 C
-4017.1511 4101.3101 L
-4017.3433 4101.6909 -4017.5063 4101.707 -4017.6392 4101.3584 C
-4017.3911 4101.2017 -4017.1511 4101.3101 -4017.2217 4100.9229 C
-4017.3855 4100.9395 -4017.5488 4100.9561 -4017.7344 4101.0728 C
-4017.5657 4100.7935 L
-4018.3799 4100.874 L
-4018.5088 4101.2158 -4018.7241 4101.6982 -4018.8369 4102.2017 C
-4019.0322 4101.8926 -4019.3042 4102.1504 -4019.4895 4102.2695 C
-4019.4033 4102.1274 L
-4019.7625 4101.8354 -4020.5615 4102.0791 -4020.6289 4102.3809 C
-4020.8855 4102.1118 -4018.8152 4100.457 -4020.6289 4100.7373 C
-4021.3184 4100.7393 -4021.0583 4101.7017 -4021.4519 4102.0356 C
-4021.4297 4101.9375 -4021.4688 4101.874 V
-4021.7705 4101.8037 -4021.8008 4102.1709 -4022.0488 4102.3262 C
-4021.8679 4102.4727 -4021.6057 4102.479 -4021.5212 4102.3398 C
-4021.6121 4102.7432 -4022.1497 4102.3037 -4022.3809 4102.6221 C
-4022.0808 4102 -4022.9641 4102.3848 -4022.7312 4102.0654 C
-4023.3313 4101.665 -4023.9729 4102.1572 -4024.2881 4102.6157 C
-4024.6953 4101.8354 -4025.0022 4102.7192 -4025.6631 4102.3584 C
-4025.5615 4102.3809 -4025.3772 4102.2646 -4025.2351 4102.3486 C
-4024.8584 4101.8535 -4025.9199 4102.0889 -4025.3401 4101.6353 C
-4025.4641 4101.7139 -4025.3489 4101.8984 -4025.2217 4101.8213 C
-4024.9993 4101.7656 -4024.7898 4101.5479 -4024.8457 4101.3223 C
-4025.3843 4100.8843 L
-4025.1963 4100.7646 L
-4026.0137 4100.1582 L
-4026.0359 4100.2573 -4025.9592 4100.3809 -4025.9199 4100.4429 C
-4026.8679 4100.1768 -4027.9519 4100.5142 -4028.7825 4100.4336 C
-4028.9385 4101.8311 -4030.8271 4101.0313 -4031.4983 4101.8896 C
-4031.3184 4101.4893 -4031.22 4100.7822 -4031.3313 4100.4912 C
-4031.1816 4100.4326 -4030.8752 4099.8677 -4030.5359 4099.9854 C
-4030.4817 4100.21 -4030.0625 4100.4639 -4030.3323 4100.7207 C
-4029.3943 4100.5615 -4030.4592 4100.1079 -4030.1824 4099.5879 C
-4031.2217 4099.7236 -4031.8313 4100.542 -4032.4873 4100.8711 C
-4032.5039 4100.7061 L
-4032.9993 4101.0181 L
-4032.5945 4101.1108 -4032.6145 4101.9033 -4033.1362 4101.6265 C
-4033.0728 4101.5869 L
-4033.3704 4101.2544 -4033.9895 4101.6455 -4034.4543 4101.5942 C
-4034.7695 4102.0518 L
-4035.2351 4102 -4035.2551 4101.1475 -4035.4065 4100.6367 C
-4036.1362 4100.5767 -4036.5576 4101.2759 -4037.0759 4101.6909 C
-4037.3103 4101.3188 -4038.4033 4101.2314 -4037.8242 4100.7803 C
-4038.4824 4101.1079 -4038.3496 4103.1006 -4039.4785 4101.9966 C
-4039.1855 4101.6377 L
-4040.2649 4101.7124 -4041.8042 4102.4263 -4042.3015 4102.0488 C
-4041.9033 4100.7598 -4043.6497 4100.7373 -4043.8416 4099.4736 c
-4043.7881 4099.7622 -4044.1936 4099.8584 -4044.2527 4100.0127 C
-4044.3416 4099.8643 -4044.4895 4099.7207 -4044.6465 4099.9814 C
-4044.2256 4100.2349 -4044.9424 4101.2935 -4044.1377 4100.7832 C
-4044.5449 4101.6494 -4045.0696 4102.3262 -4045.9617 4102.2832 C
-4045.9482 4101.7559 L
-4045.2424 4101.916 L
-4045.3137 4101.5269 -4044.9504 4101.5566 -4044.8015 4101.3774 C
-4046.1145 4101.0811 -4044.6296 4100.1431 -4045.9719 4100.2119 C
-4046.1016 4100.5537 -4046.0176 4100.4126 -4046.3665 4100.5479 C
-4046.2024 4100.5303 -4046.1729 4100.167 -4046.4373 4100.1597 C
-4046.6912 4100.5811 L
-4047.1599 4099.7017 -4045.9153 4100.0088 -4046.3152 4099.3911 C
-4045.7969 4098.9771 -4044.8992 4098.7559 -4045.0664 4098.083 C
-4045.9128 4097.8389 -4045.8279 4099.3433 -4046.7129 4099.0376 C
-4046.8071 4098.7515 L
-4047.1184 4098.9463 -4047.1687 4099.4102 -4047.3391 4099.6904 C
-4047.3545 4099.5269 -4047.4336 4099.4053 -4047.6335 4099.3584 C
-4048.1592 4100.0356 -4048.5081 4100.1685 -4048.9929 4100.9077 C
-4047.7024 4100.3535 -4047.8896 4101.4229 -4046.5576 4100.9287 C
-4046.7664 4101.1475 -4047.7041 4101.3076 -4047.7617 4102.0356 C
-4047.7493 4101.5078 L
-4048.1824 4101.7822 -4048.6152 4102.0537 -4049.1592 4101.8799 C
-4048.8271 4101.583 L
-4049.5481 4101.9502 -4050.0256 4100.7822 -4050.5945 4101.6597 C
-4050.3936 4101.707 -4050.2305 4101.6909 -4050.1064 4101.6108 c
-4050.4775 4101.8462 -4050.9431 4101.7935 -4051.3464 4101.7041 C
-4052.1809 4102.5752 L
-4052.1736 4102.3135 -4052.7024 4102.2979 -4052.4473 4101.8799 C
-4053.0481 4101.4785 -4053.3313 4102.2646 -4053.6785 4102.3955 C
-4054.2937 4101.8354 -4053.1455 4102.1455 -4053.0852 4101.417 C
-4053.9329 4101.1729 -4054.8313 4101.3936 -4055.3096 4101.8677 C
-4055.1367 4101.9741 -4055.0527 4102.0654 -4055.0615 4102.1934 C
-4055.0872 4102.0269 -4055.4287 4102.0703 -4055.6191 4102.0654 C
-4055.75 4102.4077 L
-4056.0671 4102.1763 -4056.0225 4101.9741 -4055.7527 4101.7158 C
-4056.0559 4101.6494 -4056.4172 4102.3086 -4056.7295 4101.8145 C
-4056.2119 4101.4014 -4055.5522 4101.7617 -4055.2825 4101.5044 C
-4056.3643 4101.8423 -4056.3711 4100.4604 -4057.7424 4100.8955 C
-4057.7593 4100.7314 -4057.5271 4100.4126 -4057.7913 4100.4077 C
-4058.4033 4100.5342 -4057.9512 4101.1143 -4058.1423 4101.4951 C
-4057.6711 4101.2822 -4057.4519 4101.4912 -4057.1785 4101.9238 C
-4057.3042 4102.2017 L
-4057.3232 4102.0576 -4057.6191 4102.0493 -4057.7063 4101.9102 C
-4057.7825 4102.4771 L
-4057.7473 4101.8496 -4058.2207 4101.3716 -4058.5928 4101.6064 C
-4058.2168 4102.0615 -4058.3184 4102.0376 -4058.2161 4102.7524 C
-4058.7393 4103.4292 -4058.8064 4102.0869 -4059.3928 4102.8037 C
-4059.3489 4102.6021 -4058.8369 4102.4517 -4059.2793 4102.2979 C
-4059.6455 4102.2705 -4059.5967 4102.7593 -4059.8423 4102.915 C
-4059.5657 4102.3926 -4059.6367 4102.0044 -4059.3369 4101.3843 C
-4058.6863 4101.3184 -4059.0745 4101.3911 -4058.4385 4101.1631 C
-4058.9768 4100.7212 L
-4058.4255 4100.6353 -4058.5759 4100.123 -4058.5305 4099.9229 C
-4059.4719 4099.3911 -4059.24 4100.7168 -4059.8457 4100.5796 C
-4060.1377 4100.9385 -4059.2783 4100.6553 -4059.7351 4101.0303 C
-4060.3015 4100.9541 -4059.8643 4101.3716 -4060.5 4101.5977 C
-4060.3936 4101.3584 L
-4060.5879 4101.0479 -4060.78 4101.4307 -4061.0049 4101.4829 C
-4061.2522 4101.6416 -4060.7249 4103.2998 -4061.7417 4103.3354 C
-4061.6919 4103.1895 -4061.6736 4103.0967 -4061.6736 4103.0356 C
-4060.6816 4098.6455 L
-4061.7119 4098.6563 -4062.8992 4098.5342 -4064.0923 4098.2393 C
-4064.3733 4097.3809 -4063.2407 4097.5313 -4063.3137 4097.1455 C
-4062.7695 4097.3213 L
-4062.8 4097.6851 -4063.9097 4097.4336 -4063.4182 4098.0767 C
-4062.4573 4097.8145 -4062.0212 4098.2334 -4061.1096 4097.4829 C
-4061.3928 4096.623 -4062.3103 4097.6353 -4062.9033 4096.9712 C
-4062.6543 4097.0269 -4062.4441 4096.9326 -4062.24 4096.8096 C
-4062.7969 4096.6997 -4063.3928 4096.5811 -4064.0264 4096.4478 C
-4064.1687 4096.6563 L
-4063.7417 4096.7524 -4063.4463 4096.8262 -4063.4082 4096.8574 C
-4063.9744 4096.7822 -4064.4519 4097.2583 -4064.4895 4097.8877 C
-4064.3889 4097.9102 L
-4064.5935 4098.1064 L
-4064.7263 4098.0664 -4064.8591 4098.0269 -4064.9912 4097.9854 C
f
-4101.6934 4097.8369 m
-4101.6592 4097.7764 -4101.6318 4097.7061 -4101.6123 4097.6182 c
-4101.6328 4097.71 -4101.6094 4097.7695 -4101.6934 4097.8369 C
f
0 D
-4053.9033 4095.875 m
-4054.6584 4095.7832 -4055.4199 4095.6118 -4056.1455 4095.5356 C
-4054.8359 4096.7793 -4053.9153 4097.7207 -4056.1008 4097.6963 C
-4056.2439 4097.7856 L
-4055.9583 4097.9385 -4055.4656 4097.957 -4055.0022 4097.8672 C
-4054.6272 4097.4263 -4053.4172 4095.8062 -4053.4304 4095.6631 C
-4053.5632 4095.3145 -4053.7568 4095.6953 -4053.9983 4095.5889 C
-4053.9033 4095.875 L
f
-4053.3665 4097.958 m
-4052.9385 4098.0967 -4053.0359 4097.8213 -4052.9695 4097.5732 C
-4053.1201 4097.605 -4053.2705 4097.6377 -4053.4192 4097.667 C
-4053.3623 4097.7295 -4053.3342 4097.8174 -4053.3665 4097.958 C
f
1 D
-4052.9951 4097.3252 m
-4053.0432 4097.3188 -4053.0842 4097.3076 -4053.1057 4097.2744 C
-4052.9951 4097.3252 L
f
0 D
-4061.3191 4097.0103 m
-4061.3 4097.0044 -4061.2932 4096.999 -4061.2751 4096.9951 C
-4061.3762 4096.9751 -4061.4775 4096.957 -4061.5833 4096.9375 C
-4061.5422 4096.9771 -4061.4641 4097.0078 -4061.3191 4097.0103 C
f
-4060.4504 4097.6182 m
-4060.3489 4097.1641 L
-4060.4431 4097.1475 -4060.5393 4097.1294 -4060.6377 4097.1118 C
-4060.6052 4097.3174 -4060.5713 4097.4966 -4060.4504 4097.6182 C
f
-4057.6584 4099.1118 m
-4057.4824 4098.5664 -4056.8928 4098.542 -4056.8567 4097.9126 C
-4056.8191 4097.7515 -4056.9431 4097.6895 -4057.0823 4097.6377 C
-4057.2375 4097.623 -4057.4033 4097.6055 -4057.5791 4097.5854 C
-4057.5852 4097.6768 -4057.6201 4097.7622 -4057.6785 4097.8438 C
-4057.5049 4097.9229 -4057.3889 4098.0791 -4057.4592 4098.4648 C
-4057.9055 4097.623 -4057.8591 4099.0654 -4058.3416 4098.8496 C
-4058.4951 4099.2935 -4057.8047 4099.2896 -4057.6584 4099.1118 C
f
1 D
-4020.5752 4097.4727 m
-4020.5615 4097.5269 -4020.5144 4097.6685 -4020.4482 4097.8438 C
-4020.7881 4098.1553 L
-4021.3943 4098.0181 -4021.8799 4097.1143 -4022.4255 4097.8916 C
-4022.6809 4097.6963 -4022.8176 4097.2832 -4022.9482 4096.9429 C
-4022.8232 4096.9683 -4022.7063 4097.0015 -4022.6089 4097.0537 C
-4021.0791 4095.915 -4021.8113 4098.2544 -4020.5752 4097.4727 C
f
0 D
-4027.5449 4096.3643 m
-4027.4824 4096.3252 -4027.46 4096.2227 Y
-4028.8145 4097.3774 -4029.9297 4097.7119 -4030.6599 4097.667 C
-4030.5183 4098.125 -4029.8633 4098.479 -4029.5522 4098.6685 C
-4029.8279 4099.1904 L
-4030 4098.7803 L
-4030.4785 4099.2544 L
-4030.3447 4099.605 -4029.9583 4099.5313 -4029.7 4099.8013 C
-4029.6775 4099.7017 -4028.8503 4099.0933 -4028.6191 4098.7725 C
-4029.28 4098.4121 L
-4029.1016 4098.5576 -4028.2249 4098.4375 -4027.8772 4098.3037 C
-4027.8704 4098.042 -4028.4695 4097.6392 -4028.5449 4098.207 C
-4028.6162 4097.8188 -4027.9255 4097.8145 -4028.3623 4097.3984 C
-4027.8447 4096.9854 -4027.0212 4097.3311 -4026.6392 4097.5225 C
-4026.5745 4098.1753 L
-4026.1553 4098.4287 -4026.2913 4097.3896 -4025.7932 4097.7661 C
-4026.4055 4097.8936 -4025.6897 4098.4814 -4026.1768 4098.5303 C
-4026.0212 4098.7764 -4026.1736 4099.2192 -4025.6855 4099.1709 C
-4025.2793 4098.3076 -4025.1711 4099.7119 -4024.7871 4098.9502 C
-4024.5305 4099.2192 -4025.0632 4099.4692 -4024.5583 4099.5854 C
-4023.9792 4099.1318 -4024.0127 4098.8062 -4023.9768 4098.1782 C
-4024.5183 4098.0024 -4024.5852 4098.9951 -4025.0281 4098.8423 C
-4024.1472 4097.7661 L
-4024.3096 4097.6143 -4024.4297 4097.5977 -4024.5305 4097.6416 C
-4024.3535 4097.5791 -4024.2031 4097.4199 -4024.0745 4097.1997 c
-4024.0012 4097.0767 -4023.9336 4096.9712 -4023.8711 4096.8809 C
-4024.3704 4096.875 -4024.8137 4096.8599 -4024.8921 4096.5923 C
-4024.8232 4096.2876 L
-4025 4096.0078 -4025.2881 4096.2271 -4025.4209 4096.4502 C
-4025.8679 4096.4829 -4026.3145 4096.9077 -4026.4121 4096.5132 C
-4026.2424 4096.2344 L
-4026.7922 4096.3223 -4026.8535 4096.3604 -4027.5449 4096.3643 C
f
-4045.5625 4095.6709 m
-4045.2295 4096.7876 -4044.8623 4097.7744 -4043.3081 4097.5791 C
-4043.4304 4097.6563 L
-4042.6472 4098.3574 -4041.9033 4096.7295 -4040.9504 4097.5078 C
-4041.4128 4097.9287 -4041.3879 4097.8896 -4041.8984 4098.8535 C
-4041.4023 4098.5376 L
-4041.5398 4099.1455 -4041.0449 4098.8311 -4040.6809 4098.8599 C
-4041.0022 4099.583 L
-4041.2207 4099.375 -4041.7871 4099.2998 -4041.7705 4099.4648 C
-4041.6465 4099.3848 -4042.5183 4098.5518 -4042.9919 4098.7622 C
-4042.9431 4099.2524 -4041.9431 4099.0537 -4042.3896 4099.8545 C
-4041.9961 4099.5181 -4041.9473 4100.0068 -4041.5359 4099.8354 C
-4041.9304 4100.1709 -4041.6335 4100.5024 -4041.9272 4100.8599 C
-4041.2527 4100.6934 L
-4041.2351 4100.8564 -4042.2351 4101.0557 -4041.6824 4101.6582 C
-4041.4121 4101.4014 -4040.6904 4101.7236 -4040.6775 4101.1963 C
-4040.6609 4101.3584 L
-4040.1553 4101.4727 -4040.4385 4100.6118 -4039.8176 4100.9126 C
-4039.8103 4100.6475 -4039.9287 4100.4639 -4040.1511 4100.5181 C
-4040.3391 4100.6353 -4040.3679 4100.999 -4040.7551 4101.0728 C
-4040.9287 4100.6597 -4040.2881 4101.124 -4040.5569 4100.4263 c
-4040.6904 4100.0791 -4041.5791 4100.7261 -4041.2959 4099.9424 C
-4040.7913 4100.0557 L
-4040.7783 4099.5269 -4040.4128 4099.5576 -4040.4231 4099.1318 C
-4040.1145 4098.9375 -4039.8232 4099.5313 -4039.5081 4099.0728 C
-4039.3772 4098.7314 -4039.6057 4098.0967 -4039.0842 4098.373 C
-4038.6768 4099.1543 -4037.4761 4099.0024 -4037.0264 4098.8896 C
-4036.6328 4098.5537 L
-4036.6663 4098.2295 -4037.3848 4098.5977 -4037.1321 4098.1768 C
-4036.5183 4098.0493 L
-4036.5657 4098.2524 L
-4036.3623 4098.2979 -4036.1543 4098.0796 -4035.9688 4097.9639 C
-4036.1599 4098.3438 -4036.6023 4098.1909 -4036.5144 4098.7412 C
-4036.2263 4098.8496 -4036.1824 4099.0537 -4035.9172 4098.9478 C
-4035.9751 4098.9873 -4036.0249 4099.041 -4036.0176 4099.1182 C
-4035.4343 4099.3564 -4035.4543 4098.5024 -4035.3081 4098.3232 c
-4034.7217 4097.6084 -4035.8992 4097.6597 -4035.8242 4097.0933 C
-4034.1121 4096.791 L
-4034.2583 4096.9692 -4034.4055 4097.1475 -4034.3503 4097.373 C
-4033.9304 4097.6274 -4034.3408 4097.7998 -4033.7512 4097.7734 C
-4033.7932 4097.0215 -4033.0088 4097.3047 -4032.5923 4096.8701 C
-4032.3977 4097.1782 -4032.3577 4097.2393 -4032.7832 4097.249 C
-4032.7344 4097.7373 -4032.1631 4097.5493 -4031.96 4097.5942 C
-4031.8423 4097.4727 -4031.6416 4097.4019 -4031.5144 4097.2935 C
-4031.6848 4097.0493 -4031.6121 4096.7437 -4031.2432 4096.5356 C
-4031.2217 4096.4336 L
-4031.8264 4096.2998 -4032.7664 4095.7661 -4033.1455 4096.2661 C
-4033.0383 4096.0244 L
-4033.7383 4095.6021 -4034.5615 4096.9014 -4034.8843 4095.979 C
-4034.8545 4095.6143 -4035.0249 4095.8955 -4035.0127 4095.3677 C
-4035.5281 4095.7803 L
-4035.4209 4095.541 L
-4036.2976 4095.6597 L
-4036.2744 4095.5615 L
-4036.6912 4096.0391 -4037.0176 4096.4287 -4037.2783 4096.7471 C
-4037.2793 4096.9771 -4037.2522 4097.0479 -4037.3911 4097.2173 C
-4037.5305 4097.3311 -4037.6362 4097.3486 -4037.7305 4097.3184 C
-4037.7312 4097.3188 -4037.7312 4097.3188 -4037.7312 4097.3213 C
-4037.7312 4097.3188 -4037.7312 4097.3188 -4037.7312 4097.3184 C
-4037.9463 4097.2515 -4038.0896 4096.9209 -4038.3545 4096.7856 C
-4037.5393 4096.7295 L
-4037.4729 4096.3389 -4037.5422 4095.9336 -4037.9417 4095.6597 C
-4037.7783 4095.6455 -4037.71 4095.3408 -4037.9121 4095.2959 C
-4037.9343 4095.3975 -4038.4463 4095.5454 -4038.2512 4095.8564 C
-4039.0256 4095.999 -4040.2793 4094.9736 -4041.4551 4095.7158 C
-4040.6104 4095.2695 -4042.1321 4095.1924 -4041.1943 4095.0313 C
-4041.8489 4094.4072 -4041.7576 4095.6475 -4042.4248 4095.5493 C
-4042.4817 4095.3252 -4042.0615 4095.5791 -4041.9082 4095.1353 C
-4043.0176 4094.8853 -4043.78 4096.1455 -4044.8533 4095.9561 C
-4044.8992 4095.4688 L
-4045.1023 4095.5313 -4045.3279 4095.6006 -4045.5625 4095.6709 C
f
-4047.6855 4096.2783 m
-4047.8921 4096.333 -4048.1016 4096.3896 -4048.3145 4096.4463 C
-4048.2937 4096.4541 -4048.2744 4096.4541 -4048.2527 4096.4604 C
-4048.8733 4096.8535 L
-4048.4919 4097.0435 -4048.2407 4097.5791 -4048.7744 4097.8286 C
-4048.7295 4097.6274 -4048.8855 4097.3799 -4048.7 4097.2622 C
-4049.0576 4096.9692 -4049.8423 4096.6865 -4049.6377 4097.4229 C
-4048.9504 4096.7271 -4049.4775 4098.3604 -4048.9375 4097.8438 C
-4049.2273 4098.3232 -4049.5144 4098.1079 -4049.7881 4098.3223 C
-4049.5032 4097.9209 -4049.8545 4097.4126 -4050.2825 4097.2212 C
-4050.4688 4097.3398 -4050.9729 4097.2261 -4051.2825 4097.4209 C
-4051.1721 4097.8711 -4051.4417 4098.1289 -4050.9373 4098.2422 C
-4051.1223 4098.3604 -4051.4087 4098.4541 -4051.7295 4098.2227 C
-4051.6023 4098.1455 -4051.3799 4098.0894 -4051.3953 4097.9272 C
-4051.6023 4097.5127 -4051.8447 4097.5313 -4051.9785 4097.3545 C
-4052.0852 4097.3799 -4052.1929 4097.4019 -4052.2976 4097.4263 C
-4052.2664 4097.4648 -4052.2393 4097.5166 -4052.22 4097.5811 C
-4052.5745 4097.9785 L
-4052.1023 4097.7661 -4052.3562 4098.1865 -4052.3623 4098.4502 c
-4052.3496 4097.9229 -4052.6663 4098.3809 -4052.8279 4098.3984 C
-4052.4768 4098.9561 L
-4052.6465 4099.2349 -4053.0759 4098.5537 -4052.9873 4099.105 C
-4052.2424 4099.3262 -4051.9561 4099.2314 -4051.2825 4099.0654 C
-4051.5559 4098.6328 L
-4050.7959 4098.3267 -4051.0872 4099.375 -4050.2344 4099.3545 C
-4049.8799 4098.959 -4048.9519 4099.3267 -4048.9343 4098.5352 C
-4049.0413 4098.7764 -4048.4033 4099.2393 -4048.1111 4098.8809 C
-4047.7881 4098.1572 -4046.8113 4098.0596 -4047.1072 4097.7295 C
-4047.3711 4097.7207 -4047.7263 4098.1182 -4047.9385 4097.6475 C
-4047.4265 4097.4966 L
-4047.7625 4097.1021 L
-4047.5889 4097.2437 -4047.6057 4096.8584 -4047.6855 4096.2783 C
f
1 D
-4059.1455 4091.8389 m
-4059.1511 4091.8354 -4059.1584 4091.833 -4059.1653 4091.8286 C
-4059.1577 4091.8311 -4059.1504 4091.8311 -4059.1433 4091.8311 C
-4059.1455 4091.8389 L
f
*U
0 D
-4012.9968 4095.8311 m
-4012.8496 4095.6509 -4012.4856 4095.6807 -4012.5569 4095.2935 C
-4012.5481 4095.7192 -4013.2073 4095.3584 -4012.9968 4095.8311 C
f
-4012.5615 4096.248 m
-4012.5359 4096.1465 -4012.5537 4095.9829 -4012.3904 4095.9683 C
-4012.8401 4096.0767 L
-4012.5615 4096.248 L
f
-4012.1052 4099.1597 m
-4011.8733 4098.8423 -4011.7263 4098.6631 -4011.3623 4098.6919 C
-4011.2256 4099.7314 -4011.9583 4098.9824 -4012.1233 4099.9517 C
-4011.4561 4100.0493 -4011.2512 4099.1416 -4010.7024 4099.0537 C
-4010.9744 4098.6201 -4012.0852 4098.3701 -4012.1052 4099.1597 C
f
-4012.4016 4100.4736 m
-4012.0305 4100.2393 L
-4012.0671 4100.1782 L
-4012.4385 4100.4126 L
-4012.4016 4100.4736 L
f
-4020.4385 4091.4429 m
-4020.4719 4091.1182 -4020.7031 4091.4385 -4020.8271 4091.5166 C
-4020.7263 4091.5376 -4020.5852 4091.623 -4020.4385 4091.4429 C
f
-4093.3503 4091.105 m
-4096.1807 4091.4185 L
-4095.3665 4091.3369 -4094.6145 4091.2959 -4093.3503 4091.105 C
f
-4029.8313 4093.5664 m
-4029.0713 4093.2603 -4028.7336 4092.6997 -4027.9592 4092.5576 C
-4028.9775 4091.9033 -4029.3042 4093.5796 -4030.1592 4092.9092 C
-4029.8313 4093.5664 L
f
-4029.5632 4090.9751 m
-4029.4373 4091.5869 -4030.1497 4091.6919 -4030.0393 4092.1406 C
-4029.5271 4091.9912 -4029.8008 4091.5576 -4029.3359 4091.6104 C
-4029.5632 4090.9751 L
f
-4026.1191 4101.0889 m
-4026.3496 4101.4072 L
-4026.1641 4101.291 L
-4026.1191 4101.0889 L
f
-4033.0271 4091.5181 m
-4032.9431 4091.3799 L
-4033.3242 4091.1865 L
-4033.0271 4091.5181 L
f
-4032.8591 4091.2393 m
-4032.9431 4091.3799 L
-4032.9431 4091.3799 L
-4032.8591 4091.2393 L
f
-4026.4153 4102.4014 m
-4026.0728 4102.5313 L
-4025.9033 4102.2515 L
-4026.4153 4102.4014 L
f
-4029.4385 4099.1187 m
-4029.1321 4098.9229 L
-4029.1929 4098.9604 -4029.6121 4098.709 -4029.4385 4099.1187 C
f
-4035.3545 4091.2583 m
-4035.7273 4091.4932 L
-4035.6892 4091.5537 L
-4035.3176 4091.3188 L
-4035.3545 4091.2583 L
f
-4031.8369 4100.8057 m
-4031.6252 4101.2759 -4032.4482 4100.9326 -4032.0127 4101.3486 C
-4031.6252 4101.2759 -4031.7825 4101.0303 -4031.8369 4100.8057 C
f
-4036.3352 4097.6157 m
-4036.3855 4097.6157 -4036.4385 4097.6328 -4036.4895 4097.6851 C
-4036.4287 4097.665 -4036.3777 4097.6406 -4036.3352 4097.6157 C
f
-4036.3352 4097.6157 m
-4036.1729 4097.6157 -4036.0105 4097.7959 -4035.8992 4097.6597 C
-4036.1016 4097.4473 -4036.1753 4097.5269 -4036.3352 4097.6157 C
f
-4038.1953 4097.7256 m
-4038.0481 4097.7593 L
-4038.1985 4097.9912 -4038.1272 4097.957 -4037.9929 4097.7705 C
-4037.8369 4097.7544 -4037.8457 4097.6055 -4037.8271 4097.5039 C
-4037.7959 4097.4473 -4037.7649 4097.3853 -4037.7312 4097.3213 C
-4037.7793 4097.3809 -4037.8225 4097.4404 -4037.8591 4097.4912 C
-4038.1008 4097.4873 -4038.2483 4097.5103 -4038.1953 4097.7256 C
f
-4045.1052 4089.7998 m
-4044.5615 4089.9751 -4044.4209 4090.0596 -4044.4504 4090.4248 C
-4043.9343 4090.541 -4044.0144 4089.9126 -4043.7031 4089.7661 C
-4044.2871 4089.8369 -4044.4065 4089.6685 -4045.1052 4089.7998 C
f
-4043.7031 4089.7661 m
-4043.6377 4089.7593 -4043.5752 4089.7515 -4043.4993 4089.7373 C
-4043.5842 4089.7261 -4043.6472 4089.7412 -4043.7031 4089.7661 C
f
-4036.0212 4101.7173 m
-4036.3591 4102.2759 L
-4036.2351 4102.1982 L
-4036.0212 4101.7173 L
f
-4045.9121 4089.6157 m
-4045.8113 4089.6392 -4045.6497 4089.623 -4045.5703 4089.748 C
-4045.5413 4089.3809 -4046.0127 4089.5933 -4045.9121 4089.6157 c
f
-4043.8152 4096.7744 m
-4043.76 4096.998 -4043.4121 4096.8643 -4043.2705 4096.9502 C
-4043.4736 4096.9033 -4043.6392 4096.23 -4043.8152 4096.7744 C
f
-4047.4719 4091.1221 m
-4047.3711 4091.1455 -4047.2161 4091.3911 -4047.2832 4091.6934 C
-4047.1367 4091.5142 -4046.9385 4090.8701 -4047.4719 4091.1221 C
f
-4044.8088 4096.709 m
-4044.7312 4096.833 L
-4044.3591 4096.5977 L
-4044.8088 4096.709 L
f
-4043.4817 4102.1006 m
-4043.0632 4101.665 -4044.1455 4101.0493 -4043.4248 4100.6807 C
-4044.3545 4100.2246 -4043.3535 4101.2979 -4044.0393 4101.2271 C
-4043.6377 4101.374 -4043.4409 4101.9253 -4043.4817 4102.1006 C
f
-4044.0393 4101.2271 m
-4044.0977 4101.2041 -4044.1609 4101.1909 -4044.2295 4101.1895 C
-4044.1536 4101.21 -4044.0923 4101.2212 -4044.0393 4101.2271 C
f
-4049.9287 4098.4692 m
-4049.8679 4098.4238 -4049.8264 4098.374 -4049.7881 4098.3223 C
-4049.8359 4098.3584 -4049.8816 4098.4033 -4049.9287 4098.4692 C
f
-4046.2295 4101.5869 m
-4045.6023 4100.9326 L
-4046.0212 4101.3677 -4047.0752 4101.3413 -4047.0095 4101.9927 C
-4046.6682 4102.125 -4046.2576 4101.9517 -4046.0889 4101.6709 C
-4046.2295 4101.5869 L
f
-4053.4287 4089.7764 m
-4053.1577 4089.5181 L
-4053.4961 4089.4424 L
-4053.3992 4089.54 -4053.5745 4090.0181 -4053.4287 4089.7764 C
f
-4053.5615 4089.4287 m
-4053.4961 4089.4424 L
-4053.5105 4089.4263 -4053.5313 4089.4199 -4053.5615 4089.4287 C
f
-4048.7424 4098.1543 m
-4048.5398 4098.1997 -4048.3777 4098.1816 -4048.1929 4098.0664 C
-4048.2695 4097.9429 -4048.7744 4097.8286 -4048.7424 4098.1543 C
f
-4055.3369 4090.7236 m
-4054.8896 4090.6118 L
-4055.3777 4090.6597 L
-4055.3369 4090.7236 L
f
-4057.4241 4089.6157 m
-4057.5012 4089.4932 L
-4057.8721 4089.7271 L
-4057.7937 4089.8496 L
-4057.4241 4089.6157 L
f
-4054.6943 4102.4326 m
-4054.3911 4102.5024 -4054.1543 4101.917 -4054.2336 4101.7935 C
-4054.8215 4101.8188 L
-4054.6721 4102.3311 -4054.6584 4101.8037 -4054.3176 4101.9336 C
-4054.6943 4102.4326 L
f
-4072.9153 4090.5732 m
-4072.7839 4090.2314 -4072.1409 4090.4292 -4072.1072 4090.7544 C
-4072.1936 4090.8955 -4072.5422 4091.0303 -4072.3232 4091.2373 C
-4071.8145 4090.3975 L
-4071.1377 4090.9209 -4072.3289 4091.5015 -4072.6631 4091.7979 C
-4071.9736 4091.9063 -4071.7693 4091.3545 -4071.0359 4091.3574 C
-4071.2522 4091.2822 -4071.3889 4091.0728 -4071.5032 4090.8926 C
-4071.5281 4090.3013 -4070.8447 4090.563 -4070.3562 4090.5166 C
-4070.6672 4090.2598 -4070.4873 4090.0435 -4070.2607 4089.8115 C
-4070.22 4089.7935 -4070.1929 4089.7593 -4070.1736 4089.7192 C
-4070.1472 4089.6919 -4070.1223 4089.665 -4070.0967 4089.6367 C
-4070.1553 4089.6377 L
-4070.1511 4089.5713 -4070.1641 4089.4912 -4070.2063 4089.3809 C
-4070.6162 4089.5537 -4070.9297 4089.0596 -4071.1936 4089.0518 C
-4070.9329 4090.0132 -4072.0923 4089.2744 -4072.4241 4089.5703 C
-4072.8071 4089.665 L
-4072.9504 4089.667 L
-4072.9792 4089.5615 -4072.9385 4089.4292 -4072.72 4089.2393 C
-4072.9023 4089.4287 -4073.5105 4089.3623 -4073.4543 4089.6709 C
-4074.8423 4089.6846 L
-4074.8855 4089.6455 -4074.9287 4089.5967 -4074.9607 4089.5269 C
-4075.0088 4089.5879 -4075.0168 4089.6377 -4075.0105 4089.6865 C
-4081.0576 4089.748 L
-4080.7593 4089.8232 -4080.5012 4090.0435 -4080.1936 4090.1494 C
-4080.6553 4090.7876 -4079.6892 4090.2646 -4079.8247 4090.8677 C
-4080.0322 4091.0869 -4080.3359 4091.0181 -4080.5168 4090.8716 C
-4080.5842 4091.1763 -4080.3264 4091.4463 -4080.3562 4091.8101 C
-4079.5935 4092.1934 -4079.4768 4090.7349 -4078.7312 4090.957 C
-4078.7607 4091.3223 -4078.9912 4091.6416 -4078.5032 4091.5923 C
-4078.6272 4091.6709 L
-4077.8457 4091.2622 -4078.0183 4092.4966 -4077.5264 4091.4951 C
-4077.5393 4092.0225 L
-4077.1848 4091.625 -4076.4951 4091.6221 -4076.1064 4091.5493 C
-4076.1296 4091.6509 L
-4075.0393 4091.0479 -4075.5176 4091.5225 -4074.2932 4091.2705 C
-4074.8567 4091.8853 L
-4074.4343 4092.1396 -4074.3391 4091.4712 -4074.0359 4091.54 C
-4074.0576 4091.6416 -4073.9873 4092.0269 -4074.2737 4092.123 C
-4072.7881 4091.1851 L
-4072.4336 4090.7876 -4072.8601 4090.7979 -4072.9153 4090.5732 C
f
-4071.0359 4091.3574 m
-4070.9573 4091.3853 -4070.8679 4091.3975 -4070.7625 4091.3774 C
-4070.8643 4091.3604 -4070.9519 4091.3574 -4071.0359 4091.3574 C
f
-4081.4824 4089.7524 m
-4081.0576 4089.748 L
-4081.1892 4089.7158 -4081.3264 4089.7061 -4081.4824 4089.7524 C
f
-4068.9065 4090.2061 m
-4069.1641 4089.9336 -4068.7136 4089.8247 -4068.6687 4089.6221 C
-4069.5913 4089.6318 L
-4069.5872 4089.8354 -4069.6785 4090.0625 -4069.6599 4090.248 C
-4068.9065 4090.2061 L
f
-4069.8584 4089.249 m
-4069.8896 4089.3896 -4069.9873 4089.5166 -4070.0967 4089.6367 C
-4069.5913 4089.6318 L
-4069.5945 4089.479 -4069.6511 4089.3408 -4069.8584 4089.249 C
f
-4069.7607 4100.0894 m
-4069.9241 4100.1079 L
-4070.1711 4100.2646 L
-4069.7607 4100.0894 L
f
-4072.3152 4099.1963 m
-4072.1201 4099.5044 -4071.75 4099.2705 -4071.6262 4099.1924 C
-4072.0527 4099.2017 -4071.8679 4099.0854 -4072.3152 4099.1963 C
f
-4071.7881 4102.4966 m
-4072.1992 4102.6709 L
-4072.1609 4102.7314 L
-4071.7881 4102.4966 L
f
-4084.6223 4091.8281 m
-4084.6897 4091.8398 -4084.7551 4091.8486 -4084.8232 4091.8623 C
-4084.7312 4091.8643 -4084.6711 4091.8496 -4084.6223 4091.8281 C
f
-4081.0945 4091.3252 m
-4082.0752 4090.7334 -4080.4519 4090.833 -4080.76 4090.0752 C
-4081.2937 4090.3262 L
-4081.2483 4090.123 L
-4081.8992 4090.1895 L
-4081.7656 4090.5376 -4081.6653 4090.5591 -4081.6943 4090.9248 C
-4082.5632 4090.7822 -4081.9683 4090.4912 -4082.6057 4090.0303 C
-4083.5769 4090.0967 L
-4083.4983 4089.9873 L
-4083.5801 4089.9951 -4083.6162 4090.041 -4083.6443 4090.1006 C
-4086.9172 4090.3281 L
-4087.5127 4090.6182 -4086.5879 4090.9854 -4087.0271 4091.5225 C
-4086.3369 4091.521 -4085.3113 4091.9102 -4085.2527 4091.1816 C
-4085.2759 4091.2822 -4085.3215 4091.4829 -4085.1816 4091.5688 C
-4084.7825 4090.9692 L
-4085.1631 4090.7783 L
-4084.7617 4090.1807 -4083.4656 4090.3135 -4083.2312 4090.6846 C
-4083.9683 4090.8887 -4083.5984 4091.6084 -4084.6252 4091.2173 C
-4084.5791 4091.4019 -4084.3911 4091.7271 -4084.6223 4091.8281 C
-4083.4192 4091.6157 -4082.3408 4091.9478 -4081.0945 4091.3252 C
f
-4093.1631 4091.6763 m
-4093.1536 4091.6104 L
-4093.1753 4091.6455 -4093.1824 4091.6719 -4093.1631 4091.6763 C
f
-4092.7593 4091.7661 m
-4092.1729 4091.0518 L
-4093.0872 4091.1094 L
-4093.1536 4091.6104 L
-4093.0728 4091.4829 -4092.7522 4091.2295 -4092.6279 4091.4253 C
-4092.7593 4091.7661 L
f
-4091.4919 4090.6201 m
-4091.9641 4090.833 -4091.9385 4091.4229 -4091.6809 4091.6919 C
-4092.1145 4091.9648 -4091.9097 4091.0576 -4092.2083 4091.6807 C
-4092.1985 4092.1064 -4091.6641 4091.8564 -4091.5413 4091.7783 C
-4091.4919 4090.6201 L
f
-4088.0081 4090.9307 m
-4088.1409 4091.1753 L
-4087.8137 4091.2393 L
-4088.0081 4090.9307 L
f
-4088.1409 4091.1753 m
-4088.4656 4091.1094 L
-4088.4431 4091.291 -4088.4209 4091.4683 -4088.3679 4091.5923 C
-4088.1409 4091.1753 L
f
-4089.3176 4090.9395 m
-4089.4551 4090.8955 -4089.6072 4090.8623 -4089.7922 4090.8462 C
-4089.3176 4090.9395 L
f
-4088.9463 4091.0894 m
-4088.9573 4091.0127 L
-4089.3176 4090.9395 L
-4089.1848 4090.9854 -4089.0657 4091.0356 -4088.9463 4091.0894 C
f
-4088.4656 4091.1094 m
-4088.5183 4090.6963 -4088.5801 4090.2622 -4089.0496 4090.3774 C
-4088.9573 4091.0127 L
-4088.4656 4091.1094 L
f
-4074.7783 4101.874 m
-4075.1497 4102.1079 L
-4075.1104 4102.1719 L
-4074.7393 4101.9375 L
-4074.7783 4101.874 L
f
-4076.9209 4101.4966 m
-4077.0127 4101.5688 -4077.0823 4101.6455 -4077.1455 4101.7236 C
-4077.0488 4101.6782 -4076.9719 4101.6094 -4076.9209 4101.4966 C
f
-4078.5137 4104.3188 m
-4078.9504 4103.9033 -4077.9111 4103.7695 -4078.72 4103.5854 C
-4078.7913 4103.1982 -4078.4121 4102.6992 -4078.0313 4102.8916 C
-4078.0615 4103.2559 -4078.4023 4103.125 -4078.1682 4103.4966 C
-4077.9153 4103.0752 -4077.8191 4103.3623 -4077.9072 4102.8135 C
-4077.4817 4102.4712 -4077.4343 4102.0811 -4077.1455 4101.7236 C
-4077.6599 4101.9648 -4078.74 4101.4019 -4079.3928 4102.1064 C
-4079.7527 4102.7661 -4079.5344 4103.667 -4079.5359 4104.6201 C
-4079.4817 4104.8438 -4078.5488 4104.9502 -4078.5137 4104.3188 C
f
-4077.8264 4105.2705 m
-4077.6243 4105.3174 -4077.5625 4105.2793 -4077.4385 4105.1997 C
-4077.4719 4104.874 -4077.6631 4105.2559 -4077.8264 4105.2705 C
f
-4082.4719 4098.0942 m
-4082.5105 4098.2295 -4082.8762 4098.3975 -4082.7976 4098.6318 C
-4082.2432 4098.4604 L
-4082.3733 4098.4385 -4082.4192 4098.2725 -4082.4719 4098.0942 C
f
-4082 4098.3877 m
-4082.2432 4098.4604 L
-4082.1824 4098.4727 -4082.1072 4098.4541 -4082 4098.3877 C
f
-4082.4983 4098.0093 m
-4082.4895 4098.0376 -4082.4817 4098.0664 -4082.4719 4098.0942 C
-4082.4641 4098.0654 -4082.4656 4098.0356 -4082.4983 4098.0093 C
f
-4090.6631 4090.7017 m
-4090.6553 4090.4404 -4090.9023 4090.5967 -4091.0264 4090.6743 C
-4090.9255 4090.6963 -4090.7839 4090.7822 -4090.6631 4090.7017 C
f
-4099.9639 4091.7314 m
-4100.1826 4091.5225 L
-4100.1055 4091.6475 -4100.0654 4091.709 -4099.9639 4091.7314 C
f
-4103.3281 4098.8765 m
-4103.334 4098.9272 -4103.3506 4098.9692 -4103.3721 4099.0093 C
-4103.3506 4098.9771 -4103.335 4098.9336 -4103.3281 4098.8765 c
f
-4103.3721 4099.0093 m
-4103.5215 4099.2271 -4103.9814 4098.8887 -4104.1475 4099.2192 C
-4104.126 4099.1187 L
-4104.4346 4099.3145 L
-4104.1455 4099.2856 -4103.5391 4099.3267 -4103.3721 4099.0093 C
f
U
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 40)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7975.4521 7976.5977 m
-7583.6909 7976.5977 L
-7583.6909 7884.9082 L
-7975.4521 7884.9082 L
-7975.4521 7976.5977 L
n
0 O
0 0 0 1 k
1 XR
-7588.3535 7918.9209 m
-7590.1113 7918.9209 -7709.7817 7921.0918 -7785.6519 7922.4717 C
-7806.4663 7921.5352 -7827.2529 7920.2227 -7848.0547 7918.502 C
-7850.5327 7918.1514 -7853.3472 7917.7949 -7854.8584 7917.6006 c
-7855.7114 7917.4863 -7856.5732 7917.3857 -7857.4375 7917.293 C
-7856.9829 7917.0605 -7856.54 7916.7998 -7856.1167 7916.4941 C
-7855.25 7915.7324 -7854.3955 7914.832 -7853.8735 7913.4541 C
-7853.8979 7913.1689 -7853.6997 7912.8193 -7853.6523 7912.5293 c
-7853.5532 7911.9121 -7853.6382 7911.1631 -7853.7319 7910.627 c
-7853.7939 7910.2725 -7853.9551 7910.0254 -7854.0259 7909.7314 c
-7854.0488 7909.6348 -7853.9785 7909.5762 -7854.0059 7909.502 c
-7854.1396 7909.1484 -7854.5313 7908.5518 -7854.7539 7908.2266 c
-7854.8579 7908.0762 -7854.9873 7907.9775 -7855.1035 7907.8193 c
-7855.1196 7907.7969 -7855.0669 7907.7354 -7855.0928 7907.7061 c
-7855.6484 7907.0664 -7856.4312 7906.541 -7857.3955 7906.0762 c
-7857.4546 7906.0508 -7857.4639 7906.1445 -7857.5366 7906.0869 C
-7857.8213 7905.9658 -7858.1143 7905.8535 -7858.3945 7905.791 c
-7859.8965 7905.4629 -7861.7163 7905.8477 -7862.8027 7906.6328 c
-7863.7998 7907.3555 -7864.5308 7908.8623 -7864.4678 7910.0742 c
-7864.4126 7911.1094 -7863.6665 7912.2578 -7862.4458 7913.0352 c
-7861.3604 7913.7295 -7860.0479 7913.9834 -7859.2373 7913.3594 C
-7859.6499 7913.2295 -7859.9688 7913.0332 -7860.0811 7912.7529 C
-7860.0908 7912.4766 -7860.0967 7912.1992 -7859.8755 7911.8594 C
-7859.4517 7911.4863 -7858.7925 7911.248 -7858.1235 7911.7158 c
-7857.1846 7912.3701 -7857.0728 7913.7891 -7858.0342 7914.5361 C
-7858.3086 7914.6406 -7858.5586 7914.8789 -7858.75 7914.9834 c
-7859.1826 7915.2188 -7859.5586 7915.3857 -7859.9751 7915.543 c
-7861.0938 7915.959 -7862.4839 7916.418 -7863.5327 7916.5977 c
-7863.7114 7916.6289 -7863.8989 7916.6475 -7864.0806 7916.6738 C
-7867.4038 7916.3789 -7870.54 7916.0693 -7873.1416 7915.5264 C
-7873.1138 7915.5234 -7873.0908 7915.5244 -7873.0586 7915.5205 c
-7872.2378 7915.4199 -7871.6309 7915.2529 -7870.9043 7915.0137 c
-7870.6328 7914.9238 -7870.3184 7914.9121 -7870.0825 7914.8154 c
-7869.9985 7914.7852 -7869.9409 7914.6602 -7869.8472 7914.6133 c
-7869.5371 7914.4609 -7869.2129 7914.3662 -7868.8999 7914.1602 c
-7867.9097 7913.5059 -7866.8774 7912.3359 -7866.7617 7910.8682 C
-7866.9463 7909.8262 -7867.3643 7908.8525 -7868.5938 7908.0781 c
-7868.7217 7907.9961 -7868.8662 7907.96 -7868.9995 7907.8828 C
-7870.8516 7907.2168 -7872.5913 7908.3135 -7872.8066 7910.2061 C
-7872.7119 7910.375 -7872.6499 7910.5527 -7872.6616 7910.752 C
-7872.2939 7911.4492 -7870.9033 7912.0557 -7870.3057 7911.6143 C
-7870.6133 7911.5566 -7870.7495 7911.5254 -7870.8638 7911.2637 C
-7870.8892 7910.6074 -7870.0679 7910.4336 -7869.6528 7911.0176 C
-7869.4966 7911.7021 -7869.7676 7912.2529 -7870.2939 7912.8105 c
-7870.5068 7913.0361 -7870.7837 7913.1689 -7871.0566 7913.3545 c
-7871.4199 7913.6016 -7871.7495 7913.8828 -7872.1118 7914.0332 c
-7872.4385 7914.1689 -7872.8115 7914.2012 -7873.1445 7914.2891 c
-7873.2349 7914.3105 -7873.2969 7914.3613 -7873.3706 7914.3789 c
-7873.6274 7914.4336 -7873.8359 7914.5146 -7874.0879 7914.5469 c
-7874.4209 7914.585 -7874.7739 7914.5488 -7875.1528 7914.585 c
-7875.3398 7914.6055 -7875.5195 7914.6953 -7875.7144 7914.7109 c
-7875.8413 7914.7207 -7875.9722 7914.7207 -7876.1025 7914.7227 C
-7878.8135 7913.8213 -7881.0957 7912.6094 -7882.9814 7910.2793 c
-7886.6704 7905.7227 -7881.0415 7901.5566 -7879.9902 7905.5977 C
-7881.9668 7907.0361 -7885.5874 7910.1201 -7877.8892 7910.2471 C
-7869.6045 7908.7549 -7876.6982 7893.4922 -7886.6509 7897.5576 c
-7895.0151 7900.9746 -7891.1328 7909.6387 -7885.4658 7913.293 c
-7876.9902 7918.7559 -7867.5376 7919.4922 -7857.7012 7919.584 C
-7868.3862 7924.0488 -7882.9243 7921.4033 -7890.9897 7913.3809 c
-7895.1011 7909.293 -7899.0435 7902.9912 -7897.8193 7896.8896 c
-7896.5742 7890.6816 -7890.1616 7896.4238 -7895.0957 7896.4424 C
-7894.8896 7902.0059 -7881.6387 7895.9648 -7887.9307 7887.8281 c
-7893.6011 7880.4922 -7903.5698 7888.5225 -7905.3242 7894.9482 c
-7911.0239 7915.8359 -7881.3545 7921.7129 -7867.3813 7922.4238 C
-7879.1143 7925.7754 -7895.3892 7923.2734 -7906.5547 7918.7852 c
-7910.9663 7917.0098 -7915.9707 7913.8926 -7918.5479 7909.7773 c
-7922.4619 7903.5264 -7915.4268 7899.2842 -7914.8955 7901.4033 c
-7914.4697 7903.0957 -7920.3765 7903.623 -7915.8267 7906.6992 c
-7911.8091 7909.418 -7908.2759 7903.209 -7907.4619 7900.0781 c
-7903.6782 7885.5322 -7925.0601 7887.4609 -7927.3667 7901.1982 c
-7932.5103 7931.8271 -7886.3071 7925.457 -7870.4902 7924.5928 C
-7870.7124 7924.7617 -7870.9331 7924.9189 -7871.1543 7925.082 C
-7876.4346 7926.585 -7881.6416 7928.7861 -7886.46 7931.5469 C
-7900.9546 7933.2813 -7913.7495 7922.8906 -7929.5913 7917.6152 c
-7938.5635 7914.6289 -7949.0933 7918.9277 -7957.2778 7914.3145 c
-7961.6235 7911.8545 -7964.6982 7909.2656 -7966.2959 7904.0518 C
-7967.9092 7895.1104 -7958.2979 7893.9717 -7960.1396 7898.6416 C
-7961.8428 7898.9688 -7961.1772 7897.834 -7962.3354 7897.8418 C
-7966.2861 7901.5479 -7958.0244 7906.7314 -7954.1606 7903.4316 c
-7947.4497 7897.7031 -7952.2563 7889.332 -7959.0864 7887.0557 C
-7977.5703 7887.25 -7978 7909.8613 -7972.0474 7922.3594 c
-7956.2217 7955.585 -7922.1445 7943.582 -7894.5376 7936.5479 C
-7898.2817 7939.0732 -7900.8975 7942.6426 -7903.5747 7946.2158 c
-7908.2197 7952.416 -7910.6694 7961.8545 -7902.0024 7965.8613 C
-7901.1616 7969.9834 -7899.6392 7973.8857 -7895.5669 7975.7695 c
-7890.7471 7978 -7885.8457 7975.5586 -7884.5508 7970.4512 C
-7884.4766 7967.6729 -7885.1968 7965.8262 -7887.5938 7964.3887 c
-7889.1733 7963.4414 -7894.5176 7963.5313 -7891.8574 7966.5342 C
-7889.9663 7965.041 -7890.1323 7967.4873 -7891.0112 7968.6006 C
-7893.8823 7968.5693 -7894.5771 7966.4873 -7894.5156 7963.5186 c
-7894.5151 7963.4961 -7894.5142 7963.4697 -7894.5146 7963.4434 C
-7894.3574 7956.1367 -7893.1343 7950.3242 -7891.0718 7945.7285 C
-7891.0713 7945.7305 -7891.0708 7945.7314 -7891.0698 7945.7324 c
-7890.8242 7946.2158 -7890.4819 7946.5 -7890.2485 7946.8945 c
-7890.1729 7947.0234 -7890.2495 7947.1387 -7890.1753 7947.2334 c
-7889.8262 7947.6855 -7888.9971 7948.3701 -7888.5313 7948.7402 c
-7888.3135 7948.9121 -7888.0835 7948.998 -7887.8477 7949.1729 c
-7887.8125 7949.1973 -7887.8613 7949.3105 -7887.8115 7949.3418 c
-7886.7256 7950.0176 -7885.3638 7950.4277 -7883.7661 7950.6709 C
-7883.6699 7950.6816 -7883.6978 7950.543 -7883.5669 7950.5938 C
-7883.1035 7950.6406 -7882.6309 7950.6738 -7882.1982 7950.6387 c
-7879.8862 7950.4453 -7877.4316 7949.084 -7876.2129 7947.4668 c
-7875.0942 7945.9854 -7874.7095 7943.4854 -7875.3379 7941.7646 c
-7875.8774 7940.2949 -7877.4629 7938.9697 -7879.5684 7938.3906 c
-7881.4419 7937.873 -7883.4492 7938.084 -7884.3408 7939.3477 C
-7883.6875 7939.3535 -7883.1406 7939.4941 -7882.8545 7939.8477 C
-7882.7178 7940.2422 -7882.5859 7940.6387 -7882.7539 7941.2266 C
-7883.2002 7941.9541 -7884.0469 7942.5898 -7885.2178 7942.2129 c
-7886.4604 7941.8135 -7887.2119 7940.5781 -7887.0532 7939.3486 C
-7881.7505 7933.2031 -7874.0386 7930.6465 -7865.2539 7930.0537 C
-7865.2886 7930.0684 -7865.3218 7930.0801 -7865.3604 7930.0977 c
-7866.5015 7930.6064 -7867.3027 7931.1143 -7868.2437 7931.7832 c
-7868.5957 7932.0332 -7869.0439 7932.1914 -7869.3428 7932.4316 c
-7869.4492 7932.5166 -7869.4766 7932.7227 -7869.5913 7932.8301 c
-7869.9707 7933.1895 -7870.3975 7933.4688 -7870.7563 7933.9063 c
-7871.8945 7935.2891 -7872.8662 7937.4346 -7872.3809 7939.6016 C
-7871.6523 7941.0234 -7870.6162 7942.2441 -7868.4995 7942.8145 c
-7868.2788 7942.875 -7868.0542 7942.8633 -7867.8276 7942.918 C
-7864.8613 7943.0537 -7862.8369 7940.7021 -7863.3667 7937.875 C
-7863.5781 7937.6738 -7863.7471 7937.4434 -7863.8184 7937.1514 C
-7864.6582 7936.3105 -7866.9336 7936.0508 -7867.5996 7936.9521 C
-7867.1309 7936.9004 -7866.9199 7936.8848 -7866.6387 7937.2109 C
-7866.3105 7938.1475 -7867.4189 7938.7617 -7868.2759 7938.1045 C
-7868.8052 7937.1865 -7868.6587 7936.2695 -7868.1479 7935.2314 c
-7867.9409 7934.8105 -7867.5991 7934.5 -7867.2881 7934.1104 c
-7866.8735 7933.5938 -7866.5239 7933.041 -7866.0669 7932.6621 c
-7865.6563 7932.3232 -7865.1318 7932.1094 -7864.6899 7931.8369 c
-7864.5708 7931.7646 -7864.5039 7931.6641 -7864.4043 7931.6074 c
-7864.0596 7931.4121 -7863.7935 7931.2031 -7863.4438 7931.0469 c
-7862.9819 7930.8418 -7862.4561 7930.7373 -7861.9253 7930.5146 c
-7861.6636 7930.4063 -7861.4443 7930.1953 -7861.1709 7930.085 c
-7861.0063 7930.0215 -7860.8311 7929.9688 -7860.6592 7929.9141 C
-7859.2695 7929.918 -7857.8613 7929.957 -7856.4375 7930.0342 c
-7854.7285 7930.0801 -7852.4653 7930.0938 -7850.5728 7930.166 C
-7818.4688 7926.6533 -7785.98 7925.7305 -7753.4746 7925.2822 C
-7680.0664 7926.6152 -7589.8774 7928.248 -7588.3535 7928.248 c
-7585.7773 7928.248 -7583.6909 7926.1602 -7583.6909 7923.584 c
-7583.6909 7921.0078 -7585.7773 7918.9209 -7588.3535 7918.9209 c
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe Calligraphic Brush Tool/ Kapazitiver Kall) -
(igrafiepinsel/ Adobe ArtOnPath Brush Tool/ Chalk - Scribble/ A) -
(dobe ArtOnPath Brush Tool/ Floral Stem/ Adobe PatternOnPath Br) -
(ush Tool/ Decorative Border/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Chalk - Scribble)
(1 / Unnamed 3/ / / / / 5 0 0 0 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Floral Stem)
(1 / Unnamed Brush Pat 40/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Decorative Border)
(1 / New Pattern 1/ / New Pattern 2/ / / 5 0 0.00392157 0.00392) -
(157 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Kapazitiver Kalligrafiepinsel)
(1 12 12 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 k
(White)
Pc
0 0 0 1 k
(Black)
Pc
0 1 1 0 k
(CMYK Red)
Pc
0 0 1 0 k
(CMYK Yellow)
Pc
1 0 1 0 k
(CMYK Green)
Pc
1 0 0 0 k
(CMYK Cyan)
Pc
1 1 0 0 k
(CMYK Blue)
Pc
0 1 0 0 k
(CMYK Magenta)
Pc
0.15 1 0.9 0.1 k
(C=15 M=100 Y=90 K=10)
Pc
0 0.9 0.85 0 k
(C=0 M=90 Y=85 K=0)
Pc
0 0.8 0.95 0 k
(C=0 M=80 Y=95 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
0 0.35 0.85 0 k
(C=0 M=35 Y=85 K=0)
Pc
0.05 0 0.9 0 k
(C=5 M=0 Y=90 K=0)
Pc
0.2 0 1 0 k
(C=20 M=0 Y=100 K=0)
Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0)
Pc
0.75 0 1 0 k
(C=75 M=0 Y=100 K=0)
Pc
0.85 0.1 1 0.1 k
(C=85 M=10 Y=100 K=10)
Pc
0.9 0.3 0.95 0.3 k
(C=90 M=30 Y=95 K=30)
Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0)
Pc
0.8 0.1 0.45 0 k
(C=80 M=10 Y=45 K=0)
Pc
0.7 0.15 0 0 k
(C=70 M=15 Y=0 K=0)
Pc
0.85 0.5 0 0 k
(C=85 M=50 Y=0 K=0)
Pc
1 0.95 0.05 0 k
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.25 0.25 k
(C=100 M=100 Y=25 K=25)
Pc
0.75 1 0 0 k
(C=75 M=100 Y=0 K=0)
Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0)
Pc
0.35 1 0.35 0.1 k
(C=35 M=100 Y=35 K=10)
Pc
0.1 1 0.5 0 k
(C=10 M=100 Y=50 K=0)
Pc
0 0.95 0.2 0 k
(C=0 M=95 Y=20 K=0)
Pc
0.25 0.25 0.4 0 k
(C=25 M=25 Y=40 K=0)
Pc
0.4 0.45 0.5 0.05 k
(C=40 M=45 Y=50 K=5)
Pc
0.5 0.5 0.6 0.25 k
(C=50 M=50 Y=60 K=25)
Pc
0.55 0.6 0.65 0.4 k
(C=55 M=60 Y=65 K=40)
Pc
0.25 0.4 0.65 0 k
(C=25 M=40 Y=65 K=0)
Pc
0.3 0.5 0.75 0.1 k
(C=30 M=50 Y=75 K=10)
Pc
0.35 0.6 0.8 0.25 k
(C=35 M=60 Y=80 K=25)
Pc
0.4 0.65 0.9 0.35 k
(C=40 M=65 Y=90 K=35)
Pc
0.4 0.7 1 0.5 k
(C=40 M=70 Y=100 K=50)
Pc
0.5 0.7 0.8 0.7 k
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade to Black)
Pc
Bb
0 0 0 0 Bh
2 (Super Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Super Soft Black Vignette)
Pc
Bb
2 (Green, Yellow, Orange) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Green, Yellow, Orange)
Pc
Bb
0 0 0 0 Bh
2 (Purple Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Purple Radial)
Pc
(Laguna) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Laguna)
Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100)
Pc
0 0 0 0.899994 k
(C=0 M=0 Y=0 K=90)
Pc
0 0 0 0.799988 k
(C=0 M=0 Y=0 K=80)
Pc
0 0 0 0.699997 k
(C=0 M=0 Y=0 K=70)
Pc
0 0 0 0.599991 k
(C=0 M=0 Y=0 K=60)
Pc
0 0 0 0.5 k
(C=0 M=0 Y=0 K=50)
Pc
0 0 0 0.399994 k
(C=0 M=0 Y=0 K=40)
Pc
0 0 0 0.299988 k
(C=0 M=0 Y=0 K=30)
Pc
0 0 0 0.199997 k
(C=0 M=0 Y=0 K=20)
Pc
0 0 0 0.099991 k
(C=0 M=0 Y=0 K=10)
Pc
0 0 0 0.049988 k
(C=0 M=0 Y=0 K=5)
Pc
0 1 1 0 k
(C=0 M=100 Y=100 K=0)
Pc
0 0.75 1 0 k
(C=0 M=75 Y=100 K=0)
Pc
0 0.1 0.95 0 k
(C=0 M=10 Y=95 K=0)
Pc
0.85 0.1 1 0 k
(C=85 M=10 Y=100 K=0)
Pc
1 0.9 0 0 k
(C=100 M=90 Y=0 K=0)
Pc
0.6 0.9 0.000031 0.000031 k
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
%_u
%_0 R
%_0 0 0 1 K
%_0 J 0 j 1 w 10 M []0 d%_0 XR
%_33.5349 -134.9966 m
%_47.3334 -145.1978 56.8576 -163.442 73.9074 -165.3838 c
%_83.8177 -166.5125 93.2798 -161.5064 101.9978 -156.6602 c
%_134.6626 -138.5026 168.5682 -119.2276 189.3432 -88.1617 c
%_190.7026 -86.1289 192.0982 -83.9614 194.273 -82.8429 c
%_196.5516 -81.671 199.265 -81.8673 201.8136 -82.1323 c
%_218.8046 -83.8985 235.7554 -87.4355 252.8061 -86.3919 c
%_287.6049 -84.2621 318.3327 -63.4808 345.0794 -41.1176 c
%_349.1356 -37.7262 356.0067 -34.5943 358.834 -39.0622 c
%_359.6648 -40.3752 359.781 -42.0014 359.8704 -43.5527 c
%_360.9635 -62.5321 361.519 -81.5426 361.5359 -100.5535 c
%_361.5429 -108.3589 361.4403 -116.2928 359.1576 -123.7569 c
%_354.3345 -139.5282 340.0667 -151.1772 324.3523 -156.1825 c
%_308.638 -161.1878 291.6268 -160.3604 275.3751 -157.5535 C
%_283.8872 -170.6805 294.854 -182.21 307.539 -191.3677 c
%_314.3965 -196.3183 321.9998 -200.6691 330.3807 -201.8061 c
%_345.1141 -203.8051 359.1277 -195.7074 371.7924 -187.918 C
%_365.9143 -199.6951 353.839 -206.8664 342.3453 -213.2808 c
%_317.8098 -226.9735 289.8693 -240.624 262.7346 -233.3309 c
%_244.2399 -228.36 229.7373 -214.4747 215.2596 -201.9382 c
%_212.064 -199.1711 208.7093 -196.3797 204.6669 -195.1432 c
%_200.4723 -193.8602 195.9634 -194.3803 191.6165 -194.9677 c
%_171.9051 -197.6313 152.3486 -201.4399 133.0782 -206.3679 c
%_113.3476 -211.4136 91.4536 -217.4201 73.519 -207.7709 c
%_63.3305 -202.2893 56.2107 -192.514 50.2379 -182.6055 c
%_41.3143 -167.8017 34.1318 -151.9494 28.8856 -135.4794 c
%_S
%_U
0 Ap
0 A
u
0 O
0 0 0 1 k
0 J 0 j 1 w 10 M []0 d0 XR
31.7683 -138.0187 m
43.3601 -146.8317 51.2516 -160.6283 64.9991 -166.5391 c
81.7846 -173.7562 98.0343 -162.9402 112.3043 -154.9132 c
142.1424 -138.129 172.2403 -119.3919 191.9096 -90.5999 c
193.4866 -88.2915 194.7091 -86.1213 197.6663 -85.5495 c
199.8589 -85.1256 202.4627 -85.6946 204.6451 -85.9434 c
210.0005 -86.554 215.3379 -87.3086 220.6831 -88.0008 c
230.7008 -89.298 240.7949 -90.4095 250.912 -89.9894 c
268.1299 -89.2743 284.7398 -84.0072 300.049 -76.2815 c
316.0219 -68.221 330.5553 -57.5662 344.3506 -46.2458 c
346.7083 -44.3111 351.3258 -39.5117 354.8339 -40.4486 c
357.6534 -41.2016 356.9476 -54.563 357.068 -57.3014 c
357.5287 -67.78 357.824 -78.2661 357.9563 -88.7539 c
358.0971 -99.9199 359.1168 -112.0112 355.7826 -122.8265 c
353.0569 -131.668 346.9635 -139.2508 339.5296 -144.6461 c
321.2551 -157.9093 297.6665 -157.7632 276.3056 -154.1785 c
273.5516 -153.7164 270.5179 -156.5311 272.353 -159.32 c
283.2863 -175.9367 298.4854 -192.2438 316.6246 -201.0328 c
336.8942 -210.8541 355.882 -201.7776 373.5589 -190.9402 C
371.9627 -189.3439 370.3664 -187.7477 368.7702 -186.1515 C
362.9864 -197.1283 352.3993 -203.6059 341.9072 -209.515 c
329.5822 -216.4563 316.9519 -223.1865 303.4419 -227.5281 c
290.6045 -231.6536 276.8705 -233.5052 263.6651 -229.9559 c
250.9773 -226.5457 240.1567 -218.6339 230.2426 -210.2998 c
221.8305 -203.2284 213.082 -192.1651 201.4695 -190.9919 c
195.3845 -190.3772 189.0545 -191.7798 183.0639 -192.6809 c
176.0845 -193.7308 169.1267 -194.9244 162.1964 -196.2606 c
148.1404 -198.9707 134.3621 -202.6538 120.4379 -205.9231 c
107.5748 -208.9432 93.4135 -211.534 80.5659 -207.0553 c
66.8254 -202.2653 58.4258 -189.7891 51.4387 -177.7613 c
43.491 -164.08 37.1223 -149.6007 32.2606 -134.549 c
30.8816 -130.2797 24.1204 -132.1058 25.5106 -136.4098 c
30.0015 -150.3135 35.7234 -163.811 42.7564 -176.6235 c
48.8182 -187.6668 55.6643 -199.0419 65.7796 -206.855 c
88.5714 -224.4595 118.4591 -213.318 143.3548 -207.4459 c
158.9638 -203.7642 174.7514 -200.7904 190.6399 -198.604 c
198.0587 -197.5831 204.1623 -197.4868 210.3499 -202.3579 c
215.9451 -206.7625 221.0851 -211.7651 226.5657 -216.3143 c
236.2339 -224.3394 246.6243 -231.7993 258.672 -235.7683 c
272.1283 -240.2013 286.6013 -239.4297 300.1441 -235.8027 c
315.6709 -231.6444 330.1508 -224.1016 344.1118 -216.3029 c
356.0639 -209.6264 368.2351 -202.1713 374.8145 -189.6845 c
376.3878 -186.6987 373.1342 -182.9902 370.0258 -184.8959 c
361.9682 -189.8359 353.6886 -194.886 344.4655 -197.3091 c
334.8643 -199.8316 325.7479 -198.2295 317.1536 -193.4152 c
301.4441 -184.6152 288.2229 -170.7202 278.3973 -155.787 C
277.0797 -157.5008 275.7622 -159.2147 274.4447 -160.9285 C
293.93 -164.1984 314.5614 -164.9792 332.9324 -156.5734 c
347.5426 -149.8884 359.9339 -137.22 363.4389 -121.2112 c
365.6838 -110.9573 365.089 -100.1587 364.9677 -89.7372 c
364.8343 -78.2659 364.5052 -66.7968 363.9798 -55.3367 c
363.6762 -48.7132 365.4863 -36.3347 357.2453 -33.718 c
350.2594 -31.4999 343.6099 -37.8596 338.7565 -41.8249 c
323.5103 -54.2811 307.1684 -65.868 289.0422 -73.759 c
270.0979 -82.0062 250.5823 -84.2573 230.1187 -82.1265 c
224.7595 -81.5685 219.421 -80.8333 214.0799 -80.1274 c
208.8377 -79.4345 203.2417 -78.1764 197.9461 -78.4703 c
188.8654 -78.9743 185.1813 -88.5599 180.1551 -94.7888 c
168.4664 -109.2742 153.7722 -120.991 138.2858 -131.1698 c
129.3798 -137.0235 120.1827 -142.4184 110.9083 -147.6634 c
101.1963 -153.1559 90.4862 -160.8698 79.1105 -161.9428 c
60.1709 -163.7293 48.5 -142.009 35.3014 -131.9744 c
31.7159 -129.2485 28.2247 -135.3246 31.7683 -138.0187 c
31.7683 -138.0187 l
f
U
(Adobe Calligraphic Brush Tool) 1 0 55 XP
%080706054B65253F6DB1363E2CD9953E000000000000E040000000000000
%C842000000000000000000000000372070742E20526F756E64
/Adobe_Brushed_Path () XT
%_u
%_0 R
%_0 0 0 1 K
%_214.406 -129.4971 m
%_216.6599 -135.7839 221.0647 -141.2771 226.7115 -144.8432 c
%_229.2086 -146.4201 232.0091 -147.6456 234.9578 -147.8112 c
%_239.1069 -148.0443 243.0683 -146.1825 246.6972 -144.1576 c
%_250.2513 -142.1744 253.7574 -139.934 256.3413 -136.7895 c
%_258.9251 -133.6449 260.4894 -129.4415 259.6505 -125.459 c
%_258.5355 -120.1654 253.6588 -116.5904 248.9268 -113.9687 c
%_245.2903 -111.9538 241.3643 -110.1506 237.2072 -110.1004 c
%_234.3686 -110.0661 231.5918 -110.8533 228.8623 -111.6338 c
%_224.0535 -113.0089 219.0246 -114.5097 215.4812 -118.0396 c
%_211.9378 -121.5694 210.5612 -127.8123 213.8876 -131.5474 c
%_S
%_U
0 Ap
0 A
u
0 O
0 0 0 1 k
0 J 0 j 1 w 10 M []0 d0 XR
211.0311 -130.4276 m
215.5478 -142.0552 227.4437 -154.5267 241.108 -150.4836 c
252.2976 -147.1728 267.2542 -136.1168 262.4546 -122.7088 c
260.3172 -116.7378 254.5137 -112.8642 249.1173 -110.1005 c
241.9499 -106.4298 235.6082 -106.0873 227.9319 -108.2588 c
221.9606 -109.948 215.3768 -112.0685 211.5483 -117.2991 c
208.1038 -122.0052 207.3006 -128.4697 210.8655 -133.3139 c
213.5074 -136.9041 219.585 -133.4163 216.9097 -129.7809 c
210.3989 -120.9333 225.4415 -116.0988 231.4362 -114.5463 c
237.3115 -113.0247 241.9118 -114.0646 247.1603 -116.9908 c
250.6512 -118.9372 254.716 -121.4144 255.973 -125.4467 c
258.7614 -134.3905 245.6312 -142.3462 238.3907 -143.9509 c
229.0412 -146.0229 220.8107 -136.3662 217.781 -128.5667 c
216.1674 -124.4127 209.3962 -126.2188 211.0311 -130.4276 c
211.0311 -130.4276 l
f
U
(Adobe Calligraphic Brush Tool) 1 0 55 XP
%0807060515918A3E2F99173F19658C3E000000000000E040000000000000
%C842000000000000000000000000372070742E20526F756E64
/Adobe_Brushed_Path () XT
%_u
%_0 R
%_0 0 0 1 K
%_36.2441 -246.7509 m
%_46.0236 -265.0684 67.8191 -274.8469 88.5779 -274.354 c
%_109.3367 -273.8611 129.0122 -264.5301 145.8785 -252.4182 c
%_155.8761 -245.2387 165.7457 -236.7549 177.8946 -234.7795 c
%_193.2011 -232.2907 207.8955 -240.6988 221.4885 -248.163 c
%_248.7983 -263.1594 278.5888 -275.7655 309.7451 -275.7237 c
%_340.9013 -275.6819 373.6377 -260.4878 386.9472 -232.3174 C
%_390.6644 -238.0095 389.6347 -245.4846 388.0737 -252.1013 c
%_382.2791 -276.6618 371.1705 -299.5912 360.1454 -322.2902 c
%_356.5749 -329.6413 352.6755 -337.3698 345.7649 -341.7321 c
%_338.9095 -346.0596 330.3089 -346.2907 322.2066 -346.0162 c
%_290.6971 -344.949 259.3883 -338.2087 230.231 -326.2153 C
%_242.8403 -341.4408 255.5854 -356.7992 271.2054 -368.9163 c
%_286.8254 -381.0335 305.781 -389.8093 325.5499 -389.8442 C
%_305.866 -386.7541 285.8226 -387.2763 265.9131 -386.4892 c
%_246.0037 -385.702 225.7509 -383.4945 207.5593 -375.366 c
%_189.3678 -367.2376 173.33 -352.3616 167.9578 -333.1745 c
%_165.6475 -324.9234 164.6221 -315.024 157.3179 -310.5445 c
%_154.5881 -308.8704 151.3439 -308.2636 148.1598 -307.9225 c
%_131.84 -306.1743 115.2708 -310.5953 99.0078 -308.3803 c
%_82.9177 -306.1887 68.1553 -297.5004 56.7672 -285.9244 c
%_45.3791 -274.3483 37.1385 -260.0067 30.7156 -245.0922 C
%_31.8052 -243.8537 33.8588 -243.617 35.2016 -244.5752 c
%_S
%_U
0 Ap
0 A
u
0 O
0 0 0 1 k
0 J 0 j 1 w 10 M []0 d0 XR
33.222 -248.5174 m
44.9741 -269.691 70.1569 -279.7077 93.605 -277.563 c
107.1051 -276.3282 120.0188 -271.7574 131.9026 -265.3463 c
144.0618 -258.7867 154.2172 -249.2255 166.3022 -242.6422 c
180.7101 -234.7934 195.0006 -238.3581 208.9361 -245.3957 c
221.7414 -251.8625 234.0505 -259.0993 247.263 -264.7684 c
272.5514 -275.6187 300.4346 -282.4753 327.9607 -277.5399 c
353.6596 -272.9321 378.3007 -258.0706 389.9694 -234.0839 C
387.9546 -234.0839 385.9398 -234.0839 383.9251 -234.0839 C
388.6731 -242.3131 384.3365 -253.4939 381.8302 -261.8531 c
378.9155 -271.5744 375.2701 -281.0679 371.2357 -290.3757 c
367.312 -299.4278 363.0394 -308.3236 358.7366 -317.2 c
355.1653 -324.5676 351.7487 -333.1569 344.872 -338.0904 c
337.3551 -343.4833 327.2728 -342.7856 318.5006 -342.3645 c
308.3155 -341.8757 298.1605 -340.8016 288.105 -339.108 c
268.5741 -335.8187 249.4993 -330.3077 231.1615 -322.8403 c
227.5713 -321.3783 225.8086 -326.3389 227.7562 -328.6902 c
252.9424 -359.0962 282.8102 -392.7313 325.5499 -393.3442 c
329.3769 -393.399 330.4659 -387.0712 326.4804 -386.4692 c
280.2911 -379.4916 220.8721 -393.0908 184.9106 -355.4022 c
177.5046 -347.6404 172.8693 -338.6 170.3048 -328.2402 c
168.2285 -319.8527 165.8524 -310.5257 157.2613 -306.5941 c
146.6906 -301.7566 132.8358 -304.1784 121.6669 -304.9654 c
109.0214 -305.8565 96.712 -305.7831 84.7913 -300.9406 c
59.7293 -290.7598 44.1377 -267.2066 33.7378 -243.3257 C
33.3192 -244.9219 32.9007 -246.5182 32.4822 -248.1144 C
32.7998 -247.942 33.1174 -247.7697 33.4351 -247.5974 C
37.5135 -249.4189 41.0782 -243.3888 36.9681 -241.5531 c
34.1333 -240.2869 31.5353 -240.1059 28.9491 -242.0701 c
27.3012 -243.3216 26.8564 -244.9366 27.6935 -246.8587 c
36.8831 -267.9606 49.7967 -288.0749 69.4714 -300.7791 c
78.9385 -306.8921 89.6578 -310.93 100.8856 -312.1071 c
114.1433 -313.497 127.3527 -310.8531 140.6119 -311.007 c
146.3728 -311.0739 153.6539 -310.909 157.8631 -315.5188 c
161.398 -319.3901 162.3387 -325.1885 163.5548 -330.1011 c
165.9765 -339.8839 170.1016 -348.6188 176.5043 -356.4486 c
190.8115 -373.945 212.4829 -383.0586 234.2689 -386.9015 c
264.1364 -392.17 294.6838 -388.6969 324.6195 -393.2191 C
324.9296 -390.9275 325.2398 -388.6358 325.5499 -386.3442 C
284.9044 -385.7614 256.5617 -352.5402 232.7059 -323.7404 C
231.5708 -325.6904 230.4357 -327.6403 229.3006 -329.5903 C
245.3439 -336.1233 261.9473 -341.1726 278.947 -344.5244 c
295.3676 -347.762 312.7982 -350.2706 329.5721 -349.5245 c
336.497 -349.2165 343.4621 -347.7926 349.1467 -343.6242 c
354.7084 -339.5458 358.3785 -333.5692 361.4573 -327.5153 c
369.1415 -312.4055 376.4292 -296.9341 382.5577 -281.1235 c
385.9976 -272.249 389.0097 -263.1889 391.2319 -253.9288 c
393.124 -246.0444 394.1934 -237.8717 389.9694 -230.5509 c
388.729 -228.4011 385.0956 -228.1446 383.9251 -230.5509 c
373.638 -251.6973 352.8754 -264.8658 330.3786 -269.9257 c
304.4113 -275.7663 277.4725 -269.6952 253.2938 -259.7687 c
239.691 -254.184 227.0609 -246.8982 214.0352 -240.1548 c
203.1525 -234.5209 191.1631 -229.5719 178.6623 -231.1722 c
166.3483 -232.7487 156.438 -240.3769 146.7187 -247.4987 c
136.1085 -255.2734 124.7588 -262.1745 112.2455 -266.4254 c
86.4274 -275.1962 53.6163 -270.8384 39.2663 -244.9844 c
37.0797 -241.0449 31.0317 -244.5713 33.222 -248.5174 c
33.222 -248.5174 l
f
U
(Adobe Calligraphic Brush Tool) 1 0 55 XP
%08070605BD895E3F662D333F3A291D3E000000000000E040000000000000
%C842000000000000000000000000372070742E20526F756E64
/Adobe_Brushed_Path () XT
%_u
%_0 R
%_0 0 0 1 K
%_191.5852 -272.1664 m
%_188.5797 -275.8026 187.0484 -280.6231 187.4045 -285.3271 c
%_187.7606 -290.0312 190.0001 -294.5662 193.5188 -297.7085 c
%_196.9923 -300.8106 201.5517 -302.5009 206.1594 -303.1778 c
%_210.3495 -303.7934 214.6543 -303.6192 218.781 -302.6672 c
%_220.4275 -302.2873 222.1839 -301.6845 223.0913 -300.2591 c
%_223.9831 -298.8582 223.809 -297.0431 223.4467 -295.4225 c
%_221.2319 -285.5145 213.4117 -277.7692 204.8872 -272.255 c
%_203.1574 -271.1361 201.3421 -270.0664 199.3263 -269.6414 c
%_195.2426 -268.7804 191.136 -270.6718 187.3903 -272.5123 c
%_S
%_U
0 Ap
0 A
u
0 O
0 0 0 1 k
0 J 0 j 1 w 10 M []0 d0 XR
188.5631 -270.3999 m
181.3546 -279.9496 182.763 -293.6389 192.2405 -301.1657 c
196.4853 -304.5367 201.7331 -306.1861 207.0604 -306.7855 c
212.2462 -307.3691 220.079 -307.4668 224.3873 -303.9318 c
232.6202 -297.1765 222.12 -282.7346 216.9397 -277.4637 c
212.9523 -273.4065 207.8809 -269.1896 202.5689 -267.0495 c
196.6613 -264.6695 191.0421 -266.879 185.6238 -269.4902 c
181.5669 -271.4453 185.113 -277.4833 189.1569 -275.5345 c
193.9354 -273.2316 197.6484 -271.9232 202.4631 -274.8668 c
205.4854 -276.7146 208.3327 -278.8881 210.8941 -281.3368 c
213.711 -284.0297 224.0606 -295.778 218.4708 -299.1242 c
215.4784 -300.9155 208.7784 -300.1634 205.5572 -299.5391 c
202.1303 -298.8749 198.6436 -297.5769 195.9936 -295.2336 c
189.4935 -289.486 189.6375 -280.517 194.6074 -273.9329 c
197.3217 -270.3371 191.2464 -266.845 188.5631 -270.3999 c
188.5631 -270.3999 l
f
U
(Adobe Calligraphic Brush Tool) 1 0 55 XP
%080706056A35B53EBEED5E3F5435AA3E000000000000E040000000000000
%C842000000000000000000000000372070742E20526F756E64
/Adobe_Brushed_Path () XT
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
